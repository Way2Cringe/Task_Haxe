// Generated by Haxe 4.3.1
#ifndef INCLUDED_XmlSerializer
#define INCLUDED_XmlSerializer

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(Xml)
HX_DECLARE_CLASS0(XmlSerializer)



class HXCPP_CLASS_ATTRIBUTES XmlSerializer_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef XmlSerializer_obj OBJ_;
		XmlSerializer_obj();

	public:
		enum { _hx_ClassId = 0x576a0085 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="XmlSerializer")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"XmlSerializer"); }

		inline static ::hx::ObjectPtr< XmlSerializer_obj > __new() {
			::hx::ObjectPtr< XmlSerializer_obj > __this = new XmlSerializer_obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< XmlSerializer_obj > __alloc(::hx::Ctx *_hx_ctx) {
			XmlSerializer_obj *__this = (XmlSerializer_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(XmlSerializer_obj), false, "XmlSerializer"));
			*(void **)__this = XmlSerializer_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~XmlSerializer_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("XmlSerializer",29,db,52,ac); }

		static  ::Xml Serialize( ::Dynamic obj);
		static ::Dynamic Serialize_dyn();

		static  ::Dynamic Deserialize( ::Xml xml);
		static ::Dynamic Deserialize_dyn();

};


#endif /* INCLUDED_XmlSerializer */ 
