// Generated by Haxe 4.3.1
#ifndef INCLUDED_controller_MainController
#define INCLUDED_controller_MainController

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(controller,GridPageController)
HX_DECLARE_CLASS1(controller,MainController)
HX_DECLARE_CLASS1(controller,PanelController)
HX_DECLARE_CLASS1(controller,ScreenPageController)
HX_DECLARE_CLASS2(lime,app,IModule)
HX_DECLARE_CLASS2(openfl,display,DisplayObject)
HX_DECLARE_CLASS2(openfl,display,DisplayObjectContainer)
HX_DECLARE_CLASS2(openfl,display,IBitmapDrawable)
HX_DECLARE_CLASS2(openfl,display,InteractiveObject)
HX_DECLARE_CLASS2(openfl,display,Stage)
HX_DECLARE_CLASS2(openfl,events,Event)
HX_DECLARE_CLASS2(openfl,events,EventDispatcher)
HX_DECLARE_CLASS2(openfl,events,IEventDispatcher)

namespace controller{


class HXCPP_CLASS_ATTRIBUTES MainController_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef MainController_obj OBJ_;
		MainController_obj();

	public:
		enum { _hx_ClassId = 0x490a0071 };

		void __construct( ::openfl::display::Stage stage);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="controller.MainController")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"controller.MainController"); }
		static ::hx::ObjectPtr< MainController_obj > __new( ::openfl::display::Stage stage);
		static ::hx::ObjectPtr< MainController_obj > __alloc(::hx::Ctx *_hx_ctx, ::openfl::display::Stage stage);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~MainController_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("MainController",55,4a,97,4e); }

		static void __boot();
		static Float displayHeight;
		 ::controller::PanelController panelController;
		 ::controller::GridPageController gridPageController;
		 ::controller::ScreenPageController screenPageController;
		 ::openfl::display::DisplayObjectContainer panelDisplay;
		 ::openfl::display::DisplayObjectContainer windowDisplay;
		 ::openfl::display::Stage stage;
		void Start();
		::Dynamic Start_dyn();

		void onPanelClick(int GridPageId);
		::Dynamic onPanelClick_dyn();

		void onStageResize( ::openfl::events::Event event);
		::Dynamic onStageResize_dyn();

		void onGridButtonClick(int screenPageId);
		::Dynamic onGridButtonClick_dyn();

		void resize();
		::Dynamic resize_dyn();

};

} // end namespace controller

#endif /* INCLUDED_controller_MainController */ 
