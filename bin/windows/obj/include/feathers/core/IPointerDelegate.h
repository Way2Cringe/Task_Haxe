// Generated by Haxe 4.3.1
#ifndef INCLUDED_feathers_core_IPointerDelegate
#define INCLUDED_feathers_core_IPointerDelegate

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(feathers,core,IPointerDelegate)
HX_DECLARE_CLASS2(openfl,display,DisplayObject)
HX_DECLARE_CLASS2(openfl,display,IBitmapDrawable)
HX_DECLARE_CLASS2(openfl,display,InteractiveObject)
HX_DECLARE_CLASS2(openfl,events,EventDispatcher)
HX_DECLARE_CLASS2(openfl,events,IEventDispatcher)

namespace feathers{
namespace core{


class HXCPP_CLASS_ATTRIBUTES IPointerDelegate_obj {
	public:
		typedef ::hx::Object super;
		HX_DO_INTERFACE_RTTI;

		 ::openfl::display::InteractiveObject (::hx::Object :: *_hx_get_pointerTarget)(); 
		static inline  ::openfl::display::InteractiveObject get_pointerTarget( ::Dynamic _hx_) {
			return (_hx_.mPtr->*( ::hx::interface_cast< ::feathers::core::IPointerDelegate_obj *>(_hx_.mPtr->_hx_getInterface(0x2cbe5668)))->_hx_get_pointerTarget)();
		}
		 ::openfl::display::InteractiveObject (::hx::Object :: *_hx_set_pointerTarget)( ::openfl::display::InteractiveObject value); 
		static inline  ::openfl::display::InteractiveObject set_pointerTarget( ::Dynamic _hx_, ::openfl::display::InteractiveObject value) {
			return (_hx_.mPtr->*( ::hx::interface_cast< ::feathers::core::IPointerDelegate_obj *>(_hx_.mPtr->_hx_getInterface(0x2cbe5668)))->_hx_set_pointerTarget)(value);
		}
};

} // end namespace feathers
} // end namespace core

#endif /* INCLUDED_feathers_core_IPointerDelegate */ 
