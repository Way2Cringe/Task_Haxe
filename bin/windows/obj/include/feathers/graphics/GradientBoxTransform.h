// Generated by Haxe 4.3.1
#ifndef INCLUDED_feathers_graphics_GradientBoxTransform
#define INCLUDED_feathers_graphics_GradientBoxTransform

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(feathers,graphics,GradientBoxTransform)
namespace feathers{
namespace graphics{


class GradientBoxTransform_obj : public ::hx::EnumBase_obj
{
	typedef ::hx::EnumBase_obj super;
		typedef GradientBoxTransform_obj OBJ_;

	public:
		GradientBoxTransform_obj() {};
		HX_DO_ENUM_RTTI;
		static void __boot();
		static void __register();
		static bool __GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		::String GetEnumName( ) const { return HX_("feathers.graphics.GradientBoxTransform",96,74,6c,0d); }
		::String __ToString() const { return HX_("GradientBoxTransform.",fd,3e,cb,76) + _hx_tag; }

		static ::feathers::graphics::GradientBoxTransform RotateDegrees(Float rotation);
		static ::Dynamic RotateDegrees_dyn();
		static ::feathers::graphics::GradientBoxTransform RotateDegreesAndTranslate(Float rotation,Float tx,Float ty);
		static ::Dynamic RotateDegreesAndTranslate_dyn();
		static ::feathers::graphics::GradientBoxTransform RotateRadians(Float rotation);
		static ::Dynamic RotateRadians_dyn();
		static ::feathers::graphics::GradientBoxTransform RotateRadiansAndTranslate(Float rotation,Float tx,Float ty);
		static ::Dynamic RotateRadiansAndTranslate_dyn();
		static ::feathers::graphics::GradientBoxTransform Translate(Float tx,Float ty);
		static ::Dynamic Translate_dyn();
};

} // end namespace feathers
} // end namespace graphics

#endif /* INCLUDED_feathers_graphics_GradientBoxTransform */ 
