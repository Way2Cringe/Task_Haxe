// Generated by Haxe 4.3.1
#ifndef INCLUDED_feathers_layout__AnchorLayout_AbstractAnchor_Impl_
#define INCLUDED_feathers_layout__AnchorLayout_AbstractAnchor_Impl_

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(feathers,layout,Anchor)
HX_DECLARE_CLASS3(feathers,layout,_AnchorLayout,AbstractAnchor_Impl_)
HX_DECLARE_CLASS2(openfl,display,DisplayObject)
HX_DECLARE_CLASS2(openfl,display,IBitmapDrawable)
HX_DECLARE_CLASS2(openfl,events,EventDispatcher)
HX_DECLARE_CLASS2(openfl,events,IEventDispatcher)

namespace feathers{
namespace layout{
namespace _AnchorLayout{


class HXCPP_CLASS_ATTRIBUTES AbstractAnchor_Impl__obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef AbstractAnchor_Impl__obj OBJ_;
		AbstractAnchor_Impl__obj();

	public:
		enum { _hx_ClassId = 0x6f6822c3 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="feathers.layout._AnchorLayout.AbstractAnchor_Impl_")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"feathers.layout._AnchorLayout.AbstractAnchor_Impl_"); }

		inline static ::hx::ObjectPtr< AbstractAnchor_Impl__obj > __new() {
			::hx::ObjectPtr< AbstractAnchor_Impl__obj > __this = new AbstractAnchor_Impl__obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< AbstractAnchor_Impl__obj > __alloc(::hx::Ctx *_hx_ctx) {
			AbstractAnchor_Impl__obj *__this = (AbstractAnchor_Impl__obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(AbstractAnchor_Impl__obj), false, "feathers.layout._AnchorLayout.AbstractAnchor_Impl_"));
			*(void **)__this = AbstractAnchor_Impl__obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~AbstractAnchor_Impl__obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("AbstractAnchor_Impl_",f7,80,fc,50); }

		static  ::feathers::layout::Anchor fromPixels(Float pixels);
		static ::Dynamic fromPixels_dyn();

		static  ::feathers::layout::Anchor fromDisplayObject( ::openfl::display::DisplayObject relativeTo);
		static ::Dynamic fromDisplayObject_dyn();

};

} // end namespace feathers
} // end namespace layout
} // end namespace _AnchorLayout

#endif /* INCLUDED_feathers_layout__AnchorLayout_AbstractAnchor_Impl_ */ 
