// Generated by Haxe 4.3.1
#ifndef INCLUDED_feathers_layout_Breakpoint
#define INCLUDED_feathers_layout_Breakpoint

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(feathers,layout,Breakpoint)
namespace feathers{
namespace layout{


class Breakpoint_obj : public ::hx::EnumBase_obj
{
	typedef ::hx::EnumBase_obj super;
		typedef Breakpoint_obj OBJ_;

	public:
		Breakpoint_obj() {};
		HX_DO_ENUM_RTTI;
		static void __boot();
		static void __register();
		static bool __GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		::String GetEnumName( ) const { return HX_("feathers.layout.Breakpoint",97,df,4e,5e); }
		::String __ToString() const { return HX_("Breakpoint.",bd,67,83,18) + _hx_tag; }

		static ::feathers::layout::Breakpoint LG;
		static inline ::feathers::layout::Breakpoint LG_dyn() { return LG; }
		static ::feathers::layout::Breakpoint MD;
		static inline ::feathers::layout::Breakpoint MD_dyn() { return MD; }
		static ::feathers::layout::Breakpoint SM;
		static inline ::feathers::layout::Breakpoint SM_dyn() { return SM; }
		static ::feathers::layout::Breakpoint XL;
		static inline ::feathers::layout::Breakpoint XL_dyn() { return XL; }
		static ::feathers::layout::Breakpoint XS;
		static inline ::feathers::layout::Breakpoint XS_dyn() { return XS; }
		static ::feathers::layout::Breakpoint XXL;
		static inline ::feathers::layout::Breakpoint XXL_dyn() { return XXL; }
};

} // end namespace feathers
} // end namespace layout

#endif /* INCLUDED_feathers_layout_Breakpoint */ 
