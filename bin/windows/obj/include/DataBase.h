// Generated by Haxe 4.3.1
#ifndef INCLUDED_DataBase
#define INCLUDED_DataBase

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(DataBase)
HX_DECLARE_CLASS1(model,GridPageModel)
HX_DECLARE_CLASS1(model,PanelModel)
HX_DECLARE_CLASS1(model,ScreenPageModel)



class HXCPP_CLASS_ATTRIBUTES DataBase_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef DataBase_obj OBJ_;
		DataBase_obj();

	public:
		enum { _hx_ClassId = 0x0ca95b9f };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="DataBase")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"DataBase"); }

		//~DataBase_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("DataBase",7b,83,36,5a); }

		static ::Array< ::Dynamic> panelModels;
		static ::Array< ::Dynamic> gridPageModels;
		static ::Array< ::Dynamic> screenPageModels;
		static ::Array< ::Dynamic> GetOrLoadPanelModels();
		static ::Dynamic GetOrLoadPanelModels_dyn();

		static ::Array< ::Dynamic> GetPanelModels();
		static ::Dynamic GetPanelModels_dyn();

		static  ::model::PanelModel GetOrLoadFirstPanelModel();
		static ::Dynamic GetOrLoadFirstPanelModel_dyn();

		static  ::model::PanelModel GetFirstPanelModel();
		static ::Dynamic GetFirstPanelModel_dyn();

		static void ClearPanelModels();
		static ::Dynamic ClearPanelModels_dyn();

		static void LoadPanelModels();
		static ::Dynamic LoadPanelModels_dyn();

		static void SavePanelModels();
		static ::Dynamic SavePanelModels_dyn();

		static ::Array< ::Dynamic> GetOrLoadGridPageModels();
		static ::Dynamic GetOrLoadGridPageModels_dyn();

		static ::Array< ::Dynamic> GetGridPageModels();
		static ::Dynamic GetGridPageModels_dyn();

		static  ::model::GridPageModel GetOrLoadGridPageModelById(int id);
		static ::Dynamic GetOrLoadGridPageModelById_dyn();

		static  ::model::GridPageModel GetGridPageModelById(int id);
		static ::Dynamic GetGridPageModelById_dyn();

		static void ClearGridPageModels();
		static ::Dynamic ClearGridPageModels_dyn();

		static void LoadGridPageModels();
		static ::Dynamic LoadGridPageModels_dyn();

		static void SaveGridPageModels();
		static ::Dynamic SaveGridPageModels_dyn();

		static ::Array< ::Dynamic> GetOrLoadScreenPageModels();
		static ::Dynamic GetOrLoadScreenPageModels_dyn();

		static ::Array< ::Dynamic> GetScreenPageModels();
		static ::Dynamic GetScreenPageModels_dyn();

		static  ::model::ScreenPageModel GetOrLoadScreenPageModelById(int id);
		static ::Dynamic GetOrLoadScreenPageModelById_dyn();

		static  ::model::ScreenPageModel GetScreenPageModelById(int id);
		static ::Dynamic GetScreenPageModelById_dyn();

		static void ClearScreenPageModels();
		static ::Dynamic ClearScreenPageModels_dyn();

		static void LoadScreenPageModels();
		static ::Dynamic LoadScreenPageModels_dyn();

		static void SaveScreenPageModels();
		static ::Dynamic SaveScreenPageModels_dyn();

		static void FillWithStartingData();
		static ::Dynamic FillWithStartingData_dyn();

};


#endif /* INCLUDED_DataBase */ 
