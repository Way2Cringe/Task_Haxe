// Generated by Haxe 4.3.1
#ifndef INCLUDED_model_ScreenPageModel
#define INCLUDED_model_ScreenPageModel

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_19020a9e43ca07e6_7_new)
HX_DECLARE_CLASS1(model,ScreenPageModel)

namespace model{


class HXCPP_CLASS_ATTRIBUTES ScreenPageModel_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef ScreenPageModel_obj OBJ_;
		ScreenPageModel_obj();

	public:
		enum { _hx_ClassId = 0x256b3c49 };

		void __construct(int id,::String title,::String content);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="model.ScreenPageModel")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"model.ScreenPageModel"); }

		inline static ::hx::ObjectPtr< ScreenPageModel_obj > __new(int id,::String title,::String content) {
			::hx::ObjectPtr< ScreenPageModel_obj > __this = new ScreenPageModel_obj();
			__this->__construct(id,title,content);
			return __this;
		}

		inline static ::hx::ObjectPtr< ScreenPageModel_obj > __alloc(::hx::Ctx *_hx_ctx,int id,::String title,::String content) {
			ScreenPageModel_obj *__this = (ScreenPageModel_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(ScreenPageModel_obj), true, "model.ScreenPageModel"));
			*(void **)__this = ScreenPageModel_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_19020a9e43ca07e6_7_new)
HXLINE(   8)		( ( ::model::ScreenPageModel)(__this) )->id = id;
HXLINE(   9)		( ( ::model::ScreenPageModel)(__this) )->title = title;
HXLINE(  10)		( ( ::model::ScreenPageModel)(__this) )->content = content;
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~ScreenPageModel_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("ScreenPageModel",ae,d9,db,62); }

		int id;
		::String title;
		::String content;
};

} // end namespace model

#endif /* INCLUDED_model_ScreenPageModel */ 
