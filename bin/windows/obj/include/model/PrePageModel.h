// Generated by Haxe 4.3.1
#ifndef INCLUDED_model_PrePageModel
#define INCLUDED_model_PrePageModel

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(model,MyClass)
HX_DECLARE_CLASS1(model,PrePageModel)

namespace model{


class HXCPP_CLASS_ATTRIBUTES PrePageModel_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef PrePageModel_obj OBJ_;
		PrePageModel_obj();

	public:
		enum { _hx_ClassId = 0x3450dbc0 };

		void __construct(int pageId,::String imagePath,::Array< ::Dynamic> arr);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="model.PrePageModel")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"model.PrePageModel"); }
		static ::hx::ObjectPtr< PrePageModel_obj > __new(int pageId,::String imagePath,::Array< ::Dynamic> arr);
		static ::hx::ObjectPtr< PrePageModel_obj > __alloc(::hx::Ctx *_hx_ctx,int pageId,::String imagePath,::Array< ::Dynamic> arr);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~PrePageModel_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("PrePageModel",57,2a,81,20); }

		int pageId;
		::String imagePath;
		bool trueorfalse;
		::Array< ::Dynamic> arr;
};

} // end namespace model

#endif /* INCLUDED_model_PrePageModel */ 
