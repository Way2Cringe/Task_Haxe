// Generated by Haxe 4.3.1
#ifndef INCLUDED_model_GridButtonModel
#define INCLUDED_model_GridButtonModel

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_5886f0f9fe49dae6_7_new)
HX_DECLARE_CLASS1(model,GridButtonModel)

namespace model{


class HXCPP_CLASS_ATTRIBUTES GridButtonModel_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef GridButtonModel_obj OBJ_;
		GridButtonModel_obj();

	public:
		enum { _hx_ClassId = 0x4e7799ac };

		void __construct(::String imagePath,int screenPageId);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="model.GridButtonModel")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"model.GridButtonModel"); }

		inline static ::hx::ObjectPtr< GridButtonModel_obj > __new(::String imagePath,int screenPageId) {
			::hx::ObjectPtr< GridButtonModel_obj > __this = new GridButtonModel_obj();
			__this->__construct(imagePath,screenPageId);
			return __this;
		}

		inline static ::hx::ObjectPtr< GridButtonModel_obj > __alloc(::hx::Ctx *_hx_ctx,::String imagePath,int screenPageId) {
			GridButtonModel_obj *__this = (GridButtonModel_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(GridButtonModel_obj), true, "model.GridButtonModel"));
			*(void **)__this = GridButtonModel_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_5886f0f9fe49dae6_7_new)
HXLINE(   8)		( ( ::model::GridButtonModel)(__this) )->imagePath = imagePath;
HXLINE(   9)		( ( ::model::GridButtonModel)(__this) )->screenPageId = screenPageId;
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~GridButtonModel_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("GridButtonModel",11,37,e8,8b); }

		::String imagePath;
		int screenPageId;
};

} // end namespace model

#endif /* INCLUDED_model_GridButtonModel */ 
