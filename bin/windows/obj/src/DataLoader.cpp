// Generated by Haxe 4.3.1
#include <hxcpp.h>

#ifndef INCLUDED_DataLoader
#include <DataLoader.h>
#endif
#ifndef INCLUDED_Xml
#include <Xml.h>
#endif
#ifndef INCLUDED_XmlSerializer
#include <XmlSerializer.h>
#endif
#ifndef INCLUDED__Xml_XmlType_Impl_
#include <_Xml/XmlType_Impl_.h>
#endif
#ifndef INCLUDED_haxe_Log
#include <haxe/Log.h>
#endif
#ifndef INCLUDED_haxe_xml_Printer
#include <haxe/xml/Printer.h>
#endif
#ifndef INCLUDED_sys_FileSystem
#include <sys/FileSystem.h>
#endif
#ifndef INCLUDED_sys_io_File
#include <sys/io/File.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_a0e079fb59912ad9_5_PathForClass,"DataLoader","PathForClass",0x7421dc65,"DataLoader.PathForClass","DataLoader.hx",5,0x4e7ccce1)
HX_LOCAL_STACK_FRAME(_hx_pos_a0e079fb59912ad9_16_Load,"DataLoader","Load",0x6e6a0e57,"DataLoader.Load","DataLoader.hx",16,0x4e7ccce1)
HX_LOCAL_STACK_FRAME(_hx_pos_a0e079fb59912ad9_27_Save,"DataLoader","Save",0x72ffff6e,"DataLoader.Save","DataLoader.hx",27,0x4e7ccce1)

void DataLoader_obj::__construct() { }

Dynamic DataLoader_obj::__CreateEmpty() { return new DataLoader_obj; }

void *DataLoader_obj::_hx_vtable = 0;

Dynamic DataLoader_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< DataLoader_obj > _hx_result = new DataLoader_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool DataLoader_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x528534bd;
}

::String DataLoader_obj::PathForClass(::String className){
            	HX_STACKFRAME(&_hx_pos_a0e079fb59912ad9_5_PathForClass)
HXLINE(   6)		::String path = ::sys::FileSystem_obj::absolutePath(((HX_("../../../xml/",87,2e,97,33) + className) + HX_(".xml",69,3e,c3,1e)));
HXLINE(   7)		::haxe::Log_obj::trace(path,::hx::SourceInfo(HX_("src/DataLoader.hx",36,89,97,30),7,HX_("DataLoader",fd,11,c2,3a),HX_("PathForClass",54,9b,b8,4f)));
HXLINE(   8)		return path;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(DataLoader_obj,PathForClass,return )

 ::Dynamic DataLoader_obj::Load(::String className){
            	HX_STACKFRAME(&_hx_pos_a0e079fb59912ad9_16_Load)
HXLINE(  17)		::String xmlString = ::sys::io::File_obj::getContent(::DataLoader_obj::PathForClass(className));
HXLINE(  18)		 ::Xml _this = ::Xml_obj::parse(xmlString);
HXDLIN(  18)		bool _hx_tmp;
HXDLIN(  18)		if ((_this->nodeType != ::Xml_obj::Document)) {
HXLINE(  18)			_hx_tmp = (_this->nodeType != ::Xml_obj::Element);
            		}
            		else {
HXLINE(  18)			_hx_tmp = false;
            		}
HXDLIN(  18)		if (_hx_tmp) {
HXLINE(  18)			HX_STACK_DO_THROW((HX_("Bad node type, expected Element or Document but found ",a0,d6,ba,79) + ::_Xml::XmlType_Impl__obj::toString(_this->nodeType)));
            		}
HXDLIN(  18)		 ::Xml xml = _this->children->__get(0).StaticCast<  ::Xml >();
HXLINE(  19)		return ::XmlSerializer_obj::Deserialize(xml);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(DataLoader_obj,Load,return )

void DataLoader_obj::Save( ::Dynamic arr,::String className){
            	HX_STACKFRAME(&_hx_pos_a0e079fb59912ad9_27_Save)
HXLINE(  28)		 ::Xml xml = ::XmlSerializer_obj::Serialize(arr);
HXLINE(  29)		::String xmlString = ::haxe::xml::Printer_obj::print(xml,null());
HXLINE(  30)		::sys::io::File_obj::saveContent(::DataLoader_obj::PathForClass(className),xmlString);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(DataLoader_obj,Save,(void))


DataLoader_obj::DataLoader_obj()
{
}

bool DataLoader_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"Load") ) { outValue = Load_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"Save") ) { outValue = Save_dyn(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"PathForClass") ) { outValue = PathForClass_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *DataLoader_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *DataLoader_obj_sStaticStorageInfo = 0;
#endif

::hx::Class DataLoader_obj::__mClass;

static ::String DataLoader_obj_sStaticFields[] = {
	HX_("PathForClass",54,9b,b8,4f),
	HX_("Load",46,c6,90,32),
	HX_("Save",5d,b7,26,37),
	::String(null())
};

void DataLoader_obj::__register()
{
	DataLoader_obj _hx_dummy;
	DataLoader_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("DataLoader",fd,11,c2,3a);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &DataLoader_obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(DataLoader_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< DataLoader_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = DataLoader_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = DataLoader_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

