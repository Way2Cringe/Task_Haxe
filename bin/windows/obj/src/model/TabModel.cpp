// Generated by Haxe 4.3.1
#include <hxcpp.h>

#ifndef INCLUDED_model_TabModel
#include <model/TabModel.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_be358f4ab61a8ff9_6_new,"model.TabModel","new",0x0d95400b,"model.TabModel.new","model/TabModel.hx",6,0x2bff3764)
namespace model{

void TabModel_obj::__construct(int gridPageModelId,::String name){
            	HX_STACKFRAME(&_hx_pos_be358f4ab61a8ff9_6_new)
HXLINE(   7)		this->gridPageModelId = gridPageModelId;
HXLINE(   8)		this->name = name;
            	}

Dynamic TabModel_obj::__CreateEmpty() { return new TabModel_obj; }

void *TabModel_obj::_hx_vtable = 0;

Dynamic TabModel_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< TabModel_obj > _hx_result = new TabModel_obj();
	_hx_result->__construct(inArgs[0],inArgs[1]);
	return _hx_result;
}

bool TabModel_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x11463939;
}


TabModel_obj::TabModel_obj()
{
}

void TabModel_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(TabModel);
	HX_MARK_MEMBER_NAME(gridPageModelId,"gridPageModelId");
	HX_MARK_MEMBER_NAME(name,"name");
	HX_MARK_END_CLASS();
}

void TabModel_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(gridPageModelId,"gridPageModelId");
	HX_VISIT_MEMBER_NAME(name,"name");
}

::hx::Val TabModel_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"name") ) { return ::hx::Val( name ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"gridPageModelId") ) { return ::hx::Val( gridPageModelId ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val TabModel_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"name") ) { name=inValue.Cast< ::String >(); return inValue; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"gridPageModelId") ) { gridPageModelId=inValue.Cast< int >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void TabModel_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("gridPageModelId",2f,70,a0,39));
	outFields->push(HX_("name",4b,72,ff,48));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo TabModel_obj_sMemberStorageInfo[] = {
	{::hx::fsInt,(int)offsetof(TabModel_obj,gridPageModelId),HX_("gridPageModelId",2f,70,a0,39)},
	{::hx::fsString,(int)offsetof(TabModel_obj,name),HX_("name",4b,72,ff,48)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *TabModel_obj_sStaticStorageInfo = 0;
#endif

static ::String TabModel_obj_sMemberFields[] = {
	HX_("gridPageModelId",2f,70,a0,39),
	HX_("name",4b,72,ff,48),
	::String(null()) };

::hx::Class TabModel_obj::__mClass;

void TabModel_obj::__register()
{
	TabModel_obj _hx_dummy;
	TabModel_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("model.TabModel",99,de,43,04);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(TabModel_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< TabModel_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = TabModel_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = TabModel_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace model
