// Generated by Haxe 4.3.1
#include <hxcpp.h>

#ifndef INCLUDED_model_MyClass
#include <model/MyClass.h>
#endif
#ifndef INCLUDED_model_PrePageModel
#include <model/PrePageModel.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_7e08566b4805f447_10_new,"model.PrePageModel","new",0xe60f2d2e,"model.PrePageModel.new","model/PrePageModel.hx",10,0xf9953b21)
namespace model{

void PrePageModel_obj::__construct(int pageId,::String imagePath,::Array< ::Dynamic> arr){
            	HX_STACKFRAME(&_hx_pos_7e08566b4805f447_10_new)
HXLINE(  11)		this->pageId = pageId;
HXLINE(  12)		this->imagePath = imagePath;
HXLINE(  13)		this->arr = arr;
            	}

Dynamic PrePageModel_obj::__CreateEmpty() { return new PrePageModel_obj; }

void *PrePageModel_obj::_hx_vtable = 0;

Dynamic PrePageModel_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< PrePageModel_obj > _hx_result = new PrePageModel_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2]);
	return _hx_result;
}

bool PrePageModel_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x3450dbc0;
}


::hx::ObjectPtr< PrePageModel_obj > PrePageModel_obj::__new(int pageId,::String imagePath,::Array< ::Dynamic> arr) {
	::hx::ObjectPtr< PrePageModel_obj > __this = new PrePageModel_obj();
	__this->__construct(pageId,imagePath,arr);
	return __this;
}

::hx::ObjectPtr< PrePageModel_obj > PrePageModel_obj::__alloc(::hx::Ctx *_hx_ctx,int pageId,::String imagePath,::Array< ::Dynamic> arr) {
	PrePageModel_obj *__this = (PrePageModel_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(PrePageModel_obj), true, "model.PrePageModel"));
	*(void **)__this = PrePageModel_obj::_hx_vtable;
	__this->__construct(pageId,imagePath,arr);
	return __this;
}

PrePageModel_obj::PrePageModel_obj()
{
}

void PrePageModel_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(PrePageModel);
	HX_MARK_MEMBER_NAME(pageId,"pageId");
	HX_MARK_MEMBER_NAME(imagePath,"imagePath");
	HX_MARK_MEMBER_NAME(trueorfalse,"trueorfalse");
	HX_MARK_MEMBER_NAME(arr,"arr");
	HX_MARK_END_CLASS();
}

void PrePageModel_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(pageId,"pageId");
	HX_VISIT_MEMBER_NAME(imagePath,"imagePath");
	HX_VISIT_MEMBER_NAME(trueorfalse,"trueorfalse");
	HX_VISIT_MEMBER_NAME(arr,"arr");
}

::hx::Val PrePageModel_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"arr") ) { return ::hx::Val( arr ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"pageId") ) { return ::hx::Val( pageId ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"imagePath") ) { return ::hx::Val( imagePath ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"trueorfalse") ) { return ::hx::Val( trueorfalse ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val PrePageModel_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"arr") ) { arr=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"pageId") ) { pageId=inValue.Cast< int >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"imagePath") ) { imagePath=inValue.Cast< ::String >(); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"trueorfalse") ) { trueorfalse=inValue.Cast< bool >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void PrePageModel_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("pageId",0a,8c,38,e6));
	outFields->push(HX_("imagePath",a0,7a,86,2c));
	outFields->push(HX_("trueorfalse",12,d4,fa,96));
	outFields->push(HX_("arr",61,fe,49,00));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo PrePageModel_obj_sMemberStorageInfo[] = {
	{::hx::fsInt,(int)offsetof(PrePageModel_obj,pageId),HX_("pageId",0a,8c,38,e6)},
	{::hx::fsString,(int)offsetof(PrePageModel_obj,imagePath),HX_("imagePath",a0,7a,86,2c)},
	{::hx::fsBool,(int)offsetof(PrePageModel_obj,trueorfalse),HX_("trueorfalse",12,d4,fa,96)},
	{::hx::fsObject /* ::Array< ::Dynamic> */ ,(int)offsetof(PrePageModel_obj,arr),HX_("arr",61,fe,49,00)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *PrePageModel_obj_sStaticStorageInfo = 0;
#endif

static ::String PrePageModel_obj_sMemberFields[] = {
	HX_("pageId",0a,8c,38,e6),
	HX_("imagePath",a0,7a,86,2c),
	HX_("trueorfalse",12,d4,fa,96),
	HX_("arr",61,fe,49,00),
	::String(null()) };

::hx::Class PrePageModel_obj::__mClass;

void PrePageModel_obj::__register()
{
	PrePageModel_obj _hx_dummy;
	PrePageModel_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("model.PrePageModel",3c,be,91,fc);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(PrePageModel_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< PrePageModel_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = PrePageModel_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = PrePageModel_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace model
