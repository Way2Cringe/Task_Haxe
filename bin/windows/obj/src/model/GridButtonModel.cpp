// Generated by Haxe 4.3.1
#include <hxcpp.h>

#ifndef INCLUDED_model_GridButtonModel
#include <model/GridButtonModel.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_5886f0f9fe49dae6_7_new,"model.GridButtonModel","new",0x79f3173e,"model.GridButtonModel.new","model/GridButtonModel.hx",7,0x8e352e33)
namespace model{

void GridButtonModel_obj::__construct(::String imagePath,int screenPageId){
            	HX_STACKFRAME(&_hx_pos_5886f0f9fe49dae6_7_new)
HXLINE(   8)		this->imagePath = imagePath;
HXLINE(   9)		this->screenPageId = screenPageId;
            	}

Dynamic GridButtonModel_obj::__CreateEmpty() { return new GridButtonModel_obj; }

void *GridButtonModel_obj::_hx_vtable = 0;

Dynamic GridButtonModel_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< GridButtonModel_obj > _hx_result = new GridButtonModel_obj();
	_hx_result->__construct(inArgs[0],inArgs[1]);
	return _hx_result;
}

bool GridButtonModel_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x4e7799ac;
}


GridButtonModel_obj::GridButtonModel_obj()
{
}

void GridButtonModel_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(GridButtonModel);
	HX_MARK_MEMBER_NAME(imagePath,"imagePath");
	HX_MARK_MEMBER_NAME(screenPageId,"screenPageId");
	HX_MARK_END_CLASS();
}

void GridButtonModel_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(imagePath,"imagePath");
	HX_VISIT_MEMBER_NAME(screenPageId,"screenPageId");
}

::hx::Val GridButtonModel_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 9:
		if (HX_FIELD_EQ(inName,"imagePath") ) { return ::hx::Val( imagePath ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"screenPageId") ) { return ::hx::Val( screenPageId ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val GridButtonModel_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 9:
		if (HX_FIELD_EQ(inName,"imagePath") ) { imagePath=inValue.Cast< ::String >(); return inValue; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"screenPageId") ) { screenPageId=inValue.Cast< int >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void GridButtonModel_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("imagePath",a0,7a,86,2c));
	outFields->push(HX_("screenPageId",96,94,56,c3));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo GridButtonModel_obj_sMemberStorageInfo[] = {
	{::hx::fsString,(int)offsetof(GridButtonModel_obj,imagePath),HX_("imagePath",a0,7a,86,2c)},
	{::hx::fsInt,(int)offsetof(GridButtonModel_obj,screenPageId),HX_("screenPageId",96,94,56,c3)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *GridButtonModel_obj_sStaticStorageInfo = 0;
#endif

static ::String GridButtonModel_obj_sMemberFields[] = {
	HX_("imagePath",a0,7a,86,2c),
	HX_("screenPageId",96,94,56,c3),
	::String(null()) };

::hx::Class GridButtonModel_obj::__mClass;

void GridButtonModel_obj::__register()
{
	GridButtonModel_obj _hx_dummy;
	GridButtonModel_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("model.GridButtonModel",4c,60,93,5b);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(GridButtonModel_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< GridButtonModel_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = GridButtonModel_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = GridButtonModel_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace model
