// Generated by Haxe 4.3.1
#include <hxcpp.h>

#ifndef INCLUDED_DataBase
#include <DataBase.h>
#endif
#ifndef INCLUDED_controller_GridPageController
#include <controller/GridPageController.h>
#endif
#ifndef INCLUDED_model_GridPageModel
#include <model/GridPageModel.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_view_GridPageView
#include <view/GridPageView.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_15fc2d346c49cda1_12_new,"controller.GridPageController","new",0x077cd855,"controller.GridPageController.new","controller/GridPageController.hx",12,0xc735931a)
HX_LOCAL_STACK_FRAME(_hx_pos_15fc2d346c49cda1_21_onGridButtonClick,"controller.GridPageController","onGridButtonClick",0x796f7426,"controller.GridPageController.onGridButtonClick","controller/GridPageController.hx",21,0xc735931a)
HX_LOCAL_STACK_FRAME(_hx_pos_15fc2d346c49cda1_25_addGridButtonClickEventListener,"controller.GridPageController","addGridButtonClickEventListener",0x73a9aff4,"controller.GridPageController.addGridButtonClickEventListener","controller/GridPageController.hx",25,0xc735931a)
HX_LOCAL_STACK_FRAME(_hx_pos_15fc2d346c49cda1_29_removeGridButtonClickEventListener,"controller.GridPageController","removeGridButtonClickEventListener",0xe68014cd,"controller.GridPageController.removeGridButtonClickEventListener","controller/GridPageController.hx",29,0xc735931a)
namespace controller{

void GridPageController_obj::__construct(int Id, ::openfl::display::DisplayObjectContainer display){
            	HX_GC_STACKFRAME(&_hx_pos_15fc2d346c49cda1_12_new)
HXLINE(  13)		this->listeners = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(  14)		this->model = ::DataBase_obj::GetOrLoadGridPageModelById(Id);
HXLINE(  15)		this->view =  ::view::GridPageView_obj::__alloc( HX_CTX ,this->model,display);
HXLINE(  16)		this->view->Draw();
HXLINE(  17)		this->view->addEventListener(HX_("trigger",38,55,df,25),this->onGridButtonClick_dyn());
            	}

Dynamic GridPageController_obj::__CreateEmpty() { return new GridPageController_obj; }

void *GridPageController_obj::_hx_vtable = 0;

Dynamic GridPageController_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< GridPageController_obj > _hx_result = new GridPageController_obj();
	_hx_result->__construct(inArgs[0],inArgs[1]);
	return _hx_result;
}

bool GridPageController_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x02e2a16d;
}

void GridPageController_obj::onGridButtonClick(int id){
            	HX_STACKFRAME(&_hx_pos_15fc2d346c49cda1_21_onGridButtonClick)
HXDLIN(  21)		int _g = 0;
HXDLIN(  21)		::Array< ::Dynamic> _g1 = this->listeners;
HXDLIN(  21)		while((_g < _g1->length)){
HXDLIN(  21)			 ::Dynamic li = _g1->__get(_g);
HXDLIN(  21)			_g = (_g + 1);
HXLINE(  22)			li(id);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(GridPageController_obj,onGridButtonClick,(void))

void GridPageController_obj::addGridButtonClickEventListener( ::Dynamic listener){
            	HX_STACKFRAME(&_hx_pos_15fc2d346c49cda1_25_addGridButtonClickEventListener)
HXDLIN(  25)		this->listeners->push(listener);
            	}


HX_DEFINE_DYNAMIC_FUNC1(GridPageController_obj,addGridButtonClickEventListener,(void))

void GridPageController_obj::removeGridButtonClickEventListener( ::Dynamic listener){
            	HX_STACKFRAME(&_hx_pos_15fc2d346c49cda1_29_removeGridButtonClickEventListener)
HXDLIN(  29)		this->listeners->remove(listener);
            	}


HX_DEFINE_DYNAMIC_FUNC1(GridPageController_obj,removeGridButtonClickEventListener,(void))


::hx::ObjectPtr< GridPageController_obj > GridPageController_obj::__new(int Id, ::openfl::display::DisplayObjectContainer display) {
	::hx::ObjectPtr< GridPageController_obj > __this = new GridPageController_obj();
	__this->__construct(Id,display);
	return __this;
}

::hx::ObjectPtr< GridPageController_obj > GridPageController_obj::__alloc(::hx::Ctx *_hx_ctx,int Id, ::openfl::display::DisplayObjectContainer display) {
	GridPageController_obj *__this = (GridPageController_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(GridPageController_obj), true, "controller.GridPageController"));
	*(void **)__this = GridPageController_obj::_hx_vtable;
	__this->__construct(Id,display);
	return __this;
}

GridPageController_obj::GridPageController_obj()
{
}

void GridPageController_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(GridPageController);
	HX_MARK_MEMBER_NAME(model,"model");
	HX_MARK_MEMBER_NAME(view,"view");
	HX_MARK_MEMBER_NAME(listeners,"listeners");
	HX_MARK_END_CLASS();
}

void GridPageController_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(model,"model");
	HX_VISIT_MEMBER_NAME(view,"view");
	HX_VISIT_MEMBER_NAME(listeners,"listeners");
}

::hx::Val GridPageController_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"view") ) { return ::hx::Val( view ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"model") ) { return ::hx::Val( model ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"listeners") ) { return ::hx::Val( listeners ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"onGridButtonClick") ) { return ::hx::Val( onGridButtonClick_dyn() ); }
		break;
	case 31:
		if (HX_FIELD_EQ(inName,"addGridButtonClickEventListener") ) { return ::hx::Val( addGridButtonClickEventListener_dyn() ); }
		break;
	case 34:
		if (HX_FIELD_EQ(inName,"removeGridButtonClickEventListener") ) { return ::hx::Val( removeGridButtonClickEventListener_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val GridPageController_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"view") ) { view=inValue.Cast<  ::view::GridPageView >(); return inValue; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"model") ) { model=inValue.Cast<  ::model::GridPageModel >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"listeners") ) { listeners=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void GridPageController_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("model",a9,23,58,0c));
	outFields->push(HX_("view",65,32,4f,4e));
	outFields->push(HX_("listeners",7f,65,8e,f3));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo GridPageController_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::model::GridPageModel */ ,(int)offsetof(GridPageController_obj,model),HX_("model",a9,23,58,0c)},
	{::hx::fsObject /*  ::view::GridPageView */ ,(int)offsetof(GridPageController_obj,view),HX_("view",65,32,4f,4e)},
	{::hx::fsObject /* ::Array< ::Dynamic> */ ,(int)offsetof(GridPageController_obj,listeners),HX_("listeners",7f,65,8e,f3)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *GridPageController_obj_sStaticStorageInfo = 0;
#endif

static ::String GridPageController_obj_sMemberFields[] = {
	HX_("model",a9,23,58,0c),
	HX_("view",65,32,4f,4e),
	HX_("listeners",7f,65,8e,f3),
	HX_("onGridButtonClick",71,49,58,26),
	HX_("addGridButtonClickEventListener",7f,12,35,e8),
	HX_("removeGridButtonClickEventListener",22,9b,9e,bd),
	::String(null()) };

::hx::Class GridPageController_obj::__mClass;

void GridPageController_obj::__register()
{
	GridPageController_obj _hx_dummy;
	GridPageController_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("controller.GridPageController",e3,09,13,94);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(GridPageController_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< GridPageController_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = GridPageController_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = GridPageController_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace controller
