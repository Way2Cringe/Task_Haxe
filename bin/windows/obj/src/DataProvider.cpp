// Generated by Haxe 4.3.1
#include <hxcpp.h>

#ifndef INCLUDED_DataProvider
#include <DataProvider.h>
#endif
#ifndef INCLUDED_Xml
#include <Xml.h>
#endif
#ifndef INCLUDED_XmlSerializer
#include <XmlSerializer.h>
#endif
#ifndef INCLUDED__Xml_XmlType_Impl_
#include <_Xml/XmlType_Impl_.h>
#endif
#ifndef INCLUDED_haxe_xml_Printer
#include <haxe/xml/Printer.h>
#endif
#ifndef INCLUDED_openfl_display_BitmapData
#include <openfl/display/BitmapData.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_sys_FileSystem
#include <sys/FileSystem.h>
#endif
#ifndef INCLUDED_sys_io_File
#include <sys/io/File.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_0e95e6277cb0ee5f_7_PathForXml,"DataProvider","PathForXml",0xbaec0de6,"DataProvider.PathForXml","DataProvider.hx",7,0x12d06c03)
HX_LOCAL_STACK_FRAME(_hx_pos_0e95e6277cb0ee5f_12_PathForImg,"DataProvider","PathForImg",0xbae0ac12,"DataProvider.PathForImg","DataProvider.hx",12,0x12d06c03)
HX_LOCAL_STACK_FRAME(_hx_pos_0e95e6277cb0ee5f_22_Load,"DataProvider","Load",0xa63d39f9,"DataProvider.Load","DataProvider.hx",22,0x12d06c03)
HX_LOCAL_STACK_FRAME(_hx_pos_0e95e6277cb0ee5f_33_Save,"DataProvider","Save",0xaad32b10,"DataProvider.Save","DataProvider.hx",33,0x12d06c03)
HX_LOCAL_STACK_FRAME(_hx_pos_0e95e6277cb0ee5f_45_LoadImg,"DataProvider","LoadImg",0x6fda4b8a,"DataProvider.LoadImg","DataProvider.hx",45,0x12d06c03)

void DataProvider_obj::__construct() { }

Dynamic DataProvider_obj::__CreateEmpty() { return new DataProvider_obj; }

void *DataProvider_obj::_hx_vtable = 0;

Dynamic DataProvider_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< DataProvider_obj > _hx_result = new DataProvider_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool DataProvider_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x4023dc5b;
}

::String DataProvider_obj::PathForXml(::String className){
            	HX_STACKFRAME(&_hx_pos_0e95e6277cb0ee5f_7_PathForXml)
HXLINE(   8)		::String path = ::sys::FileSystem_obj::absolutePath(((HX_("../../../xml/",87,2e,97,33) + className) + HX_(".xml",69,3e,c3,1e)));
HXLINE(   9)		return path;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(DataProvider_obj,PathForXml,return )

::String DataProvider_obj::PathForImg(::String imgName){
            	HX_STACKFRAME(&_hx_pos_0e95e6277cb0ee5f_12_PathForImg)
HXLINE(  13)		::String path = ::sys::FileSystem_obj::absolutePath((HX_("../../../img/",db,f6,ac,29) + imgName));
HXLINE(  14)		return path;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(DataProvider_obj,PathForImg,return )

 ::Dynamic DataProvider_obj::Load(::String className){
            	HX_STACKFRAME(&_hx_pos_0e95e6277cb0ee5f_22_Load)
HXLINE(  23)		::String xmlString = ::sys::io::File_obj::getContent(::DataProvider_obj::PathForXml(className));
HXLINE(  24)		 ::Xml _this = ::Xml_obj::parse(xmlString);
HXDLIN(  24)		bool _hx_tmp;
HXDLIN(  24)		if ((_this->nodeType != ::Xml_obj::Document)) {
HXLINE(  24)			_hx_tmp = (_this->nodeType != ::Xml_obj::Element);
            		}
            		else {
HXLINE(  24)			_hx_tmp = false;
            		}
HXDLIN(  24)		if (_hx_tmp) {
HXLINE(  24)			HX_STACK_DO_THROW((HX_("Bad node type, expected Element or Document but found ",a0,d6,ba,79) + ::_Xml::XmlType_Impl__obj::toString(_this->nodeType)));
            		}
HXDLIN(  24)		 ::Xml xml = _this->children->__get(0).StaticCast<  ::Xml >();
HXLINE(  25)		return ::XmlSerializer_obj::Deserialize(xml);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(DataProvider_obj,Load,return )

void DataProvider_obj::Save( ::Dynamic arr,::String className){
            	HX_STACKFRAME(&_hx_pos_0e95e6277cb0ee5f_33_Save)
HXLINE(  34)		 ::Xml xml = ::XmlSerializer_obj::Serialize(arr);
HXLINE(  35)		::String xmlString = ::haxe::xml::Printer_obj::print(xml,null());
HXLINE(  36)		::sys::io::File_obj::saveContent(::DataProvider_obj::PathForXml(className),xmlString);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(DataProvider_obj,Save,(void))

 ::openfl::display::BitmapData DataProvider_obj::LoadImg(::String imgName){
            	HX_STACKFRAME(&_hx_pos_0e95e6277cb0ee5f_45_LoadImg)
HXDLIN(  45)		return ::openfl::display::BitmapData_obj::fromFile(::DataProvider_obj::PathForImg(imgName));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(DataProvider_obj,LoadImg,return )


DataProvider_obj::DataProvider_obj()
{
}

bool DataProvider_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"Load") ) { outValue = Load_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"Save") ) { outValue = Save_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"LoadImg") ) { outValue = LoadImg_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"PathForXml") ) { outValue = PathForXml_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"PathForImg") ) { outValue = PathForImg_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *DataProvider_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *DataProvider_obj_sStaticStorageInfo = 0;
#endif

::hx::Class DataProvider_obj::__mClass;

static ::String DataProvider_obj_sStaticFields[] = {
	HX_("PathForXml",f3,51,65,06),
	HX_("PathForImg",1f,f0,59,06),
	HX_("Load",46,c6,90,32),
	HX_("Save",5d,b7,26,37),
	HX_("LoadImg",5d,ad,2b,d6),
	::String(null())
};

void DataProvider_obj::__register()
{
	DataProvider_obj _hx_dummy;
	DataProvider_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("DataProvider",9b,89,42,57);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &DataProvider_obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(DataProvider_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< DataProvider_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = DataProvider_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = DataProvider_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

