// Generated by Haxe 4.3.1
#include <hxcpp.h>

#ifndef INCLUDED_feathers_layout_Anchor
#include <feathers/layout/Anchor.h>
#endif
#ifndef INCLUDED_feathers_layout__AnchorLayout_AbstractAnchor_Impl_
#include <feathers/layout/_AnchorLayout/AbstractAnchor_Impl_.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_b09e9d8ae6060d36_463_fromPixels,"feathers.layout._AnchorLayout.AbstractAnchor_Impl_","fromPixels",0xb7639758,"feathers.layout._AnchorLayout.AbstractAnchor_Impl_.fromPixels","feathers/layout/AnchorLayout.hx",463,0x3c8824d9)
HX_LOCAL_STACK_FRAME(_hx_pos_b09e9d8ae6060d36_473_fromDisplayObject,"feathers.layout._AnchorLayout.AbstractAnchor_Impl_","fromDisplayObject",0x1b66bdd6,"feathers.layout._AnchorLayout.AbstractAnchor_Impl_.fromDisplayObject","feathers/layout/AnchorLayout.hx",473,0x3c8824d9)
namespace feathers{
namespace layout{
namespace _AnchorLayout{

void AbstractAnchor_Impl__obj::__construct() { }

Dynamic AbstractAnchor_Impl__obj::__CreateEmpty() { return new AbstractAnchor_Impl__obj; }

void *AbstractAnchor_Impl__obj::_hx_vtable = 0;

Dynamic AbstractAnchor_Impl__obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< AbstractAnchor_Impl__obj > _hx_result = new AbstractAnchor_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool AbstractAnchor_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x6f6822c3;
}

 ::feathers::layout::Anchor AbstractAnchor_Impl__obj::fromPixels(Float pixels){
            	HX_GC_STACKFRAME(&_hx_pos_b09e9d8ae6060d36_463_fromPixels)
HXDLIN( 463)		return  ::feathers::layout::Anchor_obj::__alloc( HX_CTX ,pixels,null());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AbstractAnchor_Impl__obj,fromPixels,return )

 ::feathers::layout::Anchor AbstractAnchor_Impl__obj::fromDisplayObject( ::openfl::display::DisplayObject relativeTo){
            	HX_GC_STACKFRAME(&_hx_pos_b09e9d8ae6060d36_473_fromDisplayObject)
HXDLIN( 473)		return  ::feathers::layout::Anchor_obj::__alloc( HX_CTX ,((Float)0.0),relativeTo);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AbstractAnchor_Impl__obj,fromDisplayObject,return )


AbstractAnchor_Impl__obj::AbstractAnchor_Impl__obj()
{
}

bool AbstractAnchor_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 10:
		if (HX_FIELD_EQ(inName,"fromPixels") ) { outValue = fromPixels_dyn(); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"fromDisplayObject") ) { outValue = fromDisplayObject_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *AbstractAnchor_Impl__obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *AbstractAnchor_Impl__obj_sStaticStorageInfo = 0;
#endif

::hx::Class AbstractAnchor_Impl__obj::__mClass;

static ::String AbstractAnchor_Impl__obj_sStaticFields[] = {
	HX_("fromPixels",37,f4,ed,cf),
	HX_("fromDisplayObject",d7,4a,11,7c),
	::String(null())
};

void AbstractAnchor_Impl__obj::__register()
{
	AbstractAnchor_Impl__obj _hx_dummy;
	AbstractAnchor_Impl__obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("feathers.layout._AnchorLayout.AbstractAnchor_Impl_",ad,17,b8,2c);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &AbstractAnchor_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(AbstractAnchor_Impl__obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< AbstractAnchor_Impl__obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = AbstractAnchor_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = AbstractAnchor_Impl__obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace feathers
} // end namespace layout
} // end namespace _AnchorLayout
