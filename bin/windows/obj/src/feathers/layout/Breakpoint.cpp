// Generated by Haxe 4.3.1
#include <hxcpp.h>

#ifndef INCLUDED_feathers_layout_Breakpoint
#include <feathers/layout/Breakpoint.h>
#endif
namespace feathers{
namespace layout{

::feathers::layout::Breakpoint Breakpoint_obj::LG;

::feathers::layout::Breakpoint Breakpoint_obj::MD;

::feathers::layout::Breakpoint Breakpoint_obj::SM;

::feathers::layout::Breakpoint Breakpoint_obj::XL;

::feathers::layout::Breakpoint Breakpoint_obj::XS;

::feathers::layout::Breakpoint Breakpoint_obj::XXL;

bool Breakpoint_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	if (inName==HX_("LG",7b,42,00,00)) { outValue = Breakpoint_obj::LG; return true; }
	if (inName==HX_("MD",57,43,00,00)) { outValue = Breakpoint_obj::MD; return true; }
	if (inName==HX_("SM",9a,48,00,00)) { outValue = Breakpoint_obj::SM; return true; }
	if (inName==HX_("XL",f4,4c,00,00)) { outValue = Breakpoint_obj::XL; return true; }
	if (inName==HX_("XS",fb,4c,00,00)) { outValue = Breakpoint_obj::XS; return true; }
	if (inName==HX_("XXL",4c,13,43,00)) { outValue = Breakpoint_obj::XXL; return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(Breakpoint_obj)

int Breakpoint_obj::__FindIndex(::String inName)
{
	if (inName==HX_("LG",7b,42,00,00)) return 3;
	if (inName==HX_("MD",57,43,00,00)) return 2;
	if (inName==HX_("SM",9a,48,00,00)) return 1;
	if (inName==HX_("XL",f4,4c,00,00)) return 4;
	if (inName==HX_("XS",fb,4c,00,00)) return 0;
	if (inName==HX_("XXL",4c,13,43,00)) return 5;
	return super::__FindIndex(inName);
}

int Breakpoint_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("LG",7b,42,00,00)) return 0;
	if (inName==HX_("MD",57,43,00,00)) return 0;
	if (inName==HX_("SM",9a,48,00,00)) return 0;
	if (inName==HX_("XL",f4,4c,00,00)) return 0;
	if (inName==HX_("XS",fb,4c,00,00)) return 0;
	if (inName==HX_("XXL",4c,13,43,00)) return 0;
	return super::__FindArgCount(inName);
}

::hx::Val Breakpoint_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	if (inName==HX_("LG",7b,42,00,00)) return LG;
	if (inName==HX_("MD",57,43,00,00)) return MD;
	if (inName==HX_("SM",9a,48,00,00)) return SM;
	if (inName==HX_("XL",f4,4c,00,00)) return XL;
	if (inName==HX_("XS",fb,4c,00,00)) return XS;
	if (inName==HX_("XXL",4c,13,43,00)) return XXL;
	return super::__Field(inName,inCallProp);
}

static ::String Breakpoint_obj_sStaticFields[] = {
	HX_("XS",fb,4c,00,00),
	HX_("SM",9a,48,00,00),
	HX_("MD",57,43,00,00),
	HX_("LG",7b,42,00,00),
	HX_("XL",f4,4c,00,00),
	HX_("XXL",4c,13,43,00),
	::String(null())
};

::hx::Class Breakpoint_obj::__mClass;

Dynamic __Create_Breakpoint_obj() { return new Breakpoint_obj; }

void Breakpoint_obj::__register()
{

::hx::Static(__mClass) = ::hx::_hx_RegisterClass(HX_("feathers.layout.Breakpoint",97,df,4e,5e), ::hx::TCanCast< Breakpoint_obj >,Breakpoint_obj_sStaticFields,0,
	&__Create_Breakpoint_obj, &__Create,
	&super::__SGetClass(), &CreateBreakpoint_obj, 0
#ifdef HXCPP_VISIT_ALLOCS
    , 0
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &Breakpoint_obj::__GetStatic;
}

void Breakpoint_obj::__boot()
{
LG = ::hx::CreateConstEnum< Breakpoint_obj >(HX_("LG",7b,42,00,00),3);
MD = ::hx::CreateConstEnum< Breakpoint_obj >(HX_("MD",57,43,00,00),2);
SM = ::hx::CreateConstEnum< Breakpoint_obj >(HX_("SM",9a,48,00,00),1);
XL = ::hx::CreateConstEnum< Breakpoint_obj >(HX_("XL",f4,4c,00,00),4);
XS = ::hx::CreateConstEnum< Breakpoint_obj >(HX_("XS",fb,4c,00,00),0);
XXL = ::hx::CreateConstEnum< Breakpoint_obj >(HX_("XXL",4c,13,43,00),5);
}


} // end namespace feathers
} // end namespace layout
