// Generated by Haxe 4.3.1
#include <hxcpp.h>

#ifndef INCLUDED_feathers_controls__ListView_ItemRendererStorage
#include <feathers/controls/_ListView/ItemRendererStorage.h>
#endif
#ifndef INCLUDED_feathers_layout_Measurements
#include <feathers/layout/Measurements.h>
#endif
#ifndef INCLUDED_feathers_utils_DisplayObjectFactory
#include <feathers/utils/DisplayObjectFactory.h>
#endif
#ifndef INCLUDED_feathers_utils_DisplayObjectRecycler
#include <feathers/utils/DisplayObjectRecycler.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_734f3b44ab271ed5_1912_new,"feathers.controls._ListView.ItemRendererStorage","new",0xbcf1a771,"feathers.controls._ListView.ItemRendererStorage.new","feathers/controls/ListView.hx",1912,0x2d3f9f01)
namespace feathers{
namespace controls{
namespace _ListView{

void ItemRendererStorage_obj::__construct(::String id, ::feathers::utils::DisplayObjectRecycler recycler){
            	HX_STACKFRAME(&_hx_pos_734f3b44ab271ed5_1912_new)
HXLINE(1922)		this->inactiveItemRenderers = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(1921)		this->activeItemRenderers = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(1914)		this->id = id;
HXLINE(1915)		this->itemRendererRecycler = recycler;
            	}

Dynamic ItemRendererStorage_obj::__CreateEmpty() { return new ItemRendererStorage_obj; }

void *ItemRendererStorage_obj::_hx_vtable = 0;

Dynamic ItemRendererStorage_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< ItemRendererStorage_obj > _hx_result = new ItemRendererStorage_obj();
	_hx_result->__construct(inArgs[0],inArgs[1]);
	return _hx_result;
}

bool ItemRendererStorage_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x437b6889;
}


::hx::ObjectPtr< ItemRendererStorage_obj > ItemRendererStorage_obj::__new(::String id, ::feathers::utils::DisplayObjectRecycler recycler) {
	::hx::ObjectPtr< ItemRendererStorage_obj > __this = new ItemRendererStorage_obj();
	__this->__construct(id,recycler);
	return __this;
}

::hx::ObjectPtr< ItemRendererStorage_obj > ItemRendererStorage_obj::__alloc(::hx::Ctx *_hx_ctx,::String id, ::feathers::utils::DisplayObjectRecycler recycler) {
	ItemRendererStorage_obj *__this = (ItemRendererStorage_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(ItemRendererStorage_obj), true, "feathers.controls._ListView.ItemRendererStorage"));
	*(void **)__this = ItemRendererStorage_obj::_hx_vtable;
	__this->__construct(id,recycler);
	return __this;
}

ItemRendererStorage_obj::ItemRendererStorage_obj()
{
}

void ItemRendererStorage_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(ItemRendererStorage);
	HX_MARK_MEMBER_NAME(id,"id");
	HX_MARK_MEMBER_NAME(oldItemRendererRecycler,"oldItemRendererRecycler");
	HX_MARK_MEMBER_NAME(itemRendererRecycler,"itemRendererRecycler");
	HX_MARK_MEMBER_NAME(activeItemRenderers,"activeItemRenderers");
	HX_MARK_MEMBER_NAME(inactiveItemRenderers,"inactiveItemRenderers");
	HX_MARK_MEMBER_NAME(measurements,"measurements");
	HX_MARK_END_CLASS();
}

void ItemRendererStorage_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(id,"id");
	HX_VISIT_MEMBER_NAME(oldItemRendererRecycler,"oldItemRendererRecycler");
	HX_VISIT_MEMBER_NAME(itemRendererRecycler,"itemRendererRecycler");
	HX_VISIT_MEMBER_NAME(activeItemRenderers,"activeItemRenderers");
	HX_VISIT_MEMBER_NAME(inactiveItemRenderers,"inactiveItemRenderers");
	HX_VISIT_MEMBER_NAME(measurements,"measurements");
}

::hx::Val ItemRendererStorage_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"id") ) { return ::hx::Val( id ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"measurements") ) { return ::hx::Val( measurements ); }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"activeItemRenderers") ) { return ::hx::Val( activeItemRenderers ); }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"itemRendererRecycler") ) { return ::hx::Val( itemRendererRecycler ); }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"inactiveItemRenderers") ) { return ::hx::Val( inactiveItemRenderers ); }
		break;
	case 23:
		if (HX_FIELD_EQ(inName,"oldItemRendererRecycler") ) { return ::hx::Val( oldItemRendererRecycler ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val ItemRendererStorage_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"id") ) { id=inValue.Cast< ::String >(); return inValue; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"measurements") ) { measurements=inValue.Cast<  ::feathers::layout::Measurements >(); return inValue; }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"activeItemRenderers") ) { activeItemRenderers=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"itemRendererRecycler") ) { itemRendererRecycler=inValue.Cast<  ::feathers::utils::DisplayObjectRecycler >(); return inValue; }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"inactiveItemRenderers") ) { inactiveItemRenderers=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		break;
	case 23:
		if (HX_FIELD_EQ(inName,"oldItemRendererRecycler") ) { oldItemRendererRecycler=inValue.Cast<  ::feathers::utils::DisplayObjectRecycler >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void ItemRendererStorage_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("id",db,5b,00,00));
	outFields->push(HX_("oldItemRendererRecycler",dc,16,64,25));
	outFields->push(HX_("itemRendererRecycler",95,34,f8,23));
	outFields->push(HX_("activeItemRenderers",97,20,8e,5f));
	outFields->push(HX_("inactiveItemRenderers",d2,e7,19,be));
	outFields->push(HX_("measurements",f7,b4,57,85));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo ItemRendererStorage_obj_sMemberStorageInfo[] = {
	{::hx::fsString,(int)offsetof(ItemRendererStorage_obj,id),HX_("id",db,5b,00,00)},
	{::hx::fsObject /*  ::feathers::utils::DisplayObjectRecycler */ ,(int)offsetof(ItemRendererStorage_obj,oldItemRendererRecycler),HX_("oldItemRendererRecycler",dc,16,64,25)},
	{::hx::fsObject /*  ::feathers::utils::DisplayObjectRecycler */ ,(int)offsetof(ItemRendererStorage_obj,itemRendererRecycler),HX_("itemRendererRecycler",95,34,f8,23)},
	{::hx::fsObject /* ::Array< ::Dynamic> */ ,(int)offsetof(ItemRendererStorage_obj,activeItemRenderers),HX_("activeItemRenderers",97,20,8e,5f)},
	{::hx::fsObject /* ::Array< ::Dynamic> */ ,(int)offsetof(ItemRendererStorage_obj,inactiveItemRenderers),HX_("inactiveItemRenderers",d2,e7,19,be)},
	{::hx::fsObject /*  ::feathers::layout::Measurements */ ,(int)offsetof(ItemRendererStorage_obj,measurements),HX_("measurements",f7,b4,57,85)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *ItemRendererStorage_obj_sStaticStorageInfo = 0;
#endif

static ::String ItemRendererStorage_obj_sMemberFields[] = {
	HX_("id",db,5b,00,00),
	HX_("oldItemRendererRecycler",dc,16,64,25),
	HX_("itemRendererRecycler",95,34,f8,23),
	HX_("activeItemRenderers",97,20,8e,5f),
	HX_("inactiveItemRenderers",d2,e7,19,be),
	HX_("measurements",f7,b4,57,85),
	::String(null()) };

::hx::Class ItemRendererStorage_obj::__mClass;

void ItemRendererStorage_obj::__register()
{
	ItemRendererStorage_obj _hx_dummy;
	ItemRendererStorage_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("feathers.controls._ListView.ItemRendererStorage",ff,1a,73,aa);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(ItemRendererStorage_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< ItemRendererStorage_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ItemRendererStorage_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ItemRendererStorage_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace feathers
} // end namespace controls
} // end namespace _ListView
