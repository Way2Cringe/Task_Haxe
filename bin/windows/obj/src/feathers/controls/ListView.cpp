// Generated by Haxe 4.3.1
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_Type
#include <Type.h>
#endif
#ifndef INCLUDED_feathers_controls_BasicToggleButton
#include <feathers/controls/BasicToggleButton.h>
#endif
#ifndef INCLUDED_feathers_controls_IToggle
#include <feathers/controls/IToggle.h>
#endif
#ifndef INCLUDED_feathers_controls_ITriggerView
#include <feathers/controls/ITriggerView.h>
#endif
#ifndef INCLUDED_feathers_controls_ListView
#include <feathers/controls/ListView.h>
#endif
#ifndef INCLUDED_feathers_controls_ToggleButton
#include <feathers/controls/ToggleButton.h>
#endif
#ifndef INCLUDED_feathers_controls__ListView_ItemRendererStorage
#include <feathers/controls/_ListView/ItemRendererStorage.h>
#endif
#ifndef INCLUDED_feathers_controls_dataRenderers_IDataRenderer
#include <feathers/controls/dataRenderers/IDataRenderer.h>
#endif
#ifndef INCLUDED_feathers_controls_dataRenderers_IListViewItemRenderer
#include <feathers/controls/dataRenderers/IListViewItemRenderer.h>
#endif
#ifndef INCLUDED_feathers_controls_dataRenderers_ItemRenderer
#include <feathers/controls/dataRenderers/ItemRenderer.h>
#endif
#ifndef INCLUDED_feathers_controls_supportClasses_AdvancedLayoutViewPort
#include <feathers/controls/supportClasses/AdvancedLayoutViewPort.h>
#endif
#ifndef INCLUDED_feathers_controls_supportClasses_BaseScrollContainer
#include <feathers/controls/supportClasses/BaseScrollContainer.h>
#endif
#ifndef INCLUDED_feathers_controls_supportClasses_IViewPort
#include <feathers/controls/supportClasses/IViewPort.h>
#endif
#ifndef INCLUDED_feathers_core_FeathersControl
#include <feathers/core/FeathersControl.h>
#endif
#ifndef INCLUDED_feathers_core_IDataSelector
#include <feathers/core/IDataSelector.h>
#endif
#ifndef INCLUDED_feathers_core_IDisplayObject
#include <feathers/core/IDisplayObject.h>
#endif
#ifndef INCLUDED_feathers_core_IFocusContainer
#include <feathers/core/IFocusContainer.h>
#endif
#ifndef INCLUDED_feathers_core_IFocusManager
#include <feathers/core/IFocusManager.h>
#endif
#ifndef INCLUDED_feathers_core_IFocusManagerAware
#include <feathers/core/IFocusManagerAware.h>
#endif
#ifndef INCLUDED_feathers_core_IFocusObject
#include <feathers/core/IFocusObject.h>
#endif
#ifndef INCLUDED_feathers_core_IHTMLTextControl
#include <feathers/core/IHTMLTextControl.h>
#endif
#ifndef INCLUDED_feathers_core_IIndexSelector
#include <feathers/core/IIndexSelector.h>
#endif
#ifndef INCLUDED_feathers_core_IMeasureObject
#include <feathers/core/IMeasureObject.h>
#endif
#ifndef INCLUDED_feathers_core_IPointerDelegate
#include <feathers/core/IPointerDelegate.h>
#endif
#ifndef INCLUDED_feathers_core_IStateContext
#include <feathers/core/IStateContext.h>
#endif
#ifndef INCLUDED_feathers_core_ITextControl
#include <feathers/core/ITextControl.h>
#endif
#ifndef INCLUDED_feathers_core_IUIControl
#include <feathers/core/IUIControl.h>
#endif
#ifndef INCLUDED_feathers_core_IValidating
#include <feathers/core/IValidating.h>
#endif
#ifndef INCLUDED_feathers_core_InvalidationFlag
#include <feathers/core/InvalidationFlag.h>
#endif
#ifndef INCLUDED_feathers_core_MeasureSprite
#include <feathers/core/MeasureSprite.h>
#endif
#ifndef INCLUDED_feathers_core_ValidatingSprite
#include <feathers/core/ValidatingSprite.h>
#endif
#ifndef INCLUDED_feathers_data_IFlatCollection
#include <feathers/data/IFlatCollection.h>
#endif
#ifndef INCLUDED_feathers_data_ListViewItemState
#include <feathers/data/ListViewItemState.h>
#endif
#ifndef INCLUDED_feathers_events_FeathersEvent
#include <feathers/events/FeathersEvent.h>
#endif
#ifndef INCLUDED_feathers_events_FlatCollectionEvent
#include <feathers/events/FlatCollectionEvent.h>
#endif
#ifndef INCLUDED_feathers_events_ListViewEvent
#include <feathers/events/ListViewEvent.h>
#endif
#ifndef INCLUDED_feathers_events_TriggerEvent
#include <feathers/events/TriggerEvent.h>
#endif
#ifndef INCLUDED_feathers_layout_IKeyboardNavigationLayout
#include <feathers/layout/IKeyboardNavigationLayout.h>
#endif
#ifndef INCLUDED_feathers_layout_ILayout
#include <feathers/layout/ILayout.h>
#endif
#ifndef INCLUDED_feathers_layout_ILayoutIndexObject
#include <feathers/layout/ILayoutIndexObject.h>
#endif
#ifndef INCLUDED_feathers_layout_ILayoutObject
#include <feathers/layout/ILayoutObject.h>
#endif
#ifndef INCLUDED_feathers_layout_IScrollLayout
#include <feathers/layout/IScrollLayout.h>
#endif
#ifndef INCLUDED_feathers_layout_IVirtualLayout
#include <feathers/layout/IVirtualLayout.h>
#endif
#ifndef INCLUDED_feathers_layout_Measurements
#include <feathers/layout/Measurements.h>
#endif
#ifndef INCLUDED_feathers_layout_VirtualLayoutRange
#include <feathers/layout/VirtualLayoutRange.h>
#endif
#ifndef INCLUDED_feathers_style_IDarkModeTheme
#include <feathers/style/IDarkModeTheme.h>
#endif
#ifndef INCLUDED_feathers_style_IStyleObject
#include <feathers/style/IStyleObject.h>
#endif
#ifndef INCLUDED_feathers_style_ITheme
#include <feathers/style/ITheme.h>
#endif
#ifndef INCLUDED_feathers_style_IVariantStyleObject
#include <feathers/style/IVariantStyleObject.h>
#endif
#ifndef INCLUDED_feathers_themes_ClassVariantTheme
#include <feathers/themes/ClassVariantTheme.h>
#endif
#ifndef INCLUDED_feathers_themes_steel_BaseSteelTheme
#include <feathers/themes/steel/BaseSteelTheme.h>
#endif
#ifndef INCLUDED_feathers_themes_steel_components_SteelListViewStyles
#include <feathers/themes/steel/components/SteelListViewStyles.h>
#endif
#ifndef INCLUDED_feathers_utils_DisplayObjectFactory
#include <feathers/utils/DisplayObjectFactory.h>
#endif
#ifndef INCLUDED_feathers_utils_DisplayObjectRecycler
#include <feathers/utils/DisplayObjectRecycler.h>
#endif
#ifndef INCLUDED_feathers_utils_Scroller
#include <feathers/utils/Scroller.h>
#endif
#ifndef INCLUDED_haxe_Exception
#include <haxe/Exception.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_BalancedTree
#include <haxe/ds/BalancedTree.h>
#endif
#ifndef INCLUDED_haxe_ds_EnumValueMap
#include <haxe/ds/EnumValueMap.h>
#endif
#ifndef INCLUDED_haxe_ds_ObjectMap
#include <haxe/ds/ObjectMap.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif
#ifndef INCLUDED_lime_app_IModule
#include <lime/app/IModule.h>
#endif
#ifndef INCLUDED_lime_utils_ObjectPool_feathers_data_ListViewItemState
#include <lime/utils/ObjectPool_feathers_data_ListViewItemState.h>
#endif
#ifndef INCLUDED_motion_easing_IEasing
#include <motion/easing/IEasing.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_display_Stage
#include <openfl/display/Stage.h>
#endif
#ifndef INCLUDED_openfl_errors_Error
#include <openfl/errors/Error.h>
#endif
#ifndef INCLUDED_openfl_errors_IllegalOperationError
#include <openfl/errors/IllegalOperationError.h>
#endif
#ifndef INCLUDED_openfl_events_Event
#include <openfl/events/Event.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_KeyboardEvent
#include <openfl/events/KeyboardEvent.h>
#endif
#ifndef INCLUDED_openfl_events_MouseEvent
#include <openfl/events/MouseEvent.h>
#endif
#ifndef INCLUDED_openfl_events_TouchEvent
#include <openfl/events/TouchEvent.h>
#endif
#ifndef INCLUDED_openfl_geom_Point
#include <openfl/geom/Point.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_c5852abc10682dee_743_new,"feathers.controls.ListView","new",0xe061376f,"feathers.controls.ListView.new","feathers/controls/ListView.hx",743,0x2d3f9f01)
HX_DEFINE_STACK_FRAME(_hx_pos_c5852abc10682dee_110_new,"feathers.controls.ListView","new",0xe061376f,"feathers.controls.ListView.new","feathers/controls/ListView.hx",110,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_228_get_tabEnabled,"feathers.controls.ListView","get_tabEnabled",0x4663e446,"feathers.controls.ListView.get_tabEnabled","feathers/controls/ListView.hx",228,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_241_get_childFocusEnabled,"feathers.controls.ListView","get_childFocusEnabled",0x9d5a40eb,"feathers.controls.ListView.get_childFocusEnabled","feathers/controls/ListView.hx",241,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_244_set_childFocusEnabled,"feathers.controls.ListView","set_childFocusEnabled",0xf1630ef7,"feathers.controls.ListView.set_childFocusEnabled","feathers/controls/ListView.hx",244,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_290_get_dataProvider,"feathers.controls.ListView","get_dataProvider",0x14554595,"feathers.controls.ListView.get_dataProvider","feathers/controls/ListView.hx",290,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_293_set_dataProvider,"feathers.controls.ListView","set_dataProvider",0x6a973309,"feathers.controls.ListView.set_dataProvider","feathers/controls/ListView.hx",293,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_350_get_selectedIndex,"feathers.controls.ListView","get_selectedIndex",0xaf98855d,"feathers.controls.ListView.get_selectedIndex","feathers/controls/ListView.hx",350,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_353_set_selectedIndex,"feathers.controls.ListView","set_selectedIndex",0xd3065d69,"feathers.controls.ListView.set_selectedIndex","feathers/controls/ListView.hx",353,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_392_get_maxSelectedIndex,"feathers.controls.ListView","get_maxSelectedIndex",0x2913028d,"feathers.controls.ListView.get_maxSelectedIndex","feathers/controls/ListView.hx",392,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_408_get_selectedItem,"feathers.controls.ListView","get_selectedItem",0x5b7eed28,"feathers.controls.ListView.get_selectedItem","feathers/controls/ListView.hx",408,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_411_set_selectedItem,"feathers.controls.ListView","set_selectedItem",0xb1c0da9c,"feathers.controls.ListView.set_selectedItem","feathers/controls/ListView.hx",411,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_459_get_allowMultipleSelection,"feathers.controls.ListView","get_allowMultipleSelection",0x5cc691ed,"feathers.controls.ListView.get_allowMultipleSelection","feathers/controls/ListView.hx",459,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_462_set_allowMultipleSelection,"feathers.controls.ListView","set_allowMultipleSelection",0xbc5b5861,"feathers.controls.ListView.set_allowMultipleSelection","feathers/controls/ListView.hx",462,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_494_get_selectedIndices,"feathers.controls.ListView","get_selectedIndices",0x2d5f9a32,"feathers.controls.ListView.get_selectedIndices","feathers/controls/ListView.hx",494,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_497_set_selectedIndices,"feathers.controls.ListView","set_selectedIndices",0x69fc8d3e,"feathers.controls.ListView.set_selectedIndices","feathers/controls/ListView.hx",497,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_543_get_selectedItems,"feathers.controls.ListView","get_selectedItems",0xb390964b,"feathers.controls.ListView.get_selectedItems","feathers/controls/ListView.hx",543,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_546_set_selectedItems,"feathers.controls.ListView","set_selectedItems",0xd6fe6e57,"feathers.controls.ListView.set_selectedItems","feathers/controls/ListView.hx",546,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_640_get_itemRendererRecycler,"feathers.controls.ListView","get_itemRendererRecycler",0xcde9e6af,"feathers.controls.ListView.get_itemRendererRecycler","feathers/controls/ListView.hx",640,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_644_set_itemRendererRecycler,"feathers.controls.ListView","set_itemRendererRecycler",0xe0c46823,"feathers.controls.ListView.set_itemRendererRecycler","feathers/controls/ListView.hx",644,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_678_get_forceItemStateUpdate,"feathers.controls.ListView","get_forceItemStateUpdate",0x2d00d116,"feathers.controls.ListView.get_forceItemStateUpdate","feathers/controls/ListView.hx",678,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_681_set_forceItemStateUpdate,"feathers.controls.ListView","set_forceItemStateUpdate",0x3fdb528a,"feathers.controls.ListView.set_forceItemStateUpdate","feathers/controls/ListView.hx",681,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_727_get_itemRendererRecyclerIDFunction,"feathers.controls.ListView","get_itemRendererRecyclerIDFunction",0x62f13182,"feathers.controls.ListView.get_itemRendererRecyclerIDFunction","feathers/controls/ListView.hx",727,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_730_set_itemRendererRecyclerIDFunction,"feathers.controls.ListView","set_itemRendererRecyclerIDFunction",0xc31f8bf6,"feathers.controls.ListView.set_itemRendererRecyclerIDFunction","feathers/controls/ListView.hx",730,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_772_get_selectable,"feathers.controls.ListView","get_selectable",0xca85a430,"feathers.controls.ListView.get_selectable","feathers/controls/ListView.hx",772,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_775_set_selectable,"feathers.controls.ListView","set_selectable",0xeaa58ca4,"feathers.controls.ListView.set_selectable","feathers/controls/ListView.hx",775,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_804_get_virtualLayout,"feathers.controls.ListView","get_virtualLayout",0xcb1769bb,"feathers.controls.ListView.get_virtualLayout","feathers/controls/ListView.hx",804,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_807_set_virtualLayout,"feathers.controls.ListView","set_virtualLayout",0xee8541c7,"feathers.controls.ListView.set_virtualLayout","feathers/controls/ListView.hx",807,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_861___default_itemToText,"feathers.controls.ListView","__default_itemToText",0x87b4ee6a,"feathers.controls.ListView.__default_itemToText","feathers/controls/ListView.hx",861,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_888___default_itemToEnabled,"feathers.controls.ListView","__default_itemToEnabled",0xb74dd6e4,"feathers.controls.ListView.__default_itemToEnabled","feathers/controls/ListView.hx",888,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_901_scrollToIndex,"feathers.controls.ListView","scrollToIndex",0x595c72d9,"feathers.controls.ListView.scrollToIndex","feathers/controls/ListView.hx",901,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_922_itemToItemRenderer,"feathers.controls.ListView","itemToItemRenderer",0xa7f965d5,"feathers.controls.ListView.itemToItemRenderer","feathers/controls/ListView.hx",922,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_935_itemRendererToItem,"feathers.controls.ListView","itemRendererToItem",0x338b1415,"feathers.controls.ListView.itemRendererToItem","feathers/controls/ListView.hx",935,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_958_indexToItemRenderer,"feathers.controls.ListView","indexToItemRenderer",0x5ac0ef52,"feathers.controls.ListView.indexToItemRenderer","feathers/controls/ListView.hx",958,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_975_getItemRendererRecycler,"feathers.controls.ListView","getItemRendererRecycler",0x543618da,"feathers.controls.ListView.getItemRendererRecycler","feathers/controls/ListView.hx",975,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_995_setItemRendererRecycler,"feathers.controls.ListView","setItemRendererRecycler",0x569781e6,"feathers.controls.ListView.setItemRendererRecycler","feathers/controls/ListView.hx",995,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_1009_initializeListViewTheme,"feathers.controls.ListView","initializeListViewTheme",0x1599aa45,"feathers.controls.ListView.initializeListViewTheme","feathers/controls/ListView.hx",1009,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_1013_update,"feathers.controls.ListView","update",0x8bfcb25a,"feathers.controls.ListView.update","feathers/controls/ListView.hx",1013,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_1054_createScroller,"feathers.controls.ListView","createScroller",0x6ef4f227,"feathers.controls.ListView.createScroller","feathers/controls/ListView.hx",1054,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_1059_refreshScrollerValues,"feathers.controls.ListView","refreshScrollerValues",0xcf59bb46,"feathers.controls.ListView.refreshScrollerValues","feathers/controls/ListView.hx",1059,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_1077_needsScrollMeasurement,"feathers.controls.ListView","needsScrollMeasurement",0x3b3f8723,"feathers.controls.ListView.needsScrollMeasurement","feathers/controls/ListView.hx",1077,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_1096_refreshItemRenderers,"feathers.controls.ListView","refreshItemRenderers",0x34761773,"feathers.controls.ListView.refreshItemRenderers","feathers/controls/ListView.hx",1096,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_1151_refreshInactiveItemRenderers,"feathers.controls.ListView","refreshInactiveItemRenderers",0x945aef08,"feathers.controls.ListView.refreshInactiveItemRenderers","feathers/controls/ListView.hx",1151,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_1166_recoverInactiveItemRenderers,"feathers.controls.ListView","recoverInactiveItemRenderers",0xf9b2db9f,"feathers.controls.ListView.recoverInactiveItemRenderers","feathers/controls/ListView.hx",1166,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_1190_freeInactiveItemRenderers,"feathers.controls.ListView","freeInactiveItemRenderers",0x5f235dd5,"feathers.controls.ListView.freeInactiveItemRenderers","feathers/controls/ListView.hx",1190,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_1205_findUnrenderedData,"feathers.controls.ListView","findUnrenderedData",0x101d65c2,"feathers.controls.ListView.findUnrenderedData","feathers/controls/ListView.hx",1205,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_1262_populateCurrentItemState,"feathers.controls.ListView","populateCurrentItemState",0x9a997420,"feathers.controls.ListView.populateCurrentItemState","feathers/controls/ListView.hx",1262,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_1294_resetItemRenderer,"feathers.controls.ListView","resetItemRenderer",0x9120a534,"feathers.controls.ListView.resetItemRenderer","feathers/controls/ListView.hx",1294,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_1305_updateItemRenderer,"feathers.controls.ListView","updateItemRenderer",0x52032ef0,"feathers.controls.ListView.updateItemRenderer","feathers/controls/ListView.hx",1305,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_1316_refreshItemRendererProperties,"feathers.controls.ListView","refreshItemRendererProperties",0x954f0913,"feathers.controls.ListView.refreshItemRendererProperties","feathers/controls/ListView.hx",1316,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_1345_renderUnrenderedData,"feathers.controls.ListView","renderUnrenderedData",0x17de2fdf,"feathers.controls.ListView.renderUnrenderedData","feathers/controls/ListView.hx",1345,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_1362_createItemRenderer,"feathers.controls.ListView","createItemRenderer",0xd4143063,"feathers.controls.ListView.createItemRenderer","feathers/controls/ListView.hx",1362,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_1412_destroyItemRenderer,"feathers.controls.ListView","destroyItemRenderer",0xb7fece9f,"feathers.controls.ListView.destroyItemRenderer","feathers/controls/ListView.hx",1412,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_1419_itemStateToStorage,"feathers.controls.ListView","itemStateToStorage",0x24b98cf3,"feathers.controls.ListView.itemStateToStorage","feathers/controls/ListView.hx",1419,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_1450_refreshSelectedIndicesAfterFilterOrSort,"feathers.controls.ListView","refreshSelectedIndicesAfterFilterOrSort",0x3893b113,"feathers.controls.ListView.refreshSelectedIndicesAfterFilterOrSort","feathers/controls/ListView.hx",1450,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_1459_handleSelectionChange,"feathers.controls.ListView","handleSelectionChange",0x2d1776e3,"feathers.controls.ListView.handleSelectionChange","feathers/controls/ListView.hx",1459,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_1509_handlePendingScroll,"feathers.controls.ListView","handlePendingScroll",0x9a43980b,"feathers.controls.ListView.handlePendingScroll","feathers/controls/ListView.hx",1509,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_1562_listView_itemRenderer_touchTapHandler,"feathers.controls.ListView","listView_itemRenderer_touchTapHandler",0x1513dc28,"feathers.controls.ListView.listView_itemRenderer_touchTapHandler","feathers/controls/ListView.hx",1562,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_1581_listView_itemRenderer_clickHandler,"feathers.controls.ListView","listView_itemRenderer_clickHandler",0x256f7740,"feathers.controls.ListView.listView_itemRenderer_clickHandler","feathers/controls/ListView.hx",1581,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_1596_listView_itemRenderer_triggerHandler,"feathers.controls.ListView","listView_itemRenderer_triggerHandler",0x04918fd0,"feathers.controls.ListView.listView_itemRenderer_triggerHandler","feathers/controls/ListView.hx",1596,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_1611_listView_itemRenderer_resizeHandler,"feathers.controls.ListView","listView_itemRenderer_resizeHandler",0xc1f06398,"feathers.controls.ListView.listView_itemRenderer_resizeHandler","feathers/controls/ListView.hx",1611,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_1618_listView_itemRenderer_changeHandler,"feathers.controls.ListView","listView_itemRenderer_changeHandler",0x7acd539c,"feathers.controls.ListView.listView_itemRenderer_changeHandler","feathers/controls/ListView.hx",1618,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_1635_listView_dataProvider_changeHandler,"feathers.controls.ListView","listView_dataProvider_changeHandler",0x70979e61,"feathers.controls.ListView.listView_dataProvider_changeHandler","feathers/controls/ListView.hx",1635,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_1638_listView_dataProvider_addItemHandler,"feathers.controls.ListView","listView_dataProvider_addItemHandler",0x1f62ca4f,"feathers.controls.ListView.listView_dataProvider_addItemHandler","feathers/controls/ListView.hx",1638,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_1659_listView_dataProvider_removeItemHandler,"feathers.controls.ListView","listView_dataProvider_removeItemHandler",0x3e23aeba,"feathers.controls.ListView.listView_dataProvider_removeItemHandler","feathers/controls/ListView.hx",1659,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_1692_listView_dataProvider_replaceItemHandler,"feathers.controls.ListView","listView_dataProvider_replaceItemHandler",0x2b2b479c,"feathers.controls.ListView.listView_dataProvider_replaceItemHandler","feathers/controls/ListView.hx",1692,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_1712_listView_dataProvider_removeAllHandler,"feathers.controls.ListView","listView_dataProvider_removeAllHandler",0x33ec1a46,"feathers.controls.ListView.listView_dataProvider_removeAllHandler","feathers/controls/ListView.hx",1712,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_1724_listView_dataProvider_resetHandler,"feathers.controls.ListView","listView_dataProvider_resetHandler",0x45cf6d74,"feathers.controls.ListView.listView_dataProvider_resetHandler","feathers/controls/ListView.hx",1724,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_1737_listView_dataProvider_sortChangeHandler,"feathers.controls.ListView","listView_dataProvider_sortChangeHandler",0x8e95a3a3,"feathers.controls.ListView.listView_dataProvider_sortChangeHandler","feathers/controls/ListView.hx",1737,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_1751_listView_dataProvider_filterChangeHandler,"feathers.controls.ListView","listView_dataProvider_filterChangeHandler",0x79b7f2c9,"feathers.controls.ListView.listView_dataProvider_filterChangeHandler","feathers/controls/ListView.hx",1751,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_1765_updateItemRendererForIndex,"feathers.controls.ListView","updateItemRendererForIndex",0x41be7e59,"feathers.controls.ListView.updateItemRendererForIndex","feathers/controls/ListView.hx",1765,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_1796_listView_dataProvider_updateItemHandler,"feathers.controls.ListView","listView_dataProvider_updateItemHandler",0xe83cc115,"feathers.controls.ListView.listView_dataProvider_updateItemHandler","feathers/controls/ListView.hx",1796,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_1800_listView_dataProvider_updateAllHandler,"feathers.controls.ListView","listView_dataProvider_updateAllHandler",0xc42ecc4b,"feathers.controls.ListView.listView_dataProvider_updateAllHandler","feathers/controls/ListView.hx",1800,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_1805_navigateWithKeyboard,"feathers.controls.ListView","navigateWithKeyboard",0x3fb66daf,"feathers.controls.ListView.navigateWithKeyboard","feathers/controls/ListView.hx",1805,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_1874_baseScrollContainer_keyDownHandler,"feathers.controls.ListView","baseScrollContainer_keyDownHandler",0x9b642996,"feathers.controls.ListView.baseScrollContainer_keyDownHandler","feathers/controls/ListView.hx",1874,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_1885_listView_keyDownHandler,"feathers.controls.ListView","listView_keyDownHandler",0xd2981ad4,"feathers.controls.ListView.listView_keyDownHandler","feathers/controls/ListView.hx",1885,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_51bd3f43eb83f231_42_get_styleContext,"feathers.controls.ListView","get_styleContext",0xcba698d8,"feathers.controls.ListView.get_styleContext","feathers/macros/StyleContextMacro.hx",42,0xea61cbb9)
HX_LOCAL_STACK_FRAME(_hx_pos_c505d7860b5e39ae_85_get_layout,"feathers.controls.ListView","get_layout",0xdab24744,"feathers.controls.ListView.get_layout","feathers/macros/StyleMacro.hx",85,0x3426f2ba)
HX_LOCAL_STACK_FRAME(_hx_pos_c505d7860b5e39ae_99_set_layout,"feathers.controls.ListView","set_layout",0xde2fe5b8,"feathers.controls.ListView.set_layout","feathers/macros/StyleMacro.hx",99,0x3426f2ba)
HX_LOCAL_STACK_FRAME(_hx_pos_c505d7860b5e39ae_131_clearStyle_layout,"feathers.controls.ListView","clearStyle_layout",0x2b12f3b4,"feathers.controls.ListView.clearStyle_layout","feathers/macros/StyleMacro.hx",131,0x3426f2ba)
HX_LOCAL_STACK_FRAME(_hx_pos_c505d7860b5e39ae_85_get_customItemRendererVariant,"feathers.controls.ListView","get_customItemRendererVariant",0xbd04a424,"feathers.controls.ListView.get_customItemRendererVariant","feathers/macros/StyleMacro.hx",85,0x3426f2ba)
HX_LOCAL_STACK_FRAME(_hx_pos_c505d7860b5e39ae_99_set_customItemRendererVariant,"feathers.controls.ListView","set_customItemRendererVariant",0x7edc5e30,"feathers.controls.ListView.set_customItemRendererVariant","feathers/macros/StyleMacro.hx",99,0x3426f2ba)
HX_LOCAL_STACK_FRAME(_hx_pos_c505d7860b5e39ae_131_clearStyle_customItemRendererVariant,"feathers.controls.ListView","clearStyle_customItemRendererVariant",0x93477db4,"feathers.controls.ListView.clearStyle_customItemRendererVariant","feathers/macros/StyleMacro.hx",131,0x3426f2ba)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_183_defaultUpdateItemRenderer,"feathers.controls.ListView","defaultUpdateItemRenderer",0x6696f88f,"feathers.controls.ListView.defaultUpdateItemRenderer","feathers/controls/ListView.hx",183,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_190_defaultResetItemRenderer,"feathers.controls.ListView","defaultResetItemRenderer",0xccea3475,"feathers.controls.ListView.defaultResetItemRenderer","feathers/controls/ListView.hx",190,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_110_boot,"feathers.controls.ListView","boot",0x6cc84a43,"feathers.controls.ListView.boot","feathers/controls/ListView.hx",110,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_127_boot,"feathers.controls.ListView","boot",0x6cc84a43,"feathers.controls.ListView.boot","feathers/controls/ListView.hx",127,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_145_boot,"feathers.controls.ListView","boot",0x6cc84a43,"feathers.controls.ListView.boot","feathers/controls/ListView.hx",145,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_162_boot,"feathers.controls.ListView","boot",0x6cc84a43,"feathers.controls.ListView.boot","feathers/controls/ListView.hx",162,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_176_boot,"feathers.controls.ListView","boot",0x6cc84a43,"feathers.controls.ListView.boot","feathers/controls/ListView.hx",176,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_178_boot,"feathers.controls.ListView","boot",0x6cc84a43,"feathers.controls.ListView.boot","feathers/controls/ListView.hx",178,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_180_boot,"feathers.controls.ListView","boot",0x6cc84a43,"feathers.controls.ListView.boot","feathers/controls/ListView.hx",180,0x2d3f9f01)
namespace feathers{
namespace controls{

void ListView_obj::__construct(::Dynamic dataProvider, ::Dynamic changeListener){
            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_0) HXARGC(0)
            		 ::feathers::data::ListViewItemState _hx_run(){
            			HX_GC_STACKFRAME(&_hx_pos_c5852abc10682dee_743_new)
HXLINE( 743)			return  ::feathers::data::ListViewItemState_obj::__alloc( HX_CTX ,null(),null(),null(),null());
            		}
            		HX_END_LOCAL_FUNC0(return)

            	HX_GC_STACKFRAME(&_hx_pos_c5852abc10682dee_110_new)
HXLINE( 623)		this->_hx___customItemRendererVariant = null();
HXLINE( 606)		this->_hx___layout = null();
HXLINE( 836)		this->_ignoreLayoutChanges = false;
HXLINE( 835)		this->_ignoreSelectionChange = false;
HXLINE( 833)		this->_pendingScrollDuration = null();
HXLINE( 832)		this->_pendingScrollIndex = -1;
HXLINE( 830)		this->pointerSelectionEnabled = true;
HXLINE( 787)		this->_virtualLayout = true;
HXLINE( 750)		this->_selectable = true;
HXLINE( 748)		this->_layoutItems = ::Array_obj< ::Dynamic>::__new(0);
HXLINE( 747)		this->_tempVisibleIndices =  ::feathers::layout::VirtualLayoutRange_obj::__alloc( HX_CTX ,0,0);
HXLINE( 746)		this->_visibleIndices =  ::feathers::layout::VirtualLayoutRange_obj::__alloc( HX_CTX ,0,0);
HXLINE( 745)		this->_virtualCache = ::cpp::VirtualArray_obj::__new(0);
HXLINE( 744)		this->_unrenderedData = ::cpp::VirtualArray_obj::__new(0);
HXLINE( 743)		this->itemStatePool =  ::lime::utils::ObjectPool_feathers_data_ListViewItemState_obj::__alloc( HX_CTX , ::Dynamic(new _hx_Closure_0()),null(),null());
HXLINE( 742)		this->itemRendererToItemState =  ::haxe::ds::ObjectMap_obj::__alloc( HX_CTX );
HXLINE( 741)		this->dataToItemRenderer =  ::haxe::ds::ObjectMap_obj::__alloc( HX_CTX );
HXLINE( 740)		this->_additionalStorage = null();
HXLINE( 739)		this->_defaultStorage =  ::feathers::controls::_ListView::ItemRendererStorage_obj::__alloc( HX_CTX ,null(),::feathers::utils::DisplayObjectRecycler_obj::withClass(::hx::ClassOf< ::feathers::controls::dataRenderers::ItemRenderer >(),null(),null(),null()));
HXLINE( 690)		this->_recyclerMap = null();
HXLINE( 655)		this->_forceItemStateUpdate = false;
HXLINE( 608)		this->_previousCustomItemRendererVariant = null();
HXLINE( 523)		this->_selectedItems = ::cpp::VirtualArray_obj::__new(0);
HXLINE( 473)		this->_selectedIndices = ::Array_obj< int >::__new(0);
HXLINE( 471)		this->_selectionAnchorIndex = -1;
HXLINE( 438)		this->_allowMultipleSelection = false;
HXLINE( 399)		this->_selectedItem = null();
HXLINE( 341)		this->_selectedIndex = -1;
HXLINE( 233)		this->_childFocusEnabled = true;
HXLINE( 202)		this->initializeListViewTheme();
HXLINE( 204)		super::__construct();
HXLINE( 206)		this->set_dataProvider(dataProvider);
HXLINE( 208)		this->set_tabEnabled(true);
HXLINE( 209)		this->focusRect = null();
HXLINE( 211)		if (::hx::IsNull( this->get_viewPort() )) {
HXLINE( 212)			this->listViewPort =  ::feathers::controls::supportClasses::AdvancedLayoutViewPort_obj::__alloc( HX_CTX );
HXLINE( 213)			this->addChild(this->listViewPort);
HXLINE( 214)			this->set_viewPort(this->listViewPort);
            		}
HXLINE( 217)		this->addEventListener(HX_("keyDown",a1,69,47,9c),this->listView_keyDownHandler_dyn(),null(),null(),null());
HXLINE( 219)		if (::hx::IsNotNull( changeListener )) {
HXLINE( 220)			this->addEventListener(HX_("change",70,91,72,b7),changeListener,null(),null(),null());
            		}
            	}

Dynamic ListView_obj::__CreateEmpty() { return new ListView_obj; }

void *ListView_obj::_hx_vtable = 0;

Dynamic ListView_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< ListView_obj > _hx_result = new ListView_obj();
	_hx_result->__construct(inArgs[0],inArgs[1]);
	return _hx_result;
}

bool ListView_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x1f4df417) {
		if (inClassId<=(int)0x093ab78b) {
			if (inClassId<=(int)0x0498edf2) {
				if (inClassId<=(int)0x0330636f) {
					return inClassId==(int)0x00000001 || inClassId==(int)0x0330636f;
				} else {
					return inClassId==(int)0x0498edf2;
				}
			} else {
				return inClassId==(int)0x093ab78b;
			}
		} else {
			return inClassId==(int)0x0c89e854 || inClassId==(int)0x1f4df417;
		}
	} else {
		if (inClassId<=(int)0x4af7dd8e) {
			if (inClassId<=(int)0x4033f4be) {
				return inClassId==(int)0x2607a7f1 || inClassId==(int)0x4033f4be;
			} else {
				return inClassId==(int)0x4af7dd8e;
			}
		} else {
			return inClassId==(int)0x58123034 || inClassId==(int)0x6b353933;
		}
	}
}

static ::openfl::events::IEventDispatcher_obj _hx_feathers_controls_ListView__hx_openfl_events_IEventDispatcher= {
	( void (::hx::Object::*)(::String, ::Dynamic,::hx::Null< bool > ,::hx::Null< int > ,::hx::Null< bool > ))&::feathers::controls::ListView_obj::addEventListener,
	( bool (::hx::Object::*)( ::openfl::events::Event))&::feathers::controls::ListView_obj::dispatchEvent,
	( bool (::hx::Object::*)(::String))&::feathers::controls::ListView_obj::hasEventListener,
	( void (::hx::Object::*)(::String, ::Dynamic,::hx::Null< bool > ))&::feathers::controls::ListView_obj::removeEventListener,
	( bool (::hx::Object::*)(::String))&::feathers::controls::ListView_obj::willTrigger,
};

static ::feathers::core::IFocusContainer_obj _hx_feathers_controls_ListView__hx_feathers_core_IFocusContainer= {
	( void (::hx::Object::*)(::String, ::Dynamic,::hx::Null< bool > ,::hx::Null< int > ,::hx::Null< bool > ))&::feathers::controls::ListView_obj::addEventListener,
	( bool (::hx::Object::*)( ::openfl::events::Event))&::feathers::controls::ListView_obj::dispatchEvent,
	( bool (::hx::Object::*)(::String))&::feathers::controls::ListView_obj::hasEventListener,
	( void (::hx::Object::*)(::String, ::Dynamic,::hx::Null< bool > ))&::feathers::controls::ListView_obj::removeEventListener,
	( bool (::hx::Object::*)(::String))&::feathers::controls::ListView_obj::willTrigger,
	( Float (::hx::Object::*)())&::feathers::controls::ListView_obj::get_x,
	( Float (::hx::Object::*)(Float))&::feathers::controls::ListView_obj::set_x,
	( Float (::hx::Object::*)())&::feathers::controls::ListView_obj::get_y,
	( Float (::hx::Object::*)(Float))&::feathers::controls::ListView_obj::set_y,
	( Float (::hx::Object::*)())&::feathers::controls::ListView_obj::get_alpha,
	( Float (::hx::Object::*)(Float))&::feathers::controls::ListView_obj::set_alpha,
	( Float (::hx::Object::*)())&::feathers::controls::ListView_obj::get_width,
	( Float (::hx::Object::*)(Float))&::feathers::controls::ListView_obj::set_width,
	( Float (::hx::Object::*)())&::feathers::controls::ListView_obj::get_height,
	( Float (::hx::Object::*)(Float))&::feathers::controls::ListView_obj::set_height,
	( Float (::hx::Object::*)())&::feathers::controls::ListView_obj::get_scaleX,
	( Float (::hx::Object::*)(Float))&::feathers::controls::ListView_obj::set_scaleX,
	( Float (::hx::Object::*)())&::feathers::controls::ListView_obj::get_scaleY,
	( Float (::hx::Object::*)(Float))&::feathers::controls::ListView_obj::set_scaleY,
	( bool (::hx::Object::*)())&::feathers::controls::ListView_obj::get_visible,
	( bool (::hx::Object::*)(bool))&::feathers::controls::ListView_obj::set_visible,
	( bool (::hx::Object::*)())&::feathers::controls::ListView_obj::get_focusEnabled,
	( bool (::hx::Object::*)(bool))&::feathers::controls::ListView_obj::set_focusEnabled,
	( ::Dynamic (::hx::Object::*)())&::feathers::controls::ListView_obj::get_focusOwner,
	( ::Dynamic (::hx::Object::*)(::Dynamic))&::feathers::controls::ListView_obj::set_focusOwner,
	( void (::hx::Object::*)(bool))&::feathers::controls::ListView_obj::showFocus,
	( bool (::hx::Object::*)())&::feathers::controls::ListView_obj::get_childFocusEnabled,
	( bool (::hx::Object::*)(bool))&::feathers::controls::ListView_obj::set_childFocusEnabled,
};

static ::feathers::core::IDataSelector_obj _hx_feathers_controls_ListView__hx_feathers_core_IDataSelector= {
	(  ::Dynamic (::hx::Object::*)())&::feathers::controls::ListView_obj::get_selectedItem,
	(  ::Dynamic (::hx::Object::*)( ::Dynamic))&::feathers::controls::ListView_obj::set_selectedItem,
};

static ::feathers::core::IFocusObject_obj _hx_feathers_controls_ListView__hx_feathers_core_IFocusObject= {
	( void (::hx::Object::*)(::String, ::Dynamic,::hx::Null< bool > ,::hx::Null< int > ,::hx::Null< bool > ))&::feathers::controls::ListView_obj::addEventListener,
	( bool (::hx::Object::*)( ::openfl::events::Event))&::feathers::controls::ListView_obj::dispatchEvent,
	( bool (::hx::Object::*)(::String))&::feathers::controls::ListView_obj::hasEventListener,
	( void (::hx::Object::*)(::String, ::Dynamic,::hx::Null< bool > ))&::feathers::controls::ListView_obj::removeEventListener,
	( bool (::hx::Object::*)(::String))&::feathers::controls::ListView_obj::willTrigger,
	( Float (::hx::Object::*)())&::feathers::controls::ListView_obj::get_x,
	( Float (::hx::Object::*)(Float))&::feathers::controls::ListView_obj::set_x,
	( Float (::hx::Object::*)())&::feathers::controls::ListView_obj::get_y,
	( Float (::hx::Object::*)(Float))&::feathers::controls::ListView_obj::set_y,
	( Float (::hx::Object::*)())&::feathers::controls::ListView_obj::get_alpha,
	( Float (::hx::Object::*)(Float))&::feathers::controls::ListView_obj::set_alpha,
	( Float (::hx::Object::*)())&::feathers::controls::ListView_obj::get_width,
	( Float (::hx::Object::*)(Float))&::feathers::controls::ListView_obj::set_width,
	( Float (::hx::Object::*)())&::feathers::controls::ListView_obj::get_height,
	( Float (::hx::Object::*)(Float))&::feathers::controls::ListView_obj::set_height,
	( Float (::hx::Object::*)())&::feathers::controls::ListView_obj::get_scaleX,
	( Float (::hx::Object::*)(Float))&::feathers::controls::ListView_obj::set_scaleX,
	( Float (::hx::Object::*)())&::feathers::controls::ListView_obj::get_scaleY,
	( Float (::hx::Object::*)(Float))&::feathers::controls::ListView_obj::set_scaleY,
	( bool (::hx::Object::*)())&::feathers::controls::ListView_obj::get_visible,
	( bool (::hx::Object::*)(bool))&::feathers::controls::ListView_obj::set_visible,
	( bool (::hx::Object::*)())&::feathers::controls::ListView_obj::get_focusEnabled,
	( bool (::hx::Object::*)(bool))&::feathers::controls::ListView_obj::set_focusEnabled,
	( ::Dynamic (::hx::Object::*)())&::feathers::controls::ListView_obj::get_focusOwner,
	( ::Dynamic (::hx::Object::*)(::Dynamic))&::feathers::controls::ListView_obj::set_focusOwner,
	( void (::hx::Object::*)(bool))&::feathers::controls::ListView_obj::showFocus,
};

static ::feathers::core::IFocusManagerAware_obj _hx_feathers_controls_ListView__hx_feathers_core_IFocusManagerAware= {
	( ::Dynamic (::hx::Object::*)())&::feathers::controls::ListView_obj::get_focusManager,
	( ::Dynamic (::hx::Object::*)(::Dynamic))&::feathers::controls::ListView_obj::set_focusManager,
};

static ::feathers::core::IDisplayObject_obj _hx_feathers_controls_ListView__hx_feathers_core_IDisplayObject= {
	( void (::hx::Object::*)(::String, ::Dynamic,::hx::Null< bool > ,::hx::Null< int > ,::hx::Null< bool > ))&::feathers::controls::ListView_obj::addEventListener,
	( bool (::hx::Object::*)( ::openfl::events::Event))&::feathers::controls::ListView_obj::dispatchEvent,
	( bool (::hx::Object::*)(::String))&::feathers::controls::ListView_obj::hasEventListener,
	( void (::hx::Object::*)(::String, ::Dynamic,::hx::Null< bool > ))&::feathers::controls::ListView_obj::removeEventListener,
	( bool (::hx::Object::*)(::String))&::feathers::controls::ListView_obj::willTrigger,
	( Float (::hx::Object::*)())&::feathers::controls::ListView_obj::get_x,
	( Float (::hx::Object::*)(Float))&::feathers::controls::ListView_obj::set_x,
	( Float (::hx::Object::*)())&::feathers::controls::ListView_obj::get_y,
	( Float (::hx::Object::*)(Float))&::feathers::controls::ListView_obj::set_y,
	( Float (::hx::Object::*)())&::feathers::controls::ListView_obj::get_alpha,
	( Float (::hx::Object::*)(Float))&::feathers::controls::ListView_obj::set_alpha,
	( Float (::hx::Object::*)())&::feathers::controls::ListView_obj::get_width,
	( Float (::hx::Object::*)(Float))&::feathers::controls::ListView_obj::set_width,
	( Float (::hx::Object::*)())&::feathers::controls::ListView_obj::get_height,
	( Float (::hx::Object::*)(Float))&::feathers::controls::ListView_obj::set_height,
	( Float (::hx::Object::*)())&::feathers::controls::ListView_obj::get_scaleX,
	( Float (::hx::Object::*)(Float))&::feathers::controls::ListView_obj::set_scaleX,
	( Float (::hx::Object::*)())&::feathers::controls::ListView_obj::get_scaleY,
	( Float (::hx::Object::*)(Float))&::feathers::controls::ListView_obj::set_scaleY,
	( bool (::hx::Object::*)())&::feathers::controls::ListView_obj::get_visible,
	( bool (::hx::Object::*)(bool))&::feathers::controls::ListView_obj::set_visible,
};

static ::feathers::core::IIndexSelector_obj _hx_feathers_controls_ListView__hx_feathers_core_IIndexSelector= {
	( int (::hx::Object::*)())&::feathers::controls::ListView_obj::get_selectedIndex,
	( int (::hx::Object::*)(int))&::feathers::controls::ListView_obj::set_selectedIndex,
	( int (::hx::Object::*)())&::feathers::controls::ListView_obj::get_maxSelectedIndex,
};

void *ListView_obj::_hx_getInterface(int inHash) {
	switch(inHash) {
		case (int)0x87530281: return &_hx_feathers_controls_ListView__hx_openfl_events_IEventDispatcher;
		case (int)0xf7aca7c3: return &_hx_feathers_controls_ListView__hx_feathers_core_IFocusContainer;
		case (int)0xe7e1ba63: return &_hx_feathers_controls_ListView__hx_feathers_core_IDataSelector;
		case (int)0x701686fd: return &_hx_feathers_controls_ListView__hx_feathers_core_IFocusObject;
		case (int)0x7031642f: return &_hx_feathers_controls_ListView__hx_feathers_core_IFocusManagerAware;
		case (int)0x3a979a67: return &_hx_feathers_controls_ListView__hx_feathers_core_IDisplayObject;
		case (int)0xe0b54c17: return &_hx_feathers_controls_ListView__hx_feathers_core_IIndexSelector;
	}
	return super::_hx_getInterface(inHash);
}

bool ListView_obj::get_tabEnabled(){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_228_get_tabEnabled)
HXDLIN( 228)		bool _hx_tmp;
HXDLIN( 228)		bool _hx_tmp1;
HXDLIN( 228)		bool _hx_tmp2;
HXDLIN( 228)		if (!(this->_selectable)) {
HXDLIN( 228)			Float _hx_tmp3 = this->get_maxScrollY();
HXDLIN( 228)			_hx_tmp2 = (_hx_tmp3 != this->get_minScrollY());
            		}
            		else {
HXDLIN( 228)			_hx_tmp2 = true;
            		}
HXDLIN( 228)		if (!(_hx_tmp2)) {
HXDLIN( 228)			Float _hx_tmp4 = this->get_maxScrollX();
HXDLIN( 228)			_hx_tmp1 = (_hx_tmp4 != this->get_minScrollX());
            		}
            		else {
HXDLIN( 228)			_hx_tmp1 = true;
            		}
HXDLIN( 228)		if (_hx_tmp1) {
HXDLIN( 228)			_hx_tmp = this->_enabled;
            		}
            		else {
HXDLIN( 228)			_hx_tmp = false;
            		}
HXDLIN( 228)		if (_hx_tmp) {
HXLINE( 230)			return this->get_rawTabEnabled();
            		}
            		else {
HXDLIN( 228)			return false;
            		}
HXDLIN( 228)		return false;
            	}


bool ListView_obj::get_childFocusEnabled(){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_241_get_childFocusEnabled)
HXDLIN( 241)		if (this->_enabled) {
HXDLIN( 241)			return this->_childFocusEnabled;
            		}
            		else {
HXDLIN( 241)			return false;
            		}
HXDLIN( 241)		return false;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ListView_obj,get_childFocusEnabled,return )

bool ListView_obj::set_childFocusEnabled(bool value){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_244_set_childFocusEnabled)
HXLINE( 245)		if ((this->_childFocusEnabled == value)) {
HXLINE( 246)			return this->_childFocusEnabled;
            		}
HXLINE( 248)		this->_childFocusEnabled = value;
HXLINE( 249)		return this->_childFocusEnabled;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ListView_obj,set_childFocusEnabled,return )

::Dynamic ListView_obj::get_dataProvider(){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_290_get_dataProvider)
HXDLIN( 290)		return this->_dataProvider;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ListView_obj,get_dataProvider,return )

::Dynamic ListView_obj::set_dataProvider(::Dynamic value){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_293_set_dataProvider)
HXLINE( 294)		if (::hx::IsInstanceEq( this->_dataProvider,value )) {
HXLINE( 295)			return this->_dataProvider;
            		}
HXLINE( 300)		this->_virtualCache->resize(0);
HXLINE( 302)		if (::hx::IsNotNull( this->_dataProvider )) {
HXLINE( 303)			::openfl::events::IEventDispatcher_obj::removeEventListener(this->_dataProvider,HX_("change",70,91,72,b7),this->listView_dataProvider_changeHandler_dyn(),null());
HXLINE( 304)			::openfl::events::IEventDispatcher_obj::removeEventListener(this->_dataProvider,HX_("addItem",d4,07,fd,81),this->listView_dataProvider_addItemHandler_dyn(),null());
HXLINE( 305)			::openfl::events::IEventDispatcher_obj::removeEventListener(this->_dataProvider,HX_("removeItem",77,ff,de,c2),this->listView_dataProvider_removeItemHandler_dyn(),null());
HXLINE( 306)			::openfl::events::IEventDispatcher_obj::removeEventListener(this->_dataProvider,HX_("replaceItem",67,63,5b,5a),this->listView_dataProvider_replaceItemHandler_dyn(),null());
HXLINE( 307)			::openfl::events::IEventDispatcher_obj::removeEventListener(this->_dataProvider,HX_("removeAll",3d,17,e5,ca),this->listView_dataProvider_removeAllHandler_dyn(),null());
HXLINE( 308)			::openfl::events::IEventDispatcher_obj::removeEventListener(this->_dataProvider,HX_("reset",cf,49,c8,e6),this->listView_dataProvider_resetHandler_dyn(),null());
HXLINE( 309)			::openfl::events::IEventDispatcher_obj::removeEventListener(this->_dataProvider,HX_("sortChange",6e,07,58,14),this->listView_dataProvider_sortChangeHandler_dyn(),null());
HXLINE( 310)			::openfl::events::IEventDispatcher_obj::removeEventListener(this->_dataProvider,HX_("filterChange",48,bf,ca,c3),this->listView_dataProvider_filterChangeHandler_dyn(),null());
HXLINE( 311)			::openfl::events::IEventDispatcher_obj::removeEventListener(this->_dataProvider,HX_("updateItem",bc,af,74,fe),this->listView_dataProvider_updateItemHandler_dyn(),null());
HXLINE( 312)			::openfl::events::IEventDispatcher_obj::removeEventListener(this->_dataProvider,HX_("updateAll",98,d6,d6,82),this->listView_dataProvider_updateAllHandler_dyn(),null());
            		}
HXLINE( 314)		this->_dataProvider = value;
HXLINE( 315)		if (::hx::IsNotNull( this->_dataProvider )) {
HXLINE( 316)			::cpp::VirtualArray _hx_tmp = this->_virtualCache;
HXDLIN( 316)			_hx_tmp->resize(::feathers::data::IFlatCollection_obj::get_length(this->_dataProvider));
HXLINE( 317)			::openfl::events::IEventDispatcher_obj::addEventListener(this->_dataProvider,HX_("change",70,91,72,b7),this->listView_dataProvider_changeHandler_dyn(),null(),null(),null());
HXLINE( 318)			::openfl::events::IEventDispatcher_obj::addEventListener(this->_dataProvider,HX_("addItem",d4,07,fd,81),this->listView_dataProvider_addItemHandler_dyn(),null(),null(),null());
HXLINE( 319)			::openfl::events::IEventDispatcher_obj::addEventListener(this->_dataProvider,HX_("removeItem",77,ff,de,c2),this->listView_dataProvider_removeItemHandler_dyn(),null(),null(),null());
HXLINE( 320)			::openfl::events::IEventDispatcher_obj::addEventListener(this->_dataProvider,HX_("replaceItem",67,63,5b,5a),this->listView_dataProvider_replaceItemHandler_dyn(),null(),null(),null());
HXLINE( 321)			::openfl::events::IEventDispatcher_obj::addEventListener(this->_dataProvider,HX_("removeAll",3d,17,e5,ca),this->listView_dataProvider_removeAllHandler_dyn(),null(),null(),null());
HXLINE( 322)			::openfl::events::IEventDispatcher_obj::addEventListener(this->_dataProvider,HX_("reset",cf,49,c8,e6),this->listView_dataProvider_resetHandler_dyn(),null(),null(),null());
HXLINE( 323)			::openfl::events::IEventDispatcher_obj::addEventListener(this->_dataProvider,HX_("sortChange",6e,07,58,14),this->listView_dataProvider_sortChangeHandler_dyn(),null(),null(),null());
HXLINE( 324)			::openfl::events::IEventDispatcher_obj::addEventListener(this->_dataProvider,HX_("filterChange",48,bf,ca,c3),this->listView_dataProvider_filterChangeHandler_dyn(),null(),null(),null());
HXLINE( 325)			::openfl::events::IEventDispatcher_obj::addEventListener(this->_dataProvider,HX_("updateItem",bc,af,74,fe),this->listView_dataProvider_updateItemHandler_dyn(),null(),null(),null());
HXLINE( 326)			::openfl::events::IEventDispatcher_obj::addEventListener(this->_dataProvider,HX_("updateAll",98,d6,d6,82),this->listView_dataProvider_updateAllHandler_dyn(),null(),null(),null());
            		}
HXLINE( 331)		this->set_scrollX(((Float)0.0));
HXLINE( 332)		this->set_scrollY(((Float)0.0));
HXLINE( 335)		this->set_selectedIndex(-1);
HXLINE( 337)		this->setInvalid(::feathers::core::InvalidationFlag_obj::DATA_dyn());
HXLINE( 338)		return this->_dataProvider;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ListView_obj,set_dataProvider,return )

int ListView_obj::get_selectedIndex(){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_350_get_selectedIndex)
HXDLIN( 350)		return this->_selectedIndex;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ListView_obj,get_selectedIndex,return )

int ListView_obj::set_selectedIndex(int value){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_353_set_selectedIndex)
HXLINE( 354)		bool _hx_tmp;
HXDLIN( 354)		if (this->_selectable) {
HXLINE( 354)			_hx_tmp = ::hx::IsNull( this->_dataProvider );
            		}
            		else {
HXLINE( 354)			_hx_tmp = true;
            		}
HXDLIN( 354)		if (_hx_tmp) {
HXLINE( 355)			value = -1;
            		}
HXLINE( 357)		bool _hx_tmp1;
HXDLIN( 357)		if ((this->_selectedIndex == value)) {
HXLINE( 357)			_hx_tmp1 = (this->_selectedIndices->length <= 1);
            		}
            		else {
HXLINE( 357)			_hx_tmp1 = false;
            		}
HXDLIN( 357)		if (_hx_tmp1) {
HXLINE( 358)			return this->_selectedIndex;
            		}
HXLINE( 360)		if ((value == -1)) {
HXLINE( 361)			this->_selectionAnchorIndex = -1;
HXLINE( 362)			this->_selectedIndex = -1;
HXLINE( 363)			this->_selectedItem = null();
HXLINE( 368)			this->_selectedIndices->resize(0);
HXLINE( 369)			this->_selectedItems->resize(0);
HXLINE( 371)			this->setInvalid(::feathers::core::InvalidationFlag_obj::SELECTION_dyn());
HXLINE( 372)			::feathers::events::FeathersEvent_obj::dispatch(::hx::ObjectPtr<OBJ_>(this),HX_("change",70,91,72,b7),null(),null());
HXLINE( 373)			return this->_selectedIndex;
            		}
HXLINE( 375)		this->_selectedIndex = value;
HXLINE( 376)		this->_selectedItem = ::feathers::data::IFlatCollection_obj::get(this->_dataProvider,this->_selectedIndex);
HXLINE( 377)		this->_selectedIndices->resize(1);
HXLINE( 378)		this->_selectedIndices[0] = this->_selectedIndex;
HXLINE( 379)		this->_selectedItems->resize(1);
HXLINE( 380)		this->_selectedItems->set(0,this->_selectedItem);
HXLINE( 381)		this->_selectionAnchorIndex = this->_selectedIndex;
HXLINE( 382)		this->setInvalid(::feathers::core::InvalidationFlag_obj::SELECTION_dyn());
HXLINE( 383)		::feathers::events::FeathersEvent_obj::dispatch(::hx::ObjectPtr<OBJ_>(this),HX_("change",70,91,72,b7),null(),null());
HXLINE( 384)		return this->_selectedIndex;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ListView_obj,set_selectedIndex,return )

int ListView_obj::get_maxSelectedIndex(){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_392_get_maxSelectedIndex)
HXLINE( 393)		if (::hx::IsNull( this->_dataProvider )) {
HXLINE( 394)			return -1;
            		}
HXLINE( 396)		return (::feathers::data::IFlatCollection_obj::get_length(this->_dataProvider) - 1);
            	}


HX_DEFINE_DYNAMIC_FUNC0(ListView_obj,get_maxSelectedIndex,return )

 ::Dynamic ListView_obj::get_selectedItem(){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_408_get_selectedItem)
HXDLIN( 408)		return this->_selectedItem;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ListView_obj,get_selectedItem,return )

 ::Dynamic ListView_obj::set_selectedItem( ::Dynamic value){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_411_set_selectedItem)
HXLINE( 412)		bool _hx_tmp;
HXDLIN( 412)		bool _hx_tmp1;
HXDLIN( 412)		if (::hx::IsNotNull( value )) {
HXLINE( 412)			_hx_tmp1 = !(this->_selectable);
            		}
            		else {
HXLINE( 412)			_hx_tmp1 = true;
            		}
HXDLIN( 412)		if (!(_hx_tmp1)) {
HXLINE( 412)			_hx_tmp = ::hx::IsNull( this->_dataProvider );
            		}
            		else {
HXLINE( 412)			_hx_tmp = true;
            		}
HXDLIN( 412)		if (_hx_tmp) {
HXLINE( 414)			this->set_selectedIndex(-1);
HXLINE( 415)			return this->_selectedItem;
            		}
HXLINE( 417)		int index = ::feathers::data::IFlatCollection_obj::indexOf(this->_dataProvider,value);
HXLINE( 418)		if ((index == -1)) {
HXLINE( 420)			this->set_selectedIndex(-1);
HXLINE( 421)			return this->_selectedItem;
            		}
HXLINE( 423)		bool _hx_tmp2;
HXDLIN( 423)		bool _hx_tmp3;
HXDLIN( 423)		if (::hx::IsEq( this->_selectedItem,value )) {
HXLINE( 423)			_hx_tmp3 = (this->_selectedIndex == index);
            		}
            		else {
HXLINE( 423)			_hx_tmp3 = false;
            		}
HXDLIN( 423)		if (_hx_tmp3) {
HXLINE( 423)			_hx_tmp2 = (this->_selectedIndices->length == 1);
            		}
            		else {
HXLINE( 423)			_hx_tmp2 = false;
            		}
HXDLIN( 423)		if (_hx_tmp2) {
HXLINE( 424)			return this->_selectedItem;
            		}
HXLINE( 426)		this->_selectedIndex = index;
HXLINE( 427)		this->_selectedItem = value;
HXLINE( 428)		this->_selectedIndices->resize(1);
HXLINE( 429)		this->_selectedIndices[0] = this->_selectedIndex;
HXLINE( 430)		this->_selectedItems->resize(1);
HXLINE( 431)		this->_selectedItems->set(0,this->_selectedItem);
HXLINE( 432)		this->_selectionAnchorIndex = this->_selectedIndex;
HXLINE( 433)		this->setInvalid(::feathers::core::InvalidationFlag_obj::SELECTION_dyn());
HXLINE( 434)		::feathers::events::FeathersEvent_obj::dispatch(::hx::ObjectPtr<OBJ_>(this),HX_("change",70,91,72,b7),null(),null());
HXLINE( 435)		return this->_selectedItem;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ListView_obj,set_selectedItem,return )

bool ListView_obj::get_allowMultipleSelection(){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_459_get_allowMultipleSelection)
HXDLIN( 459)		return this->_allowMultipleSelection;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ListView_obj,get_allowMultipleSelection,return )

bool ListView_obj::set_allowMultipleSelection(bool value){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_462_set_allowMultipleSelection)
HXLINE( 463)		if ((this->_allowMultipleSelection == value)) {
HXLINE( 464)			return this->_allowMultipleSelection;
            		}
HXLINE( 466)		this->_allowMultipleSelection = value;
HXLINE( 467)		this->setInvalid(::feathers::core::InvalidationFlag_obj::SELECTION_dyn());
HXLINE( 468)		return this->_allowMultipleSelection;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ListView_obj,set_allowMultipleSelection,return )

::Array< int > ListView_obj::get_selectedIndices(){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_494_get_selectedIndices)
HXDLIN( 494)		return this->_selectedIndices;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ListView_obj,get_selectedIndices,return )

::Array< int > ListView_obj::set_selectedIndices(::Array< int > value){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_497_set_selectedIndices)
HXLINE( 498)		bool _hx_tmp;
HXDLIN( 498)		bool _hx_tmp1;
HXDLIN( 498)		bool _hx_tmp2;
HXDLIN( 498)		if (::hx::IsNotNull( value )) {
HXLINE( 498)			_hx_tmp2 = (value->length == 0);
            		}
            		else {
HXLINE( 498)			_hx_tmp2 = true;
            		}
HXDLIN( 498)		if (!(_hx_tmp2)) {
HXLINE( 498)			_hx_tmp1 = !(this->_selectable);
            		}
            		else {
HXLINE( 498)			_hx_tmp1 = true;
            		}
HXDLIN( 498)		if (!(_hx_tmp1)) {
HXLINE( 498)			_hx_tmp = ::hx::IsNull( this->_dataProvider );
            		}
            		else {
HXLINE( 498)			_hx_tmp = true;
            		}
HXDLIN( 498)		if (_hx_tmp) {
HXLINE( 500)			this->set_selectedIndex(-1);
HXLINE( 501)			return this->_selectedIndices;
            		}
HXLINE( 503)		if (::hx::IsPointerEq( this->_selectedIndices,value )) {
HXLINE( 504)			return this->_selectedIndices;
            		}
HXLINE( 506)		bool _hx_tmp3;
HXDLIN( 506)		if (!(this->_allowMultipleSelection)) {
HXLINE( 506)			_hx_tmp3 = (value->length > 1);
            		}
            		else {
HXLINE( 506)			_hx_tmp3 = false;
            		}
HXDLIN( 506)		if (_hx_tmp3) {
HXLINE( 507)			value->resize(1);
            		}
HXLINE( 509)		this->_selectedIndices = value;
HXLINE( 510)		this->_selectedIndex = this->_selectedIndices->__get(0);
HXLINE( 511)		this->_selectedItems->resize(this->_selectedIndices->length);
HXLINE( 512)		{
HXLINE( 512)			int _g = 0;
HXDLIN( 512)			int _g1 = this->_selectedIndices->length;
HXDLIN( 512)			while((_g < _g1)){
HXLINE( 512)				_g = (_g + 1);
HXDLIN( 512)				int i = (_g - 1);
HXLINE( 513)				int index = this->_selectedIndices->__get(i);
HXLINE( 514)				this->_selectedItems->set(i,::feathers::data::IFlatCollection_obj::get(this->_dataProvider,index));
            			}
            		}
HXLINE( 516)		this->_selectedItem = this->_selectedItems->__get(0);
HXLINE( 517)		this->_selectionAnchorIndex = this->_selectedIndex;
HXLINE( 518)		this->setInvalid(::feathers::core::InvalidationFlag_obj::SELECTION_dyn());
HXLINE( 519)		::feathers::events::FeathersEvent_obj::dispatch(::hx::ObjectPtr<OBJ_>(this),HX_("change",70,91,72,b7),null(),null());
HXLINE( 520)		return this->_selectedIndices;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ListView_obj,set_selectedIndices,return )

::cpp::VirtualArray ListView_obj::get_selectedItems(){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_543_get_selectedItems)
HXDLIN( 543)		return this->_selectedItems;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ListView_obj,get_selectedItems,return )

::cpp::VirtualArray ListView_obj::set_selectedItems(::cpp::VirtualArray value){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_546_set_selectedItems)
HXLINE( 547)		bool _hx_tmp;
HXDLIN( 547)		bool _hx_tmp1;
HXDLIN( 547)		bool _hx_tmp2;
HXDLIN( 547)		if (::hx::IsNotNull( value )) {
HXLINE( 547)			_hx_tmp2 = (value->get_length() == 0);
            		}
            		else {
HXLINE( 547)			_hx_tmp2 = true;
            		}
HXDLIN( 547)		if (!(_hx_tmp2)) {
HXLINE( 547)			_hx_tmp1 = !(this->_selectable);
            		}
            		else {
HXLINE( 547)			_hx_tmp1 = true;
            		}
HXDLIN( 547)		if (!(_hx_tmp1)) {
HXLINE( 547)			_hx_tmp = ::hx::IsNull( this->_dataProvider );
            		}
            		else {
HXLINE( 547)			_hx_tmp = true;
            		}
HXDLIN( 547)		if (_hx_tmp) {
HXLINE( 549)			this->set_selectedIndex(-1);
HXLINE( 550)			return this->_selectedItems;
            		}
HXLINE( 552)		if (::hx::IsPointerEq( this->_selectedItems,value )) {
HXLINE( 553)			return this->_selectedItems;
            		}
HXLINE( 555)		bool _hx_tmp3;
HXDLIN( 555)		if (!(this->_allowMultipleSelection)) {
HXLINE( 555)			_hx_tmp3 = (value->get_length() > 1);
            		}
            		else {
HXLINE( 555)			_hx_tmp3 = false;
            		}
HXDLIN( 555)		if (_hx_tmp3) {
HXLINE( 556)			value->resize(1);
            		}
HXLINE( 558)		::Array< int > indices = ::Array_obj< int >::__new(0);
HXLINE( 559)		int i = 0;
HXLINE( 560)		while((i < value->get_length())){
HXLINE( 561)			 ::Dynamic item = value->__get(i);
HXLINE( 562)			int index = ::feathers::data::IFlatCollection_obj::indexOf(this->_dataProvider,item);
HXLINE( 563)			if ((index == -1)) {
HXLINE( 564)				value->splice(i,1);
HXLINE( 565)				continue;
            			}
HXLINE( 567)			indices->push(index);
HXLINE( 568)			i = (i + 1);
            		}
HXLINE( 570)		this->_selectedIndices = indices;
HXLINE( 571)		this->_selectedItems = value;
HXLINE( 572)		if ((value->get_length() == 0)) {
HXLINE( 573)			this->_selectedIndex = -1;
HXLINE( 574)			this->_selectedItem = null();
            		}
            		else {
HXLINE( 576)			this->_selectedIndex = this->_selectedIndices->__get(0);
HXLINE( 577)			this->_selectedItem = this->_selectedItems->__get(0);
            		}
HXLINE( 579)		this->_selectionAnchorIndex = this->_selectedIndex;
HXLINE( 580)		this->setInvalid(::feathers::core::InvalidationFlag_obj::SELECTION_dyn());
HXLINE( 581)		::feathers::events::FeathersEvent_obj::dispatch(::hx::ObjectPtr<OBJ_>(this),HX_("change",70,91,72,b7),null(),null());
HXLINE( 582)		return this->_selectedIndices;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ListView_obj,set_selectedItems,return )

 ::feathers::utils::DisplayObjectRecycler ListView_obj::get_itemRendererRecycler(){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_640_get_itemRendererRecycler)
HXDLIN( 640)		return this->_defaultStorage->itemRendererRecycler;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ListView_obj,get_itemRendererRecycler,return )

 ::feathers::utils::DisplayObjectRecycler ListView_obj::set_itemRendererRecycler( ::feathers::utils::DisplayObjectRecycler value){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_644_set_itemRendererRecycler)
HXLINE( 645)		if (::hx::IsInstanceEq( this->_defaultStorage->itemRendererRecycler,value )) {
HXLINE( 646)			return this->_defaultStorage->itemRendererRecycler;
            		}
HXLINE( 648)		this->_defaultStorage->oldItemRendererRecycler = this->_defaultStorage->itemRendererRecycler;
HXLINE( 649)		this->_defaultStorage->itemRendererRecycler = value;
HXLINE( 650)		this->_defaultStorage->measurements = null();
HXLINE( 651)		this->setInvalid(::feathers::controls::ListView_obj::INVALIDATION_FLAG_ITEM_RENDERER_FACTORY);
HXLINE( 652)		return this->_defaultStorage->itemRendererRecycler;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ListView_obj,set_itemRendererRecycler,return )

bool ListView_obj::get_forceItemStateUpdate(){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_678_get_forceItemStateUpdate)
HXDLIN( 678)		return this->_forceItemStateUpdate;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ListView_obj,get_forceItemStateUpdate,return )

bool ListView_obj::set_forceItemStateUpdate(bool value){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_681_set_forceItemStateUpdate)
HXLINE( 682)		if ((this->_forceItemStateUpdate == value)) {
HXLINE( 683)			return this->_forceItemStateUpdate;
            		}
HXLINE( 685)		this->_forceItemStateUpdate = value;
HXLINE( 686)		this->setInvalid(::feathers::core::InvalidationFlag_obj::DATA_dyn());
HXLINE( 687)		return this->_forceItemStateUpdate;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ListView_obj,set_forceItemStateUpdate,return )

 ::Dynamic ListView_obj::get_itemRendererRecyclerIDFunction(){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_727_get_itemRendererRecyclerIDFunction)
HXDLIN( 727)		return this->_itemRendererRecyclerIDFunction;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ListView_obj,get_itemRendererRecyclerIDFunction,return )

 ::Dynamic ListView_obj::set_itemRendererRecyclerIDFunction( ::Dynamic value){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_730_set_itemRendererRecyclerIDFunction)
HXLINE( 731)		if (::hx::IsEq( this->_itemRendererRecyclerIDFunction,value )) {
HXLINE( 732)			return this->_itemRendererRecyclerIDFunction;
            		}
HXLINE( 734)		this->_itemRendererRecyclerIDFunction = value;
HXLINE( 735)		this->setInvalid(::feathers::controls::ListView_obj::INVALIDATION_FLAG_ITEM_RENDERER_FACTORY);
HXLINE( 736)		return this->_itemRendererRecyclerIDFunction;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ListView_obj,set_itemRendererRecyclerIDFunction,return )

bool ListView_obj::get_selectable(){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_772_get_selectable)
HXDLIN( 772)		return this->_selectable;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ListView_obj,get_selectable,return )

bool ListView_obj::set_selectable(bool value){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_775_set_selectable)
HXLINE( 776)		if ((this->_selectable == value)) {
HXLINE( 777)			return this->_selectable;
            		}
HXLINE( 779)		this->_selectable = value;
HXLINE( 780)		if (!(this->_selectable)) {
HXLINE( 782)			this->set_selectedIndex(-1);
            		}
HXLINE( 784)		return this->_selectable;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ListView_obj,set_selectable,return )

bool ListView_obj::get_virtualLayout(){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_804_get_virtualLayout)
HXDLIN( 804)		return this->_virtualLayout;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ListView_obj,get_virtualLayout,return )

bool ListView_obj::set_virtualLayout(bool value){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_807_set_virtualLayout)
HXLINE( 808)		if ((this->_virtualLayout = value)) {
HXLINE( 809)			return this->_virtualLayout;
            		}
HXLINE( 811)		this->_virtualLayout = value;
HXLINE( 812)		this->setInvalid(::feathers::core::InvalidationFlag_obj::LAYOUT_dyn());
HXLINE( 813)		return this->_virtualLayout;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ListView_obj,set_virtualLayout,return )

HX_BEGIN_DEFAULT_FUNC(__default_itemToText,ListView_obj)
::String _hx_run( ::Dynamic data){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_861___default_itemToText)
HXDLIN( 861)		return ::Std_obj::string(data);
            	}
HX_END_LOCAL_FUNC1(return )
HX_END_DEFAULT_FUNC

HX_BEGIN_DEFAULT_FUNC(__default_itemToEnabled,ListView_obj)
bool _hx_run( ::Dynamic data){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_888___default_itemToEnabled)
HXDLIN( 888)		return true;
            	}
HX_END_LOCAL_FUNC1(return )
HX_END_DEFAULT_FUNC

void ListView_obj::scrollToIndex(int index, ::Dynamic animationDuration){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_901_scrollToIndex)
HXLINE( 902)		bool _hx_tmp;
HXDLIN( 902)		if (::hx::IsNotNull( this->_dataProvider )) {
HXLINE( 902)			_hx_tmp = (::feathers::data::IFlatCollection_obj::get_length(this->_dataProvider) == 0);
            		}
            		else {
HXLINE( 902)			_hx_tmp = true;
            		}
HXDLIN( 902)		if (_hx_tmp) {
HXLINE( 903)			return;
            		}
HXLINE( 905)		this->_pendingScrollIndex = index;
HXLINE( 906)		this->_pendingScrollDuration = animationDuration;
HXLINE( 907)		this->setInvalid(::feathers::core::InvalidationFlag_obj::SCROLL_dyn());
            	}


HX_DEFINE_DYNAMIC_FUNC2(ListView_obj,scrollToIndex,(void))

 ::openfl::display::DisplayObject ListView_obj::itemToItemRenderer( ::Dynamic item){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_922_itemToItemRenderer)
HXLINE( 923)		if (::hx::IsNull( item )) {
HXLINE( 924)			return null();
            		}
HXLINE( 926)		return ( ( ::openfl::display::DisplayObject)(this->dataToItemRenderer->get(item)) );
            	}


HX_DEFINE_DYNAMIC_FUNC1(ListView_obj,itemToItemRenderer,return )

 ::Dynamic ListView_obj::itemRendererToItem( ::openfl::display::DisplayObject itemRenderer){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_935_itemRendererToItem)
HXLINE( 936)		if (::hx::IsNull( itemRenderer )) {
HXLINE( 937)			return null();
            		}
HXLINE( 939)		 ::feathers::data::ListViewItemState state = ( ( ::feathers::data::ListViewItemState)(this->itemRendererToItemState->get(itemRenderer)) );
HXLINE( 940)		if (::hx::IsNull( state )) {
HXLINE( 941)			return null();
            		}
HXLINE( 943)		return state->data;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ListView_obj,itemRendererToItem,return )

 ::openfl::display::DisplayObject ListView_obj::indexToItemRenderer(int index){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_958_indexToItemRenderer)
HXLINE( 959)		bool _hx_tmp;
HXDLIN( 959)		bool _hx_tmp1;
HXDLIN( 959)		if (::hx::IsNotNull( this->_dataProvider )) {
HXLINE( 959)			_hx_tmp1 = (index < 0);
            		}
            		else {
HXLINE( 959)			_hx_tmp1 = true;
            		}
HXDLIN( 959)		if (!(_hx_tmp1)) {
HXLINE( 959)			_hx_tmp = (index >= ::feathers::data::IFlatCollection_obj::get_length(this->_dataProvider));
            		}
            		else {
HXLINE( 959)			_hx_tmp = true;
            		}
HXDLIN( 959)		if (_hx_tmp) {
HXLINE( 960)			return null();
            		}
HXLINE( 962)		 ::Dynamic item = ::feathers::data::IFlatCollection_obj::get(this->_dataProvider,index);
HXLINE( 963)		return ( ( ::openfl::display::DisplayObject)(this->dataToItemRenderer->get(item)) );
            	}


HX_DEFINE_DYNAMIC_FUNC1(ListView_obj,indexToItemRenderer,return )

 ::feathers::utils::DisplayObjectRecycler ListView_obj::getItemRendererRecycler(::String id){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_975_getItemRendererRecycler)
HXLINE( 976)		if (::hx::IsNull( this->_recyclerMap )) {
HXLINE( 977)			return null();
            		}
HXLINE( 979)		return ( ( ::feathers::utils::DisplayObjectRecycler)(this->_recyclerMap->get(id)) );
            	}


HX_DEFINE_DYNAMIC_FUNC1(ListView_obj,getItemRendererRecycler,return )

void ListView_obj::setItemRendererRecycler(::String id, ::feathers::utils::DisplayObjectRecycler recycler){
            	HX_GC_STACKFRAME(&_hx_pos_c5852abc10682dee_995_setItemRendererRecycler)
HXLINE( 996)		if (::hx::IsNull( this->_recyclerMap )) {
HXLINE( 997)			this->_recyclerMap =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
            		}
HXLINE( 999)		if (::hx::IsNull( recycler )) {
HXLINE(1000)			this->_recyclerMap->remove(id);
HXLINE(1001)			return;
            		}
HXLINE(1003)		this->_recyclerMap->set(id,recycler);
HXLINE(1004)		this->setInvalid(::feathers::controls::ListView_obj::INVALIDATION_FLAG_ITEM_RENDERER_FACTORY);
            	}


HX_DEFINE_DYNAMIC_FUNC2(ListView_obj,setItemRendererRecycler,(void))

void ListView_obj::initializeListViewTheme(){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_1009_initializeListViewTheme)
HXDLIN(1009)		::feathers::themes::steel::components::SteelListViewStyles_obj::initialize(null());
            	}


HX_DEFINE_DYNAMIC_FUNC0(ListView_obj,initializeListViewTheme,(void))

void ListView_obj::update(){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_1013_update)
HXLINE(1014)		bool layoutInvalid = this->isInvalid(::feathers::core::InvalidationFlag_obj::LAYOUT_dyn());
HXLINE(1015)		bool stylesInvalid = this->isInvalid(::feathers::core::InvalidationFlag_obj::STYLES_dyn());
HXLINE(1017)		::String _hx_tmp = this->_previousCustomItemRendererVariant;
HXDLIN(1017)		if ((_hx_tmp != this->get_customItemRendererVariant())) {
HXLINE(1018)			this->setInvalidationFlag(::feathers::controls::ListView_obj::INVALIDATION_FLAG_ITEM_RENDERER_FACTORY);
            		}
HXLINE(1021)		bool _hx_tmp1;
HXDLIN(1021)		if (!(layoutInvalid)) {
HXLINE(1021)			_hx_tmp1 = stylesInvalid;
            		}
            		else {
HXLINE(1021)			_hx_tmp1 = true;
            		}
HXDLIN(1021)		if (_hx_tmp1) {
HXLINE(1022)			::Dynamic _hx_tmp2 = this->_previousLayout;
HXDLIN(1022)			if (::hx::IsInstanceNotEq( _hx_tmp2,this->get_layout() )) {
HXLINE(1028)				this->_virtualCache->resize(0);
HXLINE(1030)				if (::hx::IsNotNull( this->_dataProvider )) {
HXLINE(1031)					::cpp::VirtualArray _hx_tmp3 = this->_virtualCache;
HXDLIN(1031)					_hx_tmp3->resize(::feathers::data::IFlatCollection_obj::get_length(this->_dataProvider));
            				}
            			}
HXLINE(1034)			 ::feathers::controls::supportClasses::AdvancedLayoutViewPort _hx_tmp4 = this->listViewPort;
HXDLIN(1034)			_hx_tmp4->set_layout(this->get_layout());
HXLINE(1035)			this->_previousLayout = this->get_layout();
            		}
HXLINE(1038)		this->listViewPort->refreshChildren = this->refreshItemRenderers_dyn();
HXLINE(1040)		{
HXLINE(1040)			 ::Dynamic flag = this->_invalidationFlags->keys();
HXDLIN(1040)			while(( (bool)(flag->__Field(HX_("hasNext",6d,a5,46,18),::hx::paccDynamic)()) )){
HXLINE(1040)				 ::feathers::core::InvalidationFlag flag1 = flag->__Field(HX_("next",f3,84,02,49),::hx::paccDynamic)();
HXLINE(1041)				this->listViewPort->setInvalid(flag1);
            			}
            		}
HXLINE(1043)		if (this->_allInvalid) {
HXLINE(1044)			this->listViewPort->setInvalid(null());
            		}
HXLINE(1047)		this->super::update();
HXLINE(1049)		this->_previousCustomItemRendererVariant = this->get_customItemRendererVariant();
HXLINE(1051)		this->handlePendingScroll();
            	}


void ListView_obj::createScroller(){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_1054_createScroller)
HXLINE(1055)		this->super::createScroller();
HXLINE(1056)		this->listViewPort->set_scroller(this->scroller);
            	}


void ListView_obj::refreshScrollerValues(){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_1059_refreshScrollerValues)
HXLINE(1060)		this->super::refreshScrollerValues();
HXLINE(1061)		if (::Std_obj::isOfType(this->get_layout(),::hx::ClassOf< ::feathers::layout::IScrollLayout >())) {
HXLINE(1062)			::Dynamic scrollLayout = this->get_layout();
HXLINE(1063)			this->scroller->forceElasticTop = ::feathers::layout::IScrollLayout_obj::get_elasticTop(scrollLayout);
HXLINE(1064)			this->scroller->forceElasticRight = ::feathers::layout::IScrollLayout_obj::get_elasticRight(scrollLayout);
HXLINE(1065)			this->scroller->forceElasticBottom = ::feathers::layout::IScrollLayout_obj::get_elasticBottom(scrollLayout);
HXLINE(1066)			this->scroller->forceElasticLeft = ::feathers::layout::IScrollLayout_obj::get_elasticLeft(scrollLayout);
            		}
            		else {
HXLINE(1068)			this->scroller->forceElasticTop = false;
HXLINE(1069)			this->scroller->forceElasticRight = false;
HXLINE(1070)			this->scroller->forceElasticBottom = false;
HXLINE(1071)			this->scroller->forceElasticLeft = false;
            		}
HXLINE(1073)		this->scroller->snapPositionsX = this->listViewPort->get_snapPositionsX();
HXLINE(1074)		this->scroller->snapPositionsY = this->listViewPort->get_snapPositionsY();
            	}


bool ListView_obj::needsScrollMeasurement(){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_1077_needsScrollMeasurement)
HXLINE(1078)		int oldStart = this->_visibleIndices->start;
HXLINE(1079)		int oldEnd = this->_visibleIndices->end;
HXLINE(1080)		bool _hx_tmp;
HXDLIN(1080)		if (this->_virtualLayout) {
HXLINE(1080)			_hx_tmp = ::Std_obj::isOfType(this->get_layout(),::hx::ClassOf< ::feathers::layout::IVirtualLayout >());
            		}
            		else {
HXLINE(1080)			_hx_tmp = false;
            		}
HXDLIN(1080)		if (_hx_tmp) {
HXLINE(1081)			::Dynamic virtualLayout = this->get_layout();
HXLINE(1082)			bool oldIgnoreLayoutChanges = this->_ignoreLayoutChanges;
HXLINE(1083)			this->_ignoreLayoutChanges = true;
HXLINE(1084)			::feathers::layout::IScrollLayout_obj::set_scrollX(virtualLayout,this->scroller->get_scrollX());
HXLINE(1085)			::feathers::layout::IScrollLayout_obj::set_scrollY(virtualLayout,this->scroller->get_scrollY());
HXLINE(1086)			this->_ignoreLayoutChanges = oldIgnoreLayoutChanges;
HXLINE(1087)			int _hx_tmp1 = this->_layoutItems->length;
HXDLIN(1087)			 ::Dynamic _hx_tmp2 = this->listViewPort->get_visibleWidth();
HXDLIN(1087)			 ::Dynamic _hx_tmp3 = this->listViewPort->get_visibleHeight();
HXDLIN(1087)			::feathers::layout::IVirtualLayout_obj::getVisibleIndices(virtualLayout,_hx_tmp1,_hx_tmp2,_hx_tmp3,this->_tempVisibleIndices);
            		}
            		else {
HXLINE(1090)			this->_tempVisibleIndices->start = 0;
HXLINE(1091)			this->_tempVisibleIndices->end = (this->_layoutItems->length - 1);
            		}
HXLINE(1093)		if ((oldStart == this->_tempVisibleIndices->start)) {
HXLINE(1093)			return (oldEnd != this->_tempVisibleIndices->end);
            		}
            		else {
HXLINE(1093)			return true;
            		}
HXDLIN(1093)		return false;
            	}


void ListView_obj::refreshItemRenderers(::Array< ::Dynamic> items){
            	HX_GC_STACKFRAME(&_hx_pos_c5852abc10682dee_1096_refreshItemRenderers)
HXLINE(1097)		this->_layoutItems = items;
HXLINE(1099)		if (::hx::IsNull( this->_defaultStorage->itemRendererRecycler->update )) {
HXLINE(1100)			this->_defaultStorage->itemRendererRecycler->update = ::feathers::controls::ListView_obj::defaultUpdateItemRenderer_dyn();
HXLINE(1101)			if (::hx::IsNull( this->_defaultStorage->itemRendererRecycler->reset )) {
HXLINE(1102)				this->_defaultStorage->itemRendererRecycler->reset = ::feathers::controls::ListView_obj::defaultResetItemRenderer_dyn();
            			}
            		}
HXLINE(1105)		if (::hx::IsNotNull( this->_recyclerMap )) {
HXLINE(1106)			 ::Dynamic recycler = this->_recyclerMap->iterator();
HXDLIN(1106)			while(( (bool)(recycler->__Field(HX_("hasNext",6d,a5,46,18),::hx::paccDynamic)()) )){
HXLINE(1106)				 ::feathers::utils::DisplayObjectRecycler recycler1 = ( ( ::feathers::utils::DisplayObjectRecycler)(recycler->__Field(HX_("next",f3,84,02,49),::hx::paccDynamic)()) );
HXLINE(1107)				if (::hx::IsNull( recycler1->update )) {
HXLINE(1108)					if (::hx::IsNull( recycler1->update )) {
HXLINE(1109)						recycler1->update = ::feathers::controls::ListView_obj::defaultUpdateItemRenderer_dyn();
HXLINE(1111)						if (::hx::IsNull( recycler1->reset )) {
HXLINE(1112)							recycler1->reset = ::feathers::controls::ListView_obj::defaultResetItemRenderer_dyn();
            						}
            					}
            				}
            			}
            		}
HXLINE(1119)		bool itemRendererInvalid = this->listViewPort->isInvalid(::feathers::controls::ListView_obj::INVALIDATION_FLAG_ITEM_RENDERER_FACTORY);
HXLINE(1120)		this->refreshInactiveItemRenderers(this->_defaultStorage,itemRendererInvalid);
HXLINE(1121)		if (::hx::IsNotNull( this->_additionalStorage )) {
HXLINE(1122)			int _g = 0;
HXDLIN(1122)			int _g1 = this->_additionalStorage->length;
HXDLIN(1122)			while((_g < _g1)){
HXLINE(1122)				_g = (_g + 1);
HXDLIN(1122)				int i = (_g - 1);
HXLINE(1123)				 ::feathers::controls::_ListView::ItemRendererStorage storage = this->_additionalStorage->__get(i).StaticCast<  ::feathers::controls::_ListView::ItemRendererStorage >();
HXLINE(1124)				this->refreshInactiveItemRenderers(storage,itemRendererInvalid);
            			}
            		}
HXLINE(1127)		this->findUnrenderedData();
HXLINE(1128)		this->recoverInactiveItemRenderers(this->_defaultStorage);
HXLINE(1129)		if (::hx::IsNotNull( this->_additionalStorage )) {
HXLINE(1130)			int _g2 = 0;
HXDLIN(1130)			int _g3 = this->_additionalStorage->length;
HXDLIN(1130)			while((_g2 < _g3)){
HXLINE(1130)				_g2 = (_g2 + 1);
HXDLIN(1130)				int i1 = (_g2 - 1);
HXLINE(1131)				 ::feathers::controls::_ListView::ItemRendererStorage storage1 = this->_additionalStorage->__get(i1).StaticCast<  ::feathers::controls::_ListView::ItemRendererStorage >();
HXLINE(1132)				this->recoverInactiveItemRenderers(storage1);
            			}
            		}
HXLINE(1135)		this->renderUnrenderedData();
HXLINE(1136)		this->freeInactiveItemRenderers(this->_defaultStorage);
HXLINE(1137)		if ((this->_defaultStorage->inactiveItemRenderers->length > 0)) {
HXLINE(1138)			HX_STACK_DO_THROW( ::openfl::errors::IllegalOperationError_obj::__alloc( HX_CTX ,((HX_("",00,00,00,00) + ::Type_obj::getClassName(::Type_obj::getClass(::hx::ObjectPtr<OBJ_>(this)))) + HX_(": inactive item renderers should be empty after updating.",53,d2,af,ec))));
            		}
HXLINE(1140)		if (::hx::IsNotNull( this->_additionalStorage )) {
HXLINE(1141)			int _g4 = 0;
HXDLIN(1141)			int _g5 = this->_additionalStorage->length;
HXDLIN(1141)			while((_g4 < _g5)){
HXLINE(1141)				_g4 = (_g4 + 1);
HXDLIN(1141)				int i2 = (_g4 - 1);
HXLINE(1142)				 ::feathers::controls::_ListView::ItemRendererStorage storage2 = this->_additionalStorage->__get(i2).StaticCast<  ::feathers::controls::_ListView::ItemRendererStorage >();
HXLINE(1143)				this->freeInactiveItemRenderers(storage2);
HXLINE(1144)				if ((storage2->inactiveItemRenderers->length > 0)) {
HXLINE(1145)					::String _hx_tmp = ((HX_("",00,00,00,00) + ::Type_obj::getClassName(::Type_obj::getClass(::hx::ObjectPtr<OBJ_>(this)))) + HX_(": inactive item renderers ",2e,9c,7b,7e));
HXDLIN(1145)					HX_STACK_DO_THROW( ::openfl::errors::IllegalOperationError_obj::__alloc( HX_CTX ,((_hx_tmp + storage2->id) + HX_(" should be empty after updating.",a1,aa,db,3b))));
            				}
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(ListView_obj,refreshItemRenderers,(void))

void ListView_obj::refreshInactiveItemRenderers( ::feathers::controls::_ListView::ItemRendererStorage storage,bool factoryInvalid){
            	HX_GC_STACKFRAME(&_hx_pos_c5852abc10682dee_1151_refreshInactiveItemRenderers)
HXLINE(1152)		::Array< ::Dynamic> temp = storage->inactiveItemRenderers;
HXLINE(1153)		storage->inactiveItemRenderers = storage->activeItemRenderers;
HXLINE(1154)		storage->activeItemRenderers = temp;
HXLINE(1155)		if ((storage->activeItemRenderers->length > 0)) {
HXLINE(1156)			HX_STACK_DO_THROW( ::openfl::errors::IllegalOperationError_obj::__alloc( HX_CTX ,((HX_("",00,00,00,00) + ::Type_obj::getClassName(::Type_obj::getClass(::hx::ObjectPtr<OBJ_>(this)))) + HX_(": active item renderers should be empty before updating.",93,7b,6d,45))));
            		}
HXLINE(1158)		if (factoryInvalid) {
HXLINE(1159)			this->recoverInactiveItemRenderers(storage);
HXLINE(1160)			this->freeInactiveItemRenderers(storage);
HXLINE(1161)			storage->oldItemRendererRecycler = null();
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(ListView_obj,refreshInactiveItemRenderers,(void))

void ListView_obj::recoverInactiveItemRenderers( ::feathers::controls::_ListView::ItemRendererStorage storage){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_1166_recoverInactiveItemRenderers)
HXDLIN(1166)		int _g = 0;
HXDLIN(1166)		::Array< ::Dynamic> _g1 = storage->inactiveItemRenderers;
HXDLIN(1166)		while((_g < _g1->length)){
HXDLIN(1166)			 ::openfl::display::DisplayObject itemRenderer = _g1->__get(_g).StaticCast<  ::openfl::display::DisplayObject >();
HXDLIN(1166)			_g = (_g + 1);
HXLINE(1167)			if (::hx::IsNull( itemRenderer )) {
HXLINE(1168)				continue;
            			}
HXLINE(1170)			 ::feathers::data::ListViewItemState state = ( ( ::feathers::data::ListViewItemState)(this->itemRendererToItemState->get(itemRenderer)) );
HXLINE(1171)			if (::hx::IsNull( state )) {
HXLINE(1172)				continue;
            			}
HXLINE(1174)			 ::Dynamic item = state->data;
HXLINE(1175)			this->itemRendererToItemState->remove(itemRenderer);
HXLINE(1176)			this->dataToItemRenderer->remove(item);
HXLINE(1177)			itemRenderer->removeEventListener(HX_("trigger",38,55,df,25),this->listView_itemRenderer_triggerHandler_dyn(),null());
HXLINE(1178)			itemRenderer->removeEventListener(HX_("click",48,7c,5e,48),this->listView_itemRenderer_clickHandler_dyn(),null());
HXLINE(1179)			itemRenderer->removeEventListener(HX_("touchTap",e4,1b,15,00),this->listView_itemRenderer_touchTapHandler_dyn(),null());
HXLINE(1180)			itemRenderer->removeEventListener(HX_("change",70,91,72,b7),this->listView_itemRenderer_changeHandler_dyn(),null());
HXLINE(1181)			itemRenderer->removeEventListener(HX_("resize",f4,59,7b,08),this->listView_itemRenderer_resizeHandler_dyn(),null());
HXLINE(1182)			this->resetItemRenderer(itemRenderer,state,storage);
HXLINE(1183)			if (::hx::IsNotNull( storage->measurements )) {
HXLINE(1184)				storage->measurements->restore(itemRenderer);
            			}
HXLINE(1186)			this->itemStatePool->release(state);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(ListView_obj,recoverInactiveItemRenderers,(void))

void ListView_obj::freeInactiveItemRenderers( ::feathers::controls::_ListView::ItemRendererStorage storage){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_1190_freeInactiveItemRenderers)
HXLINE(1191)		 ::feathers::utils::DisplayObjectRecycler recycler;
HXDLIN(1191)		if (::hx::IsNotNull( storage->oldItemRendererRecycler )) {
HXLINE(1191)			recycler = storage->oldItemRendererRecycler;
            		}
            		else {
HXLINE(1191)			recycler = storage->itemRendererRecycler;
            		}
HXLINE(1192)		{
HXLINE(1192)			int _g = 0;
HXDLIN(1192)			::Array< ::Dynamic> _g1 = storage->inactiveItemRenderers;
HXDLIN(1192)			while((_g < _g1->length)){
HXLINE(1192)				 ::openfl::display::DisplayObject itemRenderer = _g1->__get(_g).StaticCast<  ::openfl::display::DisplayObject >();
HXDLIN(1192)				_g = (_g + 1);
HXLINE(1193)				if (::hx::IsNull( itemRenderer )) {
HXLINE(1194)					continue;
            				}
HXLINE(1196)				this->destroyItemRenderer(itemRenderer,recycler);
            			}
            		}
HXLINE(1201)		storage->inactiveItemRenderers->resize(0);
            	}


HX_DEFINE_DYNAMIC_FUNC1(ListView_obj,freeInactiveItemRenderers,(void))

void ListView_obj::findUnrenderedData(){
            	HX_GC_STACKFRAME(&_hx_pos_c5852abc10682dee_1205_findUnrenderedData)
HXLINE(1210)		this->_layoutItems->resize(0);
HXLINE(1212)		this->_visibleIndices->start = 0;
HXLINE(1213)		this->_visibleIndices->end = 0;
HXLINE(1214)		bool _hx_tmp;
HXDLIN(1214)		if (::hx::IsNotNull( this->_dataProvider )) {
HXLINE(1214)			_hx_tmp = (::feathers::data::IFlatCollection_obj::get_length(this->_dataProvider) == 0);
            		}
            		else {
HXLINE(1214)			_hx_tmp = true;
            		}
HXDLIN(1214)		if (_hx_tmp) {
HXLINE(1215)			return;
            		}
HXLINE(1217)		::Array< ::Dynamic> _hx_tmp1 = this->_layoutItems;
HXDLIN(1217)		_hx_tmp1->resize(::feathers::data::IFlatCollection_obj::get_length(this->_dataProvider));
HXLINE(1219)		bool _hx_tmp2;
HXDLIN(1219)		if (this->_virtualLayout) {
HXLINE(1219)			_hx_tmp2 = ::Std_obj::isOfType(this->get_layout(),::hx::ClassOf< ::feathers::layout::IVirtualLayout >());
            		}
            		else {
HXLINE(1219)			_hx_tmp2 = false;
            		}
HXDLIN(1219)		if (_hx_tmp2) {
HXLINE(1220)			::Dynamic virtualLayout = this->get_layout();
HXLINE(1221)			bool oldIgnoreLayoutChanges = this->_ignoreLayoutChanges;
HXLINE(1222)			this->_ignoreLayoutChanges = true;
HXLINE(1223)			::feathers::layout::IScrollLayout_obj::set_scrollX(virtualLayout,this->scroller->get_scrollX());
HXLINE(1224)			::feathers::layout::IScrollLayout_obj::set_scrollY(virtualLayout,this->scroller->get_scrollY());
HXLINE(1225)			::feathers::layout::IVirtualLayout_obj::set_virtualCache(virtualLayout,this->_virtualCache);
HXLINE(1226)			this->_ignoreLayoutChanges = oldIgnoreLayoutChanges;
HXLINE(1227)			int _hx_tmp3 = ::feathers::data::IFlatCollection_obj::get_length(this->_dataProvider);
HXDLIN(1227)			 ::Dynamic _hx_tmp4 = this->listViewPort->get_visibleWidth();
HXDLIN(1227)			 ::Dynamic _hx_tmp5 = this->listViewPort->get_visibleHeight();
HXDLIN(1227)			::feathers::layout::IVirtualLayout_obj::getVisibleIndices(virtualLayout,_hx_tmp3,_hx_tmp4,_hx_tmp5,this->_visibleIndices);
            		}
            		else {
HXLINE(1229)			this->_visibleIndices->start = 0;
HXLINE(1230)			int _hx_tmp6 = ::feathers::data::IFlatCollection_obj::get_length(this->_dataProvider);
HXDLIN(1230)			this->_visibleIndices->end = (_hx_tmp6 - 1);
            		}
HXLINE(1232)		{
HXLINE(1232)			int _g = this->_visibleIndices->start;
HXDLIN(1232)			int _g1 = (this->_visibleIndices->end + 1);
HXDLIN(1232)			while((_g < _g1)){
HXLINE(1232)				_g = (_g + 1);
HXDLIN(1232)				int i = (_g - 1);
HXLINE(1233)				 ::Dynamic item = ::feathers::data::IFlatCollection_obj::get(this->_dataProvider,i);
HXLINE(1234)				 ::openfl::display::DisplayObject itemRenderer = ( ( ::openfl::display::DisplayObject)(this->dataToItemRenderer->get(item)) );
HXLINE(1235)				if (::hx::IsNotNull( itemRenderer )) {
HXLINE(1236)					 ::feathers::data::ListViewItemState state = ( ( ::feathers::data::ListViewItemState)(this->itemRendererToItemState->get(itemRenderer)) );
HXLINE(1237)					bool changed = this->populateCurrentItemState(item,i,state,this->_forceItemStateUpdate);
HXLINE(1238)					::String oldRecyclerID = state->recyclerID;
HXLINE(1239)					 ::feathers::controls::_ListView::ItemRendererStorage storage = this->itemStateToStorage(state);
HXLINE(1240)					if ((storage->id != oldRecyclerID)) {
HXLINE(1241)						this->_unrenderedData->push(item);
HXLINE(1242)						continue;
            					}
HXLINE(1244)					if (changed) {
HXLINE(1245)						this->updateItemRenderer(itemRenderer,state,storage);
            					}
HXLINE(1249)					itemRenderer->set_visible(true);
HXLINE(1250)					this->_layoutItems[i] = itemRenderer;
HXLINE(1251)					bool removed = storage->inactiveItemRenderers->remove(itemRenderer);
HXLINE(1252)					if (!(removed)) {
HXLINE(1253)						HX_STACK_DO_THROW( ::openfl::errors::IllegalOperationError_obj::__alloc( HX_CTX ,((((HX_("",00,00,00,00) + ::Type_obj::getClassName(::Type_obj::getClass(::hx::ObjectPtr<OBJ_>(this)))) + HX_(": item renderer map contains bad data for item at index ",f9,f8,65,f0)) + i) + HX_(". This may be caused by duplicate items in the data provider, which is not allowed.",2a,50,89,94))));
            					}
HXLINE(1255)					storage->activeItemRenderers->push(itemRenderer);
            				}
            				else {
HXLINE(1257)					this->_unrenderedData->push(item);
            				}
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(ListView_obj,findUnrenderedData,(void))

bool ListView_obj::populateCurrentItemState( ::Dynamic item,int index, ::feathers::data::ListViewItemState state,bool force){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_1262_populateCurrentItemState)
HXLINE(1263)		bool changed = false;
HXLINE(1264)		bool _hx_tmp;
HXDLIN(1264)		if (!(force)) {
HXLINE(1264)			_hx_tmp = ::hx::IsInstanceNotEq( state->owner,::hx::ObjectPtr<OBJ_>(this) );
            		}
            		else {
HXLINE(1264)			_hx_tmp = true;
            		}
HXDLIN(1264)		if (_hx_tmp) {
HXLINE(1265)			state->owner = ::hx::ObjectPtr<OBJ_>(this);
HXLINE(1266)			changed = true;
            		}
HXLINE(1268)		bool _hx_tmp1;
HXDLIN(1268)		if (!(force)) {
HXLINE(1268)			_hx_tmp1 = ::hx::IsNotEq( state->data,item );
            		}
            		else {
HXLINE(1268)			_hx_tmp1 = true;
            		}
HXDLIN(1268)		if (_hx_tmp1) {
HXLINE(1269)			state->data = item;
HXLINE(1270)			changed = true;
            		}
HXLINE(1272)		bool _hx_tmp2;
HXDLIN(1272)		if (!(force)) {
HXLINE(1272)			_hx_tmp2 = (state->index != index);
            		}
            		else {
HXLINE(1272)			_hx_tmp2 = true;
            		}
HXDLIN(1272)		if (_hx_tmp2) {
HXLINE(1273)			state->index = index;
HXLINE(1274)			changed = true;
            		}
HXLINE(1276)		bool selected = (this->_selectedIndices->indexOf(index,null()) != -1);
HXLINE(1277)		bool _hx_tmp3;
HXDLIN(1277)		if (!(force)) {
HXLINE(1277)			_hx_tmp3 = (state->selected != selected);
            		}
            		else {
HXLINE(1277)			_hx_tmp3 = true;
            		}
HXDLIN(1277)		if (_hx_tmp3) {
HXLINE(1278)			state->selected = selected;
HXLINE(1279)			changed = true;
            		}
HXLINE(1281)		bool enabled;
HXDLIN(1281)		if (this->_enabled) {
HXLINE(1281)			enabled = ( (bool)(this->itemToEnabled(item)) );
            		}
            		else {
HXLINE(1281)			enabled = false;
            		}
HXLINE(1282)		bool _hx_tmp4;
HXDLIN(1282)		if (!(force)) {
HXLINE(1282)			_hx_tmp4 = (state->enabled != enabled);
            		}
            		else {
HXLINE(1282)			_hx_tmp4 = true;
            		}
HXDLIN(1282)		if (_hx_tmp4) {
HXLINE(1283)			state->enabled = enabled;
HXLINE(1284)			changed = true;
            		}
HXLINE(1286)		::String text = ( (::String)(this->itemToText(item)) );
HXLINE(1287)		bool _hx_tmp5;
HXDLIN(1287)		if (!(force)) {
HXLINE(1287)			_hx_tmp5 = (state->text != text);
            		}
            		else {
HXLINE(1287)			_hx_tmp5 = true;
            		}
HXDLIN(1287)		if (_hx_tmp5) {
HXLINE(1288)			state->text = text;
HXLINE(1289)			changed = true;
            		}
HXLINE(1291)		return changed;
            	}


HX_DEFINE_DYNAMIC_FUNC4(ListView_obj,populateCurrentItemState,return )

void ListView_obj::resetItemRenderer( ::openfl::display::DisplayObject itemRenderer, ::feathers::data::ListViewItemState state, ::feathers::controls::_ListView::ItemRendererStorage storage){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_1294_resetItemRenderer)
HXLINE(1295)		bool oldIgnoreSelectionChange = this->_ignoreSelectionChange;
HXLINE(1296)		this->_ignoreSelectionChange = true;
HXLINE(1297)		 ::feathers::utils::DisplayObjectRecycler recycler;
HXDLIN(1297)		if (::hx::IsNotNull( storage->oldItemRendererRecycler )) {
HXLINE(1297)			recycler = storage->oldItemRendererRecycler;
            		}
            		else {
HXLINE(1297)			recycler = storage->itemRendererRecycler;
            		}
HXLINE(1298)		bool _hx_tmp;
HXDLIN(1298)		if (::hx::IsNotNull( recycler )) {
HXLINE(1298)			_hx_tmp = ::hx::IsNotNull( recycler->reset );
            		}
            		else {
HXLINE(1298)			_hx_tmp = false;
            		}
HXDLIN(1298)		if (_hx_tmp) {
HXLINE(1299)			recycler->reset(itemRenderer,state);
            		}
HXLINE(1301)		this->_ignoreSelectionChange = oldIgnoreSelectionChange;
HXLINE(1302)		this->refreshItemRendererProperties(itemRenderer,::feathers::controls::ListView_obj::RESET_ITEM_STATE);
            	}


HX_DEFINE_DYNAMIC_FUNC3(ListView_obj,resetItemRenderer,(void))

void ListView_obj::updateItemRenderer( ::openfl::display::DisplayObject itemRenderer, ::feathers::data::ListViewItemState state, ::feathers::controls::_ListView::ItemRendererStorage storage){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_1305_updateItemRenderer)
HXLINE(1306)		state->recyclerID = storage->id;
HXLINE(1307)		bool oldIgnoreSelectionChange = this->_ignoreSelectionChange;
HXLINE(1308)		this->_ignoreSelectionChange = true;
HXLINE(1309)		if (::hx::IsNotNull( storage->itemRendererRecycler->update )) {
HXLINE(1310)			storage->itemRendererRecycler->update(itemRenderer,state);
            		}
HXLINE(1312)		this->_ignoreSelectionChange = oldIgnoreSelectionChange;
HXLINE(1313)		this->refreshItemRendererProperties(itemRenderer,state);
            	}


HX_DEFINE_DYNAMIC_FUNC3(ListView_obj,updateItemRenderer,(void))

void ListView_obj::refreshItemRendererProperties( ::openfl::display::DisplayObject itemRenderer, ::feathers::data::ListViewItemState state){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_1316_refreshItemRendererProperties)
HXLINE(1317)		bool oldIgnoreSelectionChange = this->_ignoreSelectionChange;
HXLINE(1318)		this->_ignoreSelectionChange = true;
HXLINE(1319)		if (::Std_obj::isOfType(itemRenderer,::hx::ClassOf< ::feathers::core::IUIControl >())) {
HXLINE(1320)			::Dynamic uiControl =  ::hx::interface_check(itemRenderer,0x2696a04f);
HXLINE(1321)			::feathers::core::IUIControl_obj::set_enabled(uiControl,state->enabled);
            		}
HXLINE(1323)		if (::Std_obj::isOfType(itemRenderer,::hx::ClassOf< ::feathers::controls::dataRenderers::IDataRenderer >())) {
HXLINE(1324)			::Dynamic dataRenderer =  ::hx::interface_check(itemRenderer,0x70798096);
HXLINE(1326)			::feathers::controls::dataRenderers::IDataRenderer_obj::set_data(dataRenderer,state->data);
            		}
HXLINE(1328)		if (::Std_obj::isOfType(itemRenderer,::hx::ClassOf< ::feathers::controls::dataRenderers::IListViewItemRenderer >())) {
HXLINE(1329)			::Dynamic listRenderer =  ::hx::interface_check(itemRenderer,0x65334802);
HXLINE(1330)			::feathers::controls::dataRenderers::IListViewItemRenderer_obj::set_index(listRenderer,state->index);
HXLINE(1331)			::feathers::controls::dataRenderers::IListViewItemRenderer_obj::set_listViewOwner(listRenderer,state->owner);
            		}
HXLINE(1333)		if (::Std_obj::isOfType(itemRenderer,::hx::ClassOf< ::feathers::layout::ILayoutIndexObject >())) {
HXLINE(1334)			::Dynamic layoutIndexObject =  ::hx::interface_check(itemRenderer,0xe7561c78);
HXLINE(1335)			::feathers::layout::ILayoutIndexObject_obj::set_layoutIndex(layoutIndexObject,state->index);
            		}
HXLINE(1337)		if (::Std_obj::isOfType(itemRenderer,::hx::ClassOf< ::feathers::controls::IToggle >())) {
HXLINE(1338)			::Dynamic toggle =  ::hx::interface_check(itemRenderer,0xdea06717);
HXLINE(1340)			::feathers::controls::IToggle_obj::set_selected(toggle,state->selected);
            		}
HXLINE(1342)		this->_ignoreSelectionChange = oldIgnoreSelectionChange;
            	}


HX_DEFINE_DYNAMIC_FUNC2(ListView_obj,refreshItemRendererProperties,(void))

void ListView_obj::renderUnrenderedData(){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_1345_renderUnrenderedData)
HXLINE(1346)		{
HXLINE(1346)			int _g = 0;
HXDLIN(1346)			::cpp::VirtualArray _g1 = this->_unrenderedData;
HXDLIN(1346)			while((_g < _g1->get_length())){
HXLINE(1346)				 ::Dynamic item = _g1->__get(_g);
HXDLIN(1346)				_g = (_g + 1);
HXLINE(1347)				int index = ::feathers::data::IFlatCollection_obj::indexOf(this->_dataProvider,item);
HXLINE(1348)				 ::feathers::data::ListViewItemState state = this->itemStatePool->get();
HXLINE(1349)				this->populateCurrentItemState(item,index,state,true);
HXLINE(1350)				 ::openfl::display::DisplayObject itemRenderer = this->createItemRenderer(state);
HXLINE(1351)				itemRenderer->set_visible(true);
HXLINE(1352)				this->listViewPort->addChild(itemRenderer);
HXLINE(1353)				this->_layoutItems[index] = itemRenderer;
            			}
            		}
HXLINE(1358)		this->_unrenderedData->resize(0);
            	}


HX_DEFINE_DYNAMIC_FUNC0(ListView_obj,renderUnrenderedData,(void))

 ::openfl::display::DisplayObject ListView_obj::createItemRenderer( ::feathers::data::ListViewItemState state){
            	HX_GC_STACKFRAME(&_hx_pos_c5852abc10682dee_1362_createItemRenderer)
HXLINE(1363)		 ::feathers::controls::_ListView::ItemRendererStorage storage = this->itemStateToStorage(state);
HXLINE(1364)		 ::openfl::display::DisplayObject itemRenderer = null();
HXLINE(1365)		if ((storage->inactiveItemRenderers->length == 0)) {
HXLINE(1366)			itemRenderer = ( ( ::openfl::display::DisplayObject)(storage->itemRendererRecycler->create()) );
HXLINE(1367)			if (::Std_obj::isOfType(itemRenderer,::hx::ClassOf< ::feathers::style::IVariantStyleObject >())) {
HXLINE(1368)				::Dynamic variantItemRenderer =  ::hx::interface_check(itemRenderer,0x41bc4513);
HXLINE(1369)				if (::hx::IsNull( ::feathers::style::IVariantStyleObject_obj::get_variant(variantItemRenderer) )) {
HXLINE(1370)					::String variant;
HXDLIN(1370)					if (::hx::IsNotNull( this->get_customItemRendererVariant() )) {
HXLINE(1370)						variant = this->get_customItemRendererVariant();
            					}
            					else {
HXLINE(1370)						variant = ::feathers::controls::ListView_obj::CHILD_VARIANT_ITEM_RENDERER;
            					}
HXLINE(1371)					::feathers::style::IVariantStyleObject_obj::set_variant(variantItemRenderer,variant);
            				}
            			}
HXLINE(1378)			if (::Std_obj::isOfType(itemRenderer,::hx::ClassOf< ::feathers::core::IUIControl >())) {
HXLINE(1379)				::feathers::core::IUIControl_obj::initializeNow( ::hx::interface_check(itemRenderer,0x2696a04f));
            			}
HXLINE(1383)			if (::hx::IsNull( storage->measurements )) {
HXLINE(1384)				storage->measurements =  ::feathers::layout::Measurements_obj::__alloc( HX_CTX ,itemRenderer);
            			}
            		}
            		else {
HXLINE(1387)			itemRenderer = storage->inactiveItemRenderers->shift().StaticCast<  ::openfl::display::DisplayObject >();
            		}
HXLINE(1389)		this->updateItemRenderer(itemRenderer,state,storage);
HXLINE(1390)		if (::Std_obj::isOfType(itemRenderer,::hx::ClassOf< ::feathers::controls::ITriggerView >())) {
HXLINE(1392)			itemRenderer->addEventListener(HX_("trigger",38,55,df,25),this->listView_itemRenderer_triggerHandler_dyn(),null(),null(),null());
            		}
            		else {
HXLINE(1395)			itemRenderer->addEventListener(HX_("click",48,7c,5e,48),this->listView_itemRenderer_clickHandler_dyn(),null(),null(),null());
HXLINE(1397)			itemRenderer->addEventListener(HX_("touchTap",e4,1b,15,00),this->listView_itemRenderer_touchTapHandler_dyn(),null(),null(),null());
            		}
HXLINE(1400)		if (::Std_obj::isOfType(itemRenderer,::hx::ClassOf< ::feathers::controls::IToggle >())) {
HXLINE(1401)			itemRenderer->addEventListener(HX_("change",70,91,72,b7),this->listView_itemRenderer_changeHandler_dyn(),null(),null(),null());
            		}
HXLINE(1403)		if (::Std_obj::isOfType(itemRenderer,::hx::ClassOf< ::feathers::core::IMeasureObject >())) {
HXLINE(1404)			itemRenderer->addEventListener(HX_("resize",f4,59,7b,08),this->listView_itemRenderer_resizeHandler_dyn(),null(),null(),null());
            		}
HXLINE(1406)		this->itemRendererToItemState->set(itemRenderer,state);
HXLINE(1407)		this->dataToItemRenderer->set(state->data,itemRenderer);
HXLINE(1408)		storage->activeItemRenderers->push(itemRenderer);
HXLINE(1409)		return itemRenderer;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ListView_obj,createItemRenderer,return )

void ListView_obj::destroyItemRenderer( ::openfl::display::DisplayObject itemRenderer, ::feathers::utils::DisplayObjectRecycler recycler){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_1412_destroyItemRenderer)
HXLINE(1413)		this->listViewPort->removeChild(itemRenderer);
HXLINE(1414)		bool _hx_tmp;
HXDLIN(1414)		if (::hx::IsNotNull( recycler )) {
HXLINE(1414)			_hx_tmp = ::hx::IsNotNull( recycler->destroy );
            		}
            		else {
HXLINE(1414)			_hx_tmp = false;
            		}
HXDLIN(1414)		if (_hx_tmp) {
HXLINE(1415)			recycler->destroy(itemRenderer);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(ListView_obj,destroyItemRenderer,(void))

 ::feathers::controls::_ListView::ItemRendererStorage ListView_obj::itemStateToStorage( ::feathers::data::ListViewItemState state){
            	HX_GC_STACKFRAME(&_hx_pos_c5852abc10682dee_1419_itemStateToStorage)
HXLINE(1420)		::String recyclerID = null();
HXLINE(1421)		if (::hx::IsNotNull( this->_itemRendererRecyclerIDFunction )) {
HXLINE(1422)			recyclerID = ( (::String)(this->_itemRendererRecyclerIDFunction(state)) );
            		}
HXLINE(1424)		 ::feathers::utils::DisplayObjectRecycler recycler = null();
HXLINE(1425)		if (::hx::IsNotNull( recyclerID )) {
HXLINE(1426)			if (::hx::IsNotNull( this->_recyclerMap )) {
HXLINE(1427)				recycler = ( ( ::feathers::utils::DisplayObjectRecycler)(this->_recyclerMap->get(recyclerID)) );
            			}
HXLINE(1429)			if (::hx::IsNull( recycler )) {
HXLINE(1430)				HX_STACK_DO_THROW( ::openfl::errors::IllegalOperationError_obj::__alloc( HX_CTX ,((HX_("Item renderer recycler ID \"",0e,89,74,61) + recyclerID) + HX_("\" is not registered.",e7,6a,df,d7))));
            			}
            		}
HXLINE(1433)		if (::hx::IsNull( recycler )) {
HXLINE(1434)			return this->_defaultStorage;
            		}
HXLINE(1436)		if (::hx::IsNull( this->_additionalStorage )) {
HXLINE(1437)			this->_additionalStorage = ::Array_obj< ::Dynamic>::__new(0);
            		}
HXLINE(1439)		{
HXLINE(1439)			int _g = 0;
HXDLIN(1439)			int _g1 = this->_additionalStorage->length;
HXDLIN(1439)			while((_g < _g1)){
HXLINE(1439)				_g = (_g + 1);
HXDLIN(1439)				int i = (_g - 1);
HXLINE(1440)				 ::feathers::controls::_ListView::ItemRendererStorage storage = this->_additionalStorage->__get(i).StaticCast<  ::feathers::controls::_ListView::ItemRendererStorage >();
HXLINE(1441)				if (::hx::IsInstanceEq( storage->itemRendererRecycler,recycler )) {
HXLINE(1442)					return storage;
            				}
            			}
            		}
HXLINE(1445)		 ::feathers::controls::_ListView::ItemRendererStorage storage1 =  ::feathers::controls::_ListView::ItemRendererStorage_obj::__alloc( HX_CTX ,recyclerID,recycler);
HXLINE(1446)		this->_additionalStorage->push(storage1);
HXLINE(1447)		return storage1;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ListView_obj,itemStateToStorage,return )

void ListView_obj::refreshSelectedIndicesAfterFilterOrSort(){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_1450_refreshSelectedIndicesAfterFilterOrSort)
HXLINE(1451)		if ((this->_selectedIndex == -1)) {
HXLINE(1452)			return;
            		}
HXLINE(1456)		this->set_selectedIndex(::feathers::data::IFlatCollection_obj::indexOf(this->_dataProvider,this->_selectedItem));
            	}


HX_DEFINE_DYNAMIC_FUNC0(ListView_obj,refreshSelectedIndicesAfterFilterOrSort,(void))

void ListView_obj::handleSelectionChange( ::Dynamic item,int index,bool ctrlKey,bool shiftKey){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_1459_handleSelectionChange)
HXLINE(1460)		bool _hx_tmp;
HXDLIN(1460)		if ((index != -1)) {
HXLINE(1460)			_hx_tmp = !(this->_selectable);
            		}
            		else {
HXLINE(1460)			_hx_tmp = true;
            		}
HXDLIN(1460)		if (_hx_tmp) {
HXLINE(1462)			this->set_selectedItem(null());
HXLINE(1463)			return;
            		}
HXLINE(1465)		int selectionIndex = this->_selectedItems->indexOf(item,null());
HXLINE(1466)		bool _hx_tmp1;
HXDLIN(1466)		if (this->_allowMultipleSelection) {
HXLINE(1466)			if (!(ctrlKey)) {
HXLINE(1466)				_hx_tmp1 = shiftKey;
            			}
            			else {
HXLINE(1466)				_hx_tmp1 = true;
            			}
            		}
            		else {
HXLINE(1466)			_hx_tmp1 = false;
            		}
HXDLIN(1466)		if (_hx_tmp1) {
HXLINE(1467)			if (shiftKey) {
HXLINE(1468)				int anchorIndex = this->_selectionAnchorIndex;
HXLINE(1469)				if ((anchorIndex == -1)) {
HXLINE(1470)					anchorIndex = 0;
            				}
HXLINE(1472)				::Array< int > selectedIndices = ::Array_obj< int >::__new(0);
HXLINE(1473)				if ((index == anchorIndex)) {
HXLINE(1474)					selectedIndices->unshift(anchorIndex);
            				}
            				else {
HXLINE(1476)					int i = anchorIndex;
HXLINE(1477)					do {
HXLINE(1478)						selectedIndices->unshift(i);
HXLINE(1479)						int i1;
HXDLIN(1479)						if ((anchorIndex > index)) {
HXLINE(1479)							i1 = -1;
            						}
            						else {
HXLINE(1479)							i1 = 1;
            						}
HXDLIN(1479)						i = (i + i1);
            					} while((i != index));
;
HXLINE(1481)					if ((index != anchorIndex)) {
HXLINE(1482)						selectedIndices->unshift(index);
            					}
            				}
HXLINE(1485)				this->set_selectedIndices(selectedIndices);
HXLINE(1487)				this->_selectionAnchorIndex = anchorIndex;
            			}
            			else {
HXLINE(1489)				if ((selectionIndex == -1)) {
HXLINE(1490)					::cpp::VirtualArray selectedItems = this->_selectedItems->copy();
HXLINE(1491)					selectedItems->unshift(item);
HXLINE(1493)					this->set_selectedItems(selectedItems);
            				}
            				else {
HXLINE(1495)					::cpp::VirtualArray selectedItems1 = this->_selectedItems->copy();
HXLINE(1496)					selectedItems1->splice(selectionIndex,1);
HXLINE(1498)					this->set_selectedItems(selectedItems1);
            				}
HXLINE(1501)				this->_selectionAnchorIndex = index;
            			}
            		}
            		else {
HXLINE(1505)			this->set_selectedItem(item);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC4(ListView_obj,handleSelectionChange,(void))

void ListView_obj::handlePendingScroll(){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_1509_handlePendingScroll)
HXLINE(1510)		if ((this->_pendingScrollIndex == -1)) {
HXLINE(1511)			return;
            		}
HXLINE(1513)		int index = this->_pendingScrollIndex;
HXLINE(1514)		 ::Dynamic duration;
HXDLIN(1514)		if (::hx::IsNotNull( this->_pendingScrollDuration )) {
HXLINE(1514)			duration = this->_pendingScrollDuration;
            		}
            		else {
HXLINE(1514)			duration = ((Float)0.0);
            		}
HXLINE(1515)		this->_pendingScrollIndex = -1;
HXLINE(1516)		this->_pendingScrollDuration = null();
HXLINE(1518)		bool _hx_tmp;
HXDLIN(1518)		if (::hx::IsNotNull( this->_dataProvider )) {
HXLINE(1518)			_hx_tmp = (::feathers::data::IFlatCollection_obj::get_length(this->_dataProvider) == 0);
            		}
            		else {
HXLINE(1518)			_hx_tmp = true;
            		}
HXDLIN(1518)		if (_hx_tmp) {
HXLINE(1519)			return;
            		}
HXLINE(1522)		Float targetX = this->get_scrollX();
HXLINE(1523)		Float targetY = this->get_scrollY();
HXLINE(1524)		if (::Std_obj::isOfType(this->get_layout(),::hx::ClassOf< ::feathers::layout::IScrollLayout >())) {
HXLINE(1525)			::Dynamic scrollLayout = this->get_layout();
HXLINE(1526)			int result = ::feathers::data::IFlatCollection_obj::get_length(this->_dataProvider);
HXDLIN(1526)			 ::Dynamic result1 = ::feathers::controls::supportClasses::IViewPort_obj::get_visibleWidth(this->get_viewPort());
HXDLIN(1526)			 ::openfl::geom::Point result2 = ::feathers::layout::IScrollLayout_obj::getNearestScrollPositionForIndex(scrollLayout,index,result,result1,::feathers::controls::supportClasses::IViewPort_obj::get_visibleHeight(this->get_viewPort()),null());
HXLINE(1528)			targetX = result2->x;
HXLINE(1529)			targetY = result2->y;
            		}
            		else {
HXLINE(1531)			 ::Dynamic item = ::feathers::data::IFlatCollection_obj::get(this->_dataProvider,index);
HXLINE(1532)			 ::openfl::display::DisplayObject itemRenderer = ( ( ::openfl::display::DisplayObject)(this->dataToItemRenderer->get(item)) );
HXLINE(1533)			if (::hx::IsNull( itemRenderer )) {
HXLINE(1534)				return;
            			}
HXLINE(1537)			Float maxX = itemRenderer->get_x();
HXLINE(1538)			Float minX = (maxX + itemRenderer->get_width());
HXDLIN(1538)			Float minX1 = (minX - ( (Float)(::feathers::controls::supportClasses::IViewPort_obj::get_visibleWidth(this->get_viewPort())) ));
HXLINE(1539)			if ((targetX < minX1)) {
HXLINE(1540)				targetX = minX1;
            			}
            			else {
HXLINE(1541)				if ((targetX > maxX)) {
HXLINE(1542)					targetX = maxX;
            				}
            			}
HXLINE(1545)			Float maxY = itemRenderer->get_y();
HXLINE(1546)			Float minY = (maxY + itemRenderer->get_height());
HXDLIN(1546)			Float minY1 = (minY - ( (Float)(::feathers::controls::supportClasses::IViewPort_obj::get_visibleHeight(this->get_viewPort())) ));
HXLINE(1547)			if ((targetY < minY1)) {
HXLINE(1548)				targetY = minY1;
            			}
            			else {
HXLINE(1549)				if ((targetY > maxY)) {
HXLINE(1550)					targetY = maxY;
            				}
            			}
            		}
HXLINE(1554)		if (::hx::IsEq( duration,((Float)0.0) )) {
HXLINE(1555)			this->scroller->set_scrollX(targetX);
HXLINE(1556)			this->scroller->set_scrollY(targetY);
            		}
            		else {
HXLINE(1558)			this->scroller->throwTo(targetX,targetY,duration,null());
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(ListView_obj,handlePendingScroll,(void))

void ListView_obj::listView_itemRenderer_touchTapHandler( ::openfl::events::TouchEvent event){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_1562_listView_itemRenderer_touchTapHandler)
HXLINE(1563)		if (!(this->_enabled)) {
HXLINE(1564)			return;
            		}
HXLINE(1566)		if (event->isPrimaryTouchPoint) {
HXLINE(1568)			return;
            		}
HXLINE(1571)		 ::openfl::display::DisplayObject itemRenderer = ::hx::TCast<  ::openfl::display::DisplayObject >::cast(event->currentTarget);
HXLINE(1572)		 ::feathers::data::ListViewItemState state = ( ( ::feathers::data::ListViewItemState)(this->itemRendererToItemState->get(itemRenderer)) );
HXLINE(1573)		::feathers::events::ListViewEvent_obj::dispatch(::hx::ObjectPtr<OBJ_>(this),HX_("itemTrigger",65,d0,e1,83),state);
HXLINE(1575)		bool _hx_tmp;
HXDLIN(1575)		if (this->_selectable) {
HXLINE(1575)			_hx_tmp = !(this->pointerSelectionEnabled);
            		}
            		else {
HXLINE(1575)			_hx_tmp = true;
            		}
HXDLIN(1575)		if (_hx_tmp) {
HXLINE(1576)			return;
            		}
HXLINE(1578)		this->handleSelectionChange(state->data,state->index,event->ctrlKey,event->shiftKey);
            	}


HX_DEFINE_DYNAMIC_FUNC1(ListView_obj,listView_itemRenderer_touchTapHandler,(void))

void ListView_obj::listView_itemRenderer_clickHandler( ::openfl::events::MouseEvent event){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_1581_listView_itemRenderer_clickHandler)
HXLINE(1582)		if (!(this->_enabled)) {
HXLINE(1583)			return;
            		}
HXLINE(1586)		 ::openfl::display::DisplayObject itemRenderer = ::hx::TCast<  ::openfl::display::DisplayObject >::cast(event->currentTarget);
HXLINE(1587)		 ::feathers::data::ListViewItemState state = ( ( ::feathers::data::ListViewItemState)(this->itemRendererToItemState->get(itemRenderer)) );
HXLINE(1588)		::feathers::events::ListViewEvent_obj::dispatch(::hx::ObjectPtr<OBJ_>(this),HX_("itemTrigger",65,d0,e1,83),state);
HXLINE(1590)		bool _hx_tmp;
HXDLIN(1590)		if (this->_selectable) {
HXLINE(1590)			_hx_tmp = !(this->pointerSelectionEnabled);
            		}
            		else {
HXLINE(1590)			_hx_tmp = true;
            		}
HXDLIN(1590)		if (_hx_tmp) {
HXLINE(1591)			return;
            		}
HXLINE(1593)		this->handleSelectionChange(state->data,state->index,event->ctrlKey,event->shiftKey);
            	}


HX_DEFINE_DYNAMIC_FUNC1(ListView_obj,listView_itemRenderer_clickHandler,(void))

void ListView_obj::listView_itemRenderer_triggerHandler( ::feathers::events::TriggerEvent event){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_1596_listView_itemRenderer_triggerHandler)
HXLINE(1597)		if (!(this->_enabled)) {
HXLINE(1598)			return;
            		}
HXLINE(1601)		 ::openfl::display::DisplayObject itemRenderer = ::hx::TCast<  ::openfl::display::DisplayObject >::cast(event->currentTarget);
HXLINE(1602)		 ::feathers::data::ListViewItemState state = ( ( ::feathers::data::ListViewItemState)(this->itemRendererToItemState->get(itemRenderer)) );
HXLINE(1603)		::feathers::events::ListViewEvent_obj::dispatch(::hx::ObjectPtr<OBJ_>(this),HX_("itemTrigger",65,d0,e1,83),state);
HXLINE(1605)		if (!(this->_selectable)) {
HXLINE(1606)			return;
            		}
HXLINE(1608)		this->handleSelectionChange(state->data,state->index,event->ctrlKey,event->shiftKey);
            	}


HX_DEFINE_DYNAMIC_FUNC1(ListView_obj,listView_itemRenderer_triggerHandler,(void))

void ListView_obj::listView_itemRenderer_resizeHandler( ::openfl::events::Event event){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_1611_listView_itemRenderer_resizeHandler)
HXLINE(1612)		if (this->_validating) {
HXLINE(1613)			return;
            		}
HXLINE(1615)		this->setInvalid(::feathers::core::InvalidationFlag_obj::LAYOUT_dyn());
            	}


HX_DEFINE_DYNAMIC_FUNC1(ListView_obj,listView_itemRenderer_resizeHandler,(void))

void ListView_obj::listView_itemRenderer_changeHandler( ::openfl::events::Event event){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_1618_listView_itemRenderer_changeHandler)
HXLINE(1619)		if (this->_ignoreSelectionChange) {
HXLINE(1620)			return;
            		}
HXLINE(1622)		 ::openfl::display::DisplayObject itemRenderer = ::hx::TCast<  ::openfl::display::DisplayObject >::cast(event->currentTarget);
HXLINE(1623)		::Dynamic toggleItemRenderer =  ::hx::interface_check(itemRenderer,0xdea06717);
HXLINE(1624)		 ::feathers::data::ListViewItemState state = ( ( ::feathers::data::ListViewItemState)(this->itemRendererToItemState->get(itemRenderer)) );
HXLINE(1625)		bool _hx_tmp = ::feathers::controls::IToggle_obj::get_selected(toggleItemRenderer);
HXDLIN(1625)		if ((_hx_tmp == state->selected)) {
HXLINE(1627)			return;
            		}
HXLINE(1631)		this->setInvalid(::feathers::core::InvalidationFlag_obj::SELECTION_dyn());
            	}


HX_DEFINE_DYNAMIC_FUNC1(ListView_obj,listView_itemRenderer_changeHandler,(void))

void ListView_obj::listView_dataProvider_changeHandler( ::openfl::events::Event event){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_1635_listView_dataProvider_changeHandler)
HXDLIN(1635)		this->setInvalid(::feathers::core::InvalidationFlag_obj::DATA_dyn());
            	}


HX_DEFINE_DYNAMIC_FUNC1(ListView_obj,listView_dataProvider_changeHandler,(void))

void ListView_obj::listView_dataProvider_addItemHandler( ::feathers::events::FlatCollectionEvent event){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_1638_listView_dataProvider_addItemHandler)
HXLINE(1639)		if (::hx::IsNotNull( this->_virtualCache )) {
HXLINE(1640)			this->_virtualCache->insert(event->index,null());
            		}
HXLINE(1642)		if ((this->_selectedIndex == -1)) {
HXLINE(1643)			return;
            		}
HXLINE(1645)		bool changed = false;
HXLINE(1646)		{
HXLINE(1646)			int _g = 0;
HXDLIN(1646)			int _g1 = this->_selectedIndices->length;
HXDLIN(1646)			while((_g < _g1)){
HXLINE(1646)				_g = (_g + 1);
HXDLIN(1646)				int i = (_g - 1);
HXLINE(1647)				int selectedIndex = this->_selectedIndices->__get(i);
HXLINE(1648)				if ((selectedIndex >= event->index)) {
HXLINE(1649)					this->_selectedIndices[i] = (selectedIndex + 1);
HXLINE(1650)					changed = true;
            				}
            			}
            		}
HXLINE(1653)		if (changed) {
HXLINE(1654)			this->_selectedIndex = this->_selectedIndices->__get(0);
HXLINE(1655)			::feathers::events::FeathersEvent_obj::dispatch(::hx::ObjectPtr<OBJ_>(this),HX_("change",70,91,72,b7),null(),null());
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(ListView_obj,listView_dataProvider_addItemHandler,(void))

void ListView_obj::listView_dataProvider_removeItemHandler( ::feathers::events::FlatCollectionEvent event){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_1659_listView_dataProvider_removeItemHandler)
HXLINE(1660)		if (::hx::IsNotNull( this->_virtualCache )) {
HXLINE(1661)			this->_virtualCache->remove(event->index);
            		}
HXLINE(1663)		if ((this->get_selectedIndex() == -1)) {
HXLINE(1664)			return;
            		}
HXLINE(1666)		bool changed = false;
HXLINE(1667)		int i = (this->_selectedIndices->length - 1);
HXLINE(1668)		while((i >= 0)){
HXLINE(1669)			int selectedIndex = this->_selectedIndices->__get(i);
HXLINE(1670)			if ((selectedIndex == event->index)) {
HXLINE(1671)				this->_selectedIndices->removeRange(i,1);
HXLINE(1672)				this->_selectedItems->splice(i,1);
HXLINE(1673)				changed = true;
            			}
            			else {
HXLINE(1674)				if ((selectedIndex > event->index)) {
HXLINE(1675)					this->_selectedIndices[i] = (selectedIndex - 1);
HXLINE(1676)					changed = true;
            				}
            			}
HXLINE(1678)			i = (i - 1);
            		}
HXLINE(1680)		if (changed) {
HXLINE(1681)			if ((this->_selectedIndices->length > 0)) {
HXLINE(1682)				this->_selectedIndex = this->_selectedIndices->__get(0);
HXLINE(1683)				this->_selectedItem = ::feathers::data::IFlatCollection_obj::get(this->_dataProvider,this->_selectedIndex);
            			}
            			else {
HXLINE(1685)				this->_selectedIndex = -1;
HXLINE(1686)				this->_selectedItem = null();
            			}
HXLINE(1688)			::feathers::events::FeathersEvent_obj::dispatch(::hx::ObjectPtr<OBJ_>(this),HX_("change",70,91,72,b7),null(),null());
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(ListView_obj,listView_dataProvider_removeItemHandler,(void))

void ListView_obj::listView_dataProvider_replaceItemHandler( ::feathers::events::FlatCollectionEvent event){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_1692_listView_dataProvider_replaceItemHandler)
HXLINE(1693)		if (::hx::IsNotNull( this->_virtualCache )) {
HXLINE(1694)			this->_virtualCache->set(event->index,null());
            		}
HXLINE(1696)		if ((this->_selectedIndex == -1)) {
HXLINE(1697)			return;
            		}
HXLINE(1699)		{
HXLINE(1699)			int _g = 0;
HXDLIN(1699)			int _g1 = this->_selectedIndices->length;
HXDLIN(1699)			while((_g < _g1)){
HXLINE(1699)				_g = (_g + 1);
HXDLIN(1699)				int i = (_g - 1);
HXLINE(1700)				int selectedIndex = this->_selectedIndices->__get(i);
HXLINE(1701)				if ((selectedIndex == event->index)) {
HXLINE(1704)					this->_selectedItems->set(i,::feathers::data::IFlatCollection_obj::get(this->_dataProvider,selectedIndex));
HXLINE(1705)					this->_selectedItem = this->_selectedItems->__get(0);
HXLINE(1706)					::feathers::events::FeathersEvent_obj::dispatch(::hx::ObjectPtr<OBJ_>(this),HX_("change",70,91,72,b7),null(),null());
HXLINE(1707)					goto _hx_goto_80;
            				}
            			}
            			_hx_goto_80:;
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(ListView_obj,listView_dataProvider_replaceItemHandler,(void))

void ListView_obj::listView_dataProvider_removeAllHandler( ::feathers::events::FlatCollectionEvent event){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_1712_listView_dataProvider_removeAllHandler)
HXLINE(1713)		if (::hx::IsNotNull( this->_virtualCache )) {
HXLINE(1717)			this->_virtualCache->resize(0);
            		}
HXLINE(1721)		this->set_selectedIndex(-1);
            	}


HX_DEFINE_DYNAMIC_FUNC1(ListView_obj,listView_dataProvider_removeAllHandler,(void))

void ListView_obj::listView_dataProvider_resetHandler( ::feathers::events::FlatCollectionEvent event){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_1724_listView_dataProvider_resetHandler)
HXLINE(1725)		if (::hx::IsNotNull( this->_virtualCache )) {
HXLINE(1729)			this->_virtualCache->resize(0);
HXLINE(1731)			::cpp::VirtualArray _hx_tmp = this->_virtualCache;
HXDLIN(1731)			_hx_tmp->resize(::feathers::data::IFlatCollection_obj::get_length(this->_dataProvider));
            		}
HXLINE(1734)		this->set_selectedIndex(-1);
            	}


HX_DEFINE_DYNAMIC_FUNC1(ListView_obj,listView_dataProvider_resetHandler,(void))

void ListView_obj::listView_dataProvider_sortChangeHandler( ::feathers::events::FlatCollectionEvent event){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_1737_listView_dataProvider_sortChangeHandler)
HXLINE(1738)		if (::hx::IsNotNull( this->_virtualCache )) {
HXLINE(1744)			this->_virtualCache->resize(0);
HXLINE(1746)			::cpp::VirtualArray _hx_tmp = this->_virtualCache;
HXDLIN(1746)			_hx_tmp->resize(::feathers::data::IFlatCollection_obj::get_length(this->_dataProvider));
            		}
HXLINE(1748)		this->refreshSelectedIndicesAfterFilterOrSort();
            	}


HX_DEFINE_DYNAMIC_FUNC1(ListView_obj,listView_dataProvider_sortChangeHandler,(void))

void ListView_obj::listView_dataProvider_filterChangeHandler( ::feathers::events::FlatCollectionEvent event){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_1751_listView_dataProvider_filterChangeHandler)
HXLINE(1752)		if (::hx::IsNotNull( this->_virtualCache )) {
HXLINE(1758)			this->_virtualCache->resize(0);
HXLINE(1760)			::cpp::VirtualArray _hx_tmp = this->_virtualCache;
HXDLIN(1760)			_hx_tmp->resize(::feathers::data::IFlatCollection_obj::get_length(this->_dataProvider));
            		}
HXLINE(1762)		this->refreshSelectedIndicesAfterFilterOrSort();
            	}


HX_DEFINE_DYNAMIC_FUNC1(ListView_obj,listView_dataProvider_filterChangeHandler,(void))

void ListView_obj::updateItemRendererForIndex(int index){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_1765_updateItemRendererForIndex)
HXLINE(1766)		if (::hx::IsNotNull( this->_virtualCache )) {
HXLINE(1767)			this->_virtualCache->set(index,null());
            		}
HXLINE(1769)		 ::Dynamic item = ::feathers::data::IFlatCollection_obj::get(this->_dataProvider,index);
HXLINE(1770)		 ::openfl::display::DisplayObject itemRenderer = ( ( ::openfl::display::DisplayObject)(this->dataToItemRenderer->get(item)) );
HXLINE(1771)		if (::hx::IsNull( itemRenderer )) {
HXLINE(1773)			this->setInvalid(::feathers::core::InvalidationFlag_obj::DATA_dyn());
HXLINE(1774)			return;
            		}
HXLINE(1776)		 ::feathers::data::ListViewItemState state = ( ( ::feathers::data::ListViewItemState)(this->itemRendererToItemState->get(itemRenderer)) );
HXLINE(1777)		if (::hx::IsNull( state->owner )) {
HXLINE(1779)			return;
            		}
HXLINE(1781)		 ::feathers::controls::_ListView::ItemRendererStorage storage = this->itemStateToStorage(state);
HXLINE(1782)		this->populateCurrentItemState(item,index,state,true);
HXLINE(1786)		this->resetItemRenderer(itemRenderer,state,storage);
HXLINE(1787)		if (::hx::IsNotNull( storage->measurements )) {
HXLINE(1788)			storage->measurements->restore(itemRenderer);
            		}
HXLINE(1791)		state->owner = null();
HXLINE(1792)		this->setInvalid(::feathers::core::InvalidationFlag_obj::DATA_dyn());
            	}


HX_DEFINE_DYNAMIC_FUNC1(ListView_obj,updateItemRendererForIndex,(void))

void ListView_obj::listView_dataProvider_updateItemHandler( ::feathers::events::FlatCollectionEvent event){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_1796_listView_dataProvider_updateItemHandler)
HXDLIN(1796)		this->updateItemRendererForIndex(event->index);
            	}


HX_DEFINE_DYNAMIC_FUNC1(ListView_obj,listView_dataProvider_updateItemHandler,(void))

void ListView_obj::listView_dataProvider_updateAllHandler( ::feathers::events::FlatCollectionEvent event){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_1800_listView_dataProvider_updateAllHandler)
HXDLIN(1800)		int _g = 0;
HXDLIN(1800)		int _g1 = ::feathers::data::IFlatCollection_obj::get_length(this->_dataProvider);
HXDLIN(1800)		while((_g < _g1)){
HXDLIN(1800)			_g = (_g + 1);
HXDLIN(1800)			int i = (_g - 1);
HXLINE(1801)			this->updateItemRendererForIndex(i);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(ListView_obj,listView_dataProvider_updateAllHandler,(void))

void ListView_obj::navigateWithKeyboard( ::openfl::events::KeyboardEvent event){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_1805_navigateWithKeyboard)
HXLINE(1806)		if (event->isDefaultPrevented()) {
HXLINE(1807)			return;
            		}
HXLINE(1809)		bool _hx_tmp;
HXDLIN(1809)		if (::hx::IsNotNull( this->_dataProvider )) {
HXLINE(1809)			_hx_tmp = (::feathers::data::IFlatCollection_obj::get_length(this->_dataProvider) == 0);
            		}
            		else {
HXLINE(1809)			_hx_tmp = true;
            		}
HXDLIN(1809)		if (_hx_tmp) {
HXLINE(1810)			return;
            		}
HXLINE(1812)		int result = this->_selectedIndex;
HXLINE(1813)		if (::Std_obj::isOfType(this->get_layout(),::hx::ClassOf< ::feathers::layout::IKeyboardNavigationLayout >())) {
HXLINE(1814)			bool _hx_tmp1;
HXDLIN(1814)			bool _hx_tmp2;
HXDLIN(1814)			bool _hx_tmp3;
HXDLIN(1814)			bool _hx_tmp4;
HXDLIN(1814)			bool _hx_tmp5;
HXDLIN(1814)			bool _hx_tmp6;
HXDLIN(1814)			bool _hx_tmp7;
HXDLIN(1814)			if ((event->keyCode != 38)) {
HXLINE(1814)				_hx_tmp7 = (event->keyCode != 40);
            			}
            			else {
HXLINE(1814)				_hx_tmp7 = false;
            			}
HXDLIN(1814)			if (_hx_tmp7) {
HXLINE(1814)				_hx_tmp6 = (event->keyCode != 37);
            			}
            			else {
HXLINE(1814)				_hx_tmp6 = false;
            			}
HXDLIN(1814)			if (_hx_tmp6) {
HXLINE(1814)				_hx_tmp5 = (event->keyCode != 39);
            			}
            			else {
HXLINE(1814)				_hx_tmp5 = false;
            			}
HXDLIN(1814)			if (_hx_tmp5) {
HXLINE(1814)				_hx_tmp4 = (event->keyCode != 33);
            			}
            			else {
HXLINE(1814)				_hx_tmp4 = false;
            			}
HXDLIN(1814)			if (_hx_tmp4) {
HXLINE(1814)				_hx_tmp3 = (event->keyCode != 34);
            			}
            			else {
HXLINE(1814)				_hx_tmp3 = false;
            			}
HXDLIN(1814)			if (_hx_tmp3) {
HXLINE(1814)				_hx_tmp2 = (event->keyCode != 36);
            			}
            			else {
HXLINE(1814)				_hx_tmp2 = false;
            			}
HXDLIN(1814)			if (_hx_tmp2) {
HXLINE(1814)				_hx_tmp1 = (event->keyCode != 35);
            			}
            			else {
HXLINE(1814)				_hx_tmp1 = false;
            			}
HXDLIN(1814)			if (_hx_tmp1) {
HXLINE(1816)				return;
            			}
HXLINE(1818)			::Dynamic result1 = this->get_layout();
HXDLIN(1818)			::Array< ::Dynamic> result2 = this->_layoutItems;
HXLINE(1819)			 ::Dynamic result3 = this->listViewPort->get_visibleWidth();
HXLINE(1818)			result = ::feathers::layout::IKeyboardNavigationLayout_obj::findNextKeyboardIndex(result1,result,event,false,result2,null(),result3,this->listViewPort->get_visibleHeight());
            		}
            		else {
HXLINE(1821)			switch((int)(event->keyCode)){
            				case (int)33: {
HXLINE(1831)					result = (result - 1);
            				}
            				break;
            				case (int)34: {
HXLINE(1833)					result = (result + 1);
            				}
            				break;
            				case (int)35: {
HXLINE(1837)					result = (::feathers::data::IFlatCollection_obj::get_length(this->_dataProvider) - 1);
            				}
            				break;
            				case (int)36: {
HXLINE(1835)					result = 0;
            				}
            				break;
            				case (int)37: {
HXLINE(1827)					result = (result - 1);
            				}
            				break;
            				case (int)38: {
HXLINE(1823)					result = (result - 1);
            				}
            				break;
            				case (int)39: {
HXLINE(1829)					result = (result + 1);
            				}
            				break;
            				case (int)40: {
HXLINE(1825)					result = (result + 1);
            				}
            				break;
            				default:{
HXLINE(1840)					return;
            				}
            			}
            		}
HXLINE(1843)		if ((result < 0)) {
HXLINE(1844)			result = 0;
            		}
            		else {
HXLINE(1845)			if ((result >= ::feathers::data::IFlatCollection_obj::get_length(this->_dataProvider))) {
HXLINE(1846)				result = (::feathers::data::IFlatCollection_obj::get_length(this->_dataProvider) - 1);
            			}
            		}
HXLINE(1848)		bool changed = (this->_selectedIndex != result);
HXLINE(1849)		bool _hx_tmp8;
HXDLIN(1849)		if (!(changed)) {
HXLINE(1849)			_hx_tmp8 = (result != -1);
            		}
            		else {
HXLINE(1849)			_hx_tmp8 = false;
            		}
HXDLIN(1849)		if (_hx_tmp8) {
HXLINE(1850)			 ::openfl::display::DisplayObject itemRenderer = this->itemToItemRenderer(::feathers::data::IFlatCollection_obj::get(this->_dataProvider,result));
HXLINE(1851)			if (::hx::IsNull( itemRenderer )) {
HXLINE(1853)				changed = true;
            			}
            		}
HXLINE(1856)		if (!(changed)) {
HXLINE(1857)			return;
            		}
HXLINE(1859)		event->preventDefault();
HXLINE(1861)		this->set_selectedIndex(result);
HXLINE(1862)		if ((this->_selectedIndex != -1)) {
HXLINE(1863)			this->scrollToIndex(this->_selectedIndex,null());
            		}
HXLINE(1867)		if (::hx::IsNotNull( this->_focusManager )) {
HXLINE(1868)			::feathers::core::IFocusManager_obj::set_focus(this->_focusManager,::hx::ObjectPtr<OBJ_>(this));
            		}
            		else {
HXLINE(1869)			if (::hx::IsNotNull( this->stage )) {
HXLINE(1870)				this->stage->set_focus(::hx::ObjectPtr<OBJ_>(this));
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(ListView_obj,navigateWithKeyboard,(void))

void ListView_obj::baseScrollContainer_keyDownHandler( ::openfl::events::KeyboardEvent event){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_1874_baseScrollContainer_keyDownHandler)
HXLINE(1875)		if (!(this->_selectable)) {
HXLINE(1876)			this->super::baseScrollContainer_keyDownHandler(event);
HXLINE(1877)			return;
            		}
HXLINE(1879)		bool _hx_tmp;
HXDLIN(1879)		if (this->_enabled) {
HXLINE(1879)			_hx_tmp = event->isDefaultPrevented();
            		}
            		else {
HXLINE(1879)			_hx_tmp = true;
            		}
HXDLIN(1879)		if (_hx_tmp) {
HXLINE(1880)			return;
            		}
HXLINE(1882)		this->navigateWithKeyboard(event);
            	}


void ListView_obj::listView_keyDownHandler( ::openfl::events::KeyboardEvent event){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_1885_listView_keyDownHandler)
HXLINE(1886)		bool _hx_tmp;
HXDLIN(1886)		if (this->_enabled) {
HXLINE(1886)			_hx_tmp = event->isDefaultPrevented();
            		}
            		else {
HXLINE(1886)			_hx_tmp = true;
            		}
HXDLIN(1886)		if (_hx_tmp) {
HXLINE(1887)			return;
            		}
HXLINE(1889)		bool _hx_tmp1;
HXDLIN(1889)		if ((event->keyCode != 32)) {
HXLINE(1889)			_hx_tmp1 = (event->keyCode == 13);
            		}
            		else {
HXLINE(1889)			_hx_tmp1 = true;
            		}
HXDLIN(1889)		if (_hx_tmp1) {
HXLINE(1890)			if (::hx::IsNotNull( this->_selectedItem )) {
HXLINE(1891)				 ::openfl::display::DisplayObject itemRenderer = ( ( ::openfl::display::DisplayObject)(this->dataToItemRenderer->get(this->_selectedItem)) );
HXLINE(1892)				 ::feathers::data::ListViewItemState state = null();
HXLINE(1893)				if (::hx::IsNotNull( itemRenderer )) {
HXLINE(1894)					state = ( ( ::feathers::data::ListViewItemState)(this->itemRendererToItemState->get(itemRenderer)) );
            				}
HXLINE(1896)				bool isTemporary = false;
HXLINE(1897)				if (::hx::IsNull( state )) {
HXLINE(1899)					isTemporary = true;
HXLINE(1900)					state = this->itemStatePool->get();
            				}
HXLINE(1902)				this->populateCurrentItemState(this->_selectedItem,this->_selectedIndex,state,true);
HXLINE(1903)				::feathers::events::ListViewEvent_obj::dispatch(::hx::ObjectPtr<OBJ_>(this),HX_("itemTrigger",65,d0,e1,83),state);
HXLINE(1904)				if (isTemporary) {
HXLINE(1905)					this->itemStatePool->release(state);
            				}
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(ListView_obj,listView_keyDownHandler,(void))

::hx::Class ListView_obj::get_styleContext(){
            	HX_STACKFRAME(&_hx_pos_51bd3f43eb83f231_42_get_styleContext)
HXDLIN(  42)		return ::hx::ClassOf< ::feathers::controls::ListView >();
            	}


::Dynamic ListView_obj::get_layout(){
            	HX_STACKFRAME(&_hx_pos_c505d7860b5e39ae_85_get_layout)
HXDLIN(  85)		return this->_hx___layout;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ListView_obj,get_layout,return )

::Dynamic ListView_obj::set_layout(::Dynamic value){
            	HX_STACKFRAME(&_hx_pos_c505d7860b5e39ae_99_set_layout)
HXLINE( 106)		if (!(this->setStyle(HX_("layout",aa,ae,b8,58),null()))) {
HXLINE( 107)			return this->_hx___layout;
            		}
HXLINE( 109)		if (::hx::IsInstanceEq( this->_hx___layout,value )) {
HXLINE( 110)			return this->_hx___layout;
            		}
HXLINE( 115)		this->_previousClearStyle = this->clearStyle_layout_dyn();
HXLINE( 116)		this->_hx___layout = value;
HXLINE( 117)		this->setInvalid(::feathers::core::InvalidationFlag_obj::STYLES_dyn());
HXLINE( 118)		return this->_hx___layout;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ListView_obj,set_layout,return )

::Dynamic ListView_obj::clearStyle_layout(){
            	HX_STACKFRAME(&_hx_pos_c505d7860b5e39ae_131_clearStyle_layout)
HXLINE( 132)		this->set_layout(null());
HXLINE( 133)		return this->get_layout();
            	}


HX_DEFINE_DYNAMIC_FUNC0(ListView_obj,clearStyle_layout,return )

::String ListView_obj::get_customItemRendererVariant(){
            	HX_STACKFRAME(&_hx_pos_c505d7860b5e39ae_85_get_customItemRendererVariant)
HXDLIN(  85)		return this->_hx___customItemRendererVariant;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ListView_obj,get_customItemRendererVariant,return )

::String ListView_obj::set_customItemRendererVariant(::String value){
            	HX_STACKFRAME(&_hx_pos_c505d7860b5e39ae_99_set_customItemRendererVariant)
HXLINE( 106)		if (!(this->setStyle(HX_("customItemRendererVariant",7e,34,14,25),null()))) {
HXLINE( 107)			return this->_hx___customItemRendererVariant;
            		}
HXLINE( 109)		if ((this->_hx___customItemRendererVariant == value)) {
HXLINE( 110)			return this->_hx___customItemRendererVariant;
            		}
HXLINE( 115)		this->_previousClearStyle = this->clearStyle_customItemRendererVariant_dyn();
HXLINE( 116)		this->_hx___customItemRendererVariant = value;
HXLINE( 117)		this->setInvalid(::feathers::core::InvalidationFlag_obj::STYLES_dyn());
HXLINE( 118)		return this->_hx___customItemRendererVariant;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ListView_obj,set_customItemRendererVariant,return )

::String ListView_obj::clearStyle_customItemRendererVariant(){
            	HX_STACKFRAME(&_hx_pos_c505d7860b5e39ae_131_clearStyle_customItemRendererVariant)
HXLINE( 132)		this->set_customItemRendererVariant(null());
HXLINE( 133)		return this->get_customItemRendererVariant();
            	}


HX_DEFINE_DYNAMIC_FUNC0(ListView_obj,clearStyle_customItemRendererVariant,return )

::String ListView_obj::VARIANT_BORDERLESS;

::String ListView_obj::VARIANT_BORDER;

::String ListView_obj::VARIANT_POP_UP;

::String ListView_obj::CHILD_VARIANT_ITEM_RENDERER;

 ::feathers::core::InvalidationFlag ListView_obj::INVALIDATION_FLAG_ITEM_RENDERER_FACTORY;

 ::feathers::data::ListViewItemState ListView_obj::RESET_ITEM_STATE;

void ListView_obj::defaultUpdateItemRenderer( ::openfl::display::DisplayObject itemRenderer, ::feathers::data::ListViewItemState state){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_183_defaultUpdateItemRenderer)
HXDLIN( 183)		if (::Std_obj::isOfType(itemRenderer,::hx::ClassOf< ::feathers::core::ITextControl >())) {
HXLINE( 184)			::Dynamic textControl =  ::hx::interface_check(itemRenderer,0xfccd2876);
HXLINE( 185)			::feathers::core::ITextControl_obj::set_text(textControl,state->text);
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ListView_obj,defaultUpdateItemRenderer,(void))

void ListView_obj::defaultResetItemRenderer( ::openfl::display::DisplayObject itemRenderer, ::feathers::data::ListViewItemState state){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_190_defaultResetItemRenderer)
HXDLIN( 190)		if (::Std_obj::isOfType(itemRenderer,::hx::ClassOf< ::feathers::core::ITextControl >())) {
HXLINE( 191)			::Dynamic textControl =  ::hx::interface_check(itemRenderer,0xfccd2876);
HXLINE( 192)			::feathers::core::ITextControl_obj::set_text(textControl,null());
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ListView_obj,defaultResetItemRenderer,(void))


void ListView_obj::__alloc_dynamic_functions(::hx::Ctx *_hx_ctx,ListView_obj *_hx_obj) {
	if (!_hx_obj->itemToEnabled.mPtr) _hx_obj->itemToEnabled = new __default_itemToEnabled(_hx_obj);
	if (!_hx_obj->itemToText.mPtr) _hx_obj->itemToText = new __default_itemToText(_hx_obj);
}
::hx::ObjectPtr< ListView_obj > ListView_obj::__new(::Dynamic dataProvider, ::Dynamic changeListener) {
	::hx::ObjectPtr< ListView_obj > __this = new ListView_obj();
	__this->__construct(dataProvider,changeListener);
	return __this;
}

::hx::ObjectPtr< ListView_obj > ListView_obj::__alloc(::hx::Ctx *_hx_ctx,::Dynamic dataProvider, ::Dynamic changeListener) {
	ListView_obj *__this = (ListView_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(ListView_obj), true, "feathers.controls.ListView"));
	*(void **)__this = ListView_obj::_hx_vtable;
	feathers::controls::ListView_obj::__alloc_dynamic_functions(_hx_ctx,__this);
	__this->__construct(dataProvider,changeListener);
	return __this;
}

ListView_obj::ListView_obj()
{
	itemToEnabled = new __default_itemToEnabled(this);
	itemToText = new __default_itemToText(this);
}

void ListView_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(ListView);
	HX_MARK_MEMBER_NAME(listViewPort,"listViewPort");
	HX_MARK_MEMBER_NAME(_childFocusEnabled,"_childFocusEnabled");
	HX_MARK_MEMBER_NAME(_dataProvider,"_dataProvider");
	HX_MARK_MEMBER_NAME(_selectedIndex,"_selectedIndex");
	HX_MARK_MEMBER_NAME(_selectedItem,"_selectedItem");
	HX_MARK_MEMBER_NAME(_allowMultipleSelection,"_allowMultipleSelection");
	HX_MARK_MEMBER_NAME(_selectionAnchorIndex,"_selectionAnchorIndex");
	HX_MARK_MEMBER_NAME(_selectedIndices,"_selectedIndices");
	HX_MARK_MEMBER_NAME(_selectedItems,"_selectedItems");
	HX_MARK_MEMBER_NAME(_previousLayout,"_previousLayout");
	HX_MARK_MEMBER_NAME(_previousCustomItemRendererVariant,"_previousCustomItemRendererVariant");
	HX_MARK_MEMBER_NAME(_forceItemStateUpdate,"_forceItemStateUpdate");
	HX_MARK_MEMBER_NAME(_recyclerMap,"_recyclerMap");
	HX_MARK_MEMBER_NAME(_itemRendererRecyclerIDFunction,"_itemRendererRecyclerIDFunction");
	HX_MARK_MEMBER_NAME(_defaultStorage,"_defaultStorage");
	HX_MARK_MEMBER_NAME(_additionalStorage,"_additionalStorage");
	HX_MARK_MEMBER_NAME(dataToItemRenderer,"dataToItemRenderer");
	HX_MARK_MEMBER_NAME(itemRendererToItemState,"itemRendererToItemState");
	HX_MARK_MEMBER_NAME(itemStatePool,"itemStatePool");
	HX_MARK_MEMBER_NAME(_unrenderedData,"_unrenderedData");
	HX_MARK_MEMBER_NAME(_virtualCache,"_virtualCache");
	HX_MARK_MEMBER_NAME(_visibleIndices,"_visibleIndices");
	HX_MARK_MEMBER_NAME(_tempVisibleIndices,"_tempVisibleIndices");
	HX_MARK_MEMBER_NAME(_layoutItems,"_layoutItems");
	HX_MARK_MEMBER_NAME(_selectable,"_selectable");
	HX_MARK_MEMBER_NAME(_virtualLayout,"_virtualLayout");
	HX_MARK_MEMBER_NAME(pointerSelectionEnabled,"pointerSelectionEnabled");
	HX_MARK_MEMBER_NAME(_pendingScrollIndex,"_pendingScrollIndex");
	HX_MARK_MEMBER_NAME(_pendingScrollDuration,"_pendingScrollDuration");
	HX_MARK_MEMBER_NAME(_ignoreSelectionChange,"_ignoreSelectionChange");
	HX_MARK_MEMBER_NAME(_ignoreLayoutChanges,"_ignoreLayoutChanges");
	HX_MARK_MEMBER_NAME(itemToText,"itemToText");
	HX_MARK_MEMBER_NAME(itemToEnabled,"itemToEnabled");
	HX_MARK_MEMBER_NAME(_hx___layout,"__layout");
	HX_MARK_MEMBER_NAME(_hx___customItemRendererVariant,"__customItemRendererVariant");
	 ::feathers::controls::supportClasses::BaseScrollContainer_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void ListView_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(listViewPort,"listViewPort");
	HX_VISIT_MEMBER_NAME(_childFocusEnabled,"_childFocusEnabled");
	HX_VISIT_MEMBER_NAME(_dataProvider,"_dataProvider");
	HX_VISIT_MEMBER_NAME(_selectedIndex,"_selectedIndex");
	HX_VISIT_MEMBER_NAME(_selectedItem,"_selectedItem");
	HX_VISIT_MEMBER_NAME(_allowMultipleSelection,"_allowMultipleSelection");
	HX_VISIT_MEMBER_NAME(_selectionAnchorIndex,"_selectionAnchorIndex");
	HX_VISIT_MEMBER_NAME(_selectedIndices,"_selectedIndices");
	HX_VISIT_MEMBER_NAME(_selectedItems,"_selectedItems");
	HX_VISIT_MEMBER_NAME(_previousLayout,"_previousLayout");
	HX_VISIT_MEMBER_NAME(_previousCustomItemRendererVariant,"_previousCustomItemRendererVariant");
	HX_VISIT_MEMBER_NAME(_forceItemStateUpdate,"_forceItemStateUpdate");
	HX_VISIT_MEMBER_NAME(_recyclerMap,"_recyclerMap");
	HX_VISIT_MEMBER_NAME(_itemRendererRecyclerIDFunction,"_itemRendererRecyclerIDFunction");
	HX_VISIT_MEMBER_NAME(_defaultStorage,"_defaultStorage");
	HX_VISIT_MEMBER_NAME(_additionalStorage,"_additionalStorage");
	HX_VISIT_MEMBER_NAME(dataToItemRenderer,"dataToItemRenderer");
	HX_VISIT_MEMBER_NAME(itemRendererToItemState,"itemRendererToItemState");
	HX_VISIT_MEMBER_NAME(itemStatePool,"itemStatePool");
	HX_VISIT_MEMBER_NAME(_unrenderedData,"_unrenderedData");
	HX_VISIT_MEMBER_NAME(_virtualCache,"_virtualCache");
	HX_VISIT_MEMBER_NAME(_visibleIndices,"_visibleIndices");
	HX_VISIT_MEMBER_NAME(_tempVisibleIndices,"_tempVisibleIndices");
	HX_VISIT_MEMBER_NAME(_layoutItems,"_layoutItems");
	HX_VISIT_MEMBER_NAME(_selectable,"_selectable");
	HX_VISIT_MEMBER_NAME(_virtualLayout,"_virtualLayout");
	HX_VISIT_MEMBER_NAME(pointerSelectionEnabled,"pointerSelectionEnabled");
	HX_VISIT_MEMBER_NAME(_pendingScrollIndex,"_pendingScrollIndex");
	HX_VISIT_MEMBER_NAME(_pendingScrollDuration,"_pendingScrollDuration");
	HX_VISIT_MEMBER_NAME(_ignoreSelectionChange,"_ignoreSelectionChange");
	HX_VISIT_MEMBER_NAME(_ignoreLayoutChanges,"_ignoreLayoutChanges");
	HX_VISIT_MEMBER_NAME(itemToText,"itemToText");
	HX_VISIT_MEMBER_NAME(itemToEnabled,"itemToEnabled");
	HX_VISIT_MEMBER_NAME(_hx___layout,"__layout");
	HX_VISIT_MEMBER_NAME(_hx___customItemRendererVariant,"__customItemRendererVariant");
	 ::feathers::controls::supportClasses::BaseScrollContainer_obj::__Visit(HX_VISIT_ARG);
}

::hx::Val ListView_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"layout") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_layout() ); }
		if (HX_FIELD_EQ(inName,"update") ) { return ::hx::Val( update_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"__layout") ) { return ::hx::Val( _hx___layout ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"selectable") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_selectable() ); }
		if (HX_FIELD_EQ(inName,"itemToText") ) { return ::hx::Val( itemToText ); }
		if (HX_FIELD_EQ(inName,"get_layout") ) { return ::hx::Val( get_layout_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_layout") ) { return ::hx::Val( set_layout_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"_selectable") ) { return ::hx::Val( _selectable ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"listViewPort") ) { return ::hx::Val( listViewPort ); }
		if (HX_FIELD_EQ(inName,"dataProvider") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_dataProvider() ); }
		if (HX_FIELD_EQ(inName,"selectedItem") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_selectedItem() ); }
		if (HX_FIELD_EQ(inName,"_recyclerMap") ) { return ::hx::Val( _recyclerMap ); }
		if (HX_FIELD_EQ(inName,"_layoutItems") ) { return ::hx::Val( _layoutItems ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"_dataProvider") ) { return ::hx::Val( _dataProvider ); }
		if (HX_FIELD_EQ(inName,"selectedIndex") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_selectedIndex() ); }
		if (HX_FIELD_EQ(inName,"_selectedItem") ) { return ::hx::Val( _selectedItem ); }
		if (HX_FIELD_EQ(inName,"selectedItems") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_selectedItems() ); }
		if (HX_FIELD_EQ(inName,"itemStatePool") ) { return ::hx::Val( itemStatePool ); }
		if (HX_FIELD_EQ(inName,"_virtualCache") ) { return ::hx::Val( _virtualCache ); }
		if (HX_FIELD_EQ(inName,"virtualLayout") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_virtualLayout() ); }
		if (HX_FIELD_EQ(inName,"itemToEnabled") ) { return ::hx::Val( itemToEnabled ); }
		if (HX_FIELD_EQ(inName,"scrollToIndex") ) { return ::hx::Val( scrollToIndex_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"get_tabEnabled") ) { return ::hx::Val( get_tabEnabled_dyn() ); }
		if (HX_FIELD_EQ(inName,"_selectedIndex") ) { return ::hx::Val( _selectedIndex ); }
		if (HX_FIELD_EQ(inName,"_selectedItems") ) { return ::hx::Val( _selectedItems ); }
		if (HX_FIELD_EQ(inName,"get_selectable") ) { return ::hx::Val( get_selectable_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_selectable") ) { return ::hx::Val( set_selectable_dyn() ); }
		if (HX_FIELD_EQ(inName,"_virtualLayout") ) { return ::hx::Val( _virtualLayout ); }
		if (HX_FIELD_EQ(inName,"createScroller") ) { return ::hx::Val( createScroller_dyn() ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"selectedIndices") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_selectedIndices() ); }
		if (HX_FIELD_EQ(inName,"_previousLayout") ) { return ::hx::Val( _previousLayout ); }
		if (HX_FIELD_EQ(inName,"_defaultStorage") ) { return ::hx::Val( _defaultStorage ); }
		if (HX_FIELD_EQ(inName,"_unrenderedData") ) { return ::hx::Val( _unrenderedData ); }
		if (HX_FIELD_EQ(inName,"_visibleIndices") ) { return ::hx::Val( _visibleIndices ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"get_dataProvider") ) { return ::hx::Val( get_dataProvider_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_dataProvider") ) { return ::hx::Val( set_dataProvider_dyn() ); }
		if (HX_FIELD_EQ(inName,"maxSelectedIndex") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_maxSelectedIndex() ); }
		if (HX_FIELD_EQ(inName,"get_selectedItem") ) { return ::hx::Val( get_selectedItem_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_selectedItem") ) { return ::hx::Val( set_selectedItem_dyn() ); }
		if (HX_FIELD_EQ(inName,"_selectedIndices") ) { return ::hx::Val( _selectedIndices ); }
		if (HX_FIELD_EQ(inName,"get_styleContext") ) { return ::hx::Val( get_styleContext_dyn() ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"childFocusEnabled") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_childFocusEnabled() ); }
		if (HX_FIELD_EQ(inName,"get_selectedIndex") ) { return ::hx::Val( get_selectedIndex_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_selectedIndex") ) { return ::hx::Val( set_selectedIndex_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_selectedItems") ) { return ::hx::Val( get_selectedItems_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_selectedItems") ) { return ::hx::Val( set_selectedItems_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_virtualLayout") ) { return ::hx::Val( get_virtualLayout_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_virtualLayout") ) { return ::hx::Val( set_virtualLayout_dyn() ); }
		if (HX_FIELD_EQ(inName,"resetItemRenderer") ) { return ::hx::Val( resetItemRenderer_dyn() ); }
		if (HX_FIELD_EQ(inName,"clearStyle_layout") ) { return ::hx::Val( clearStyle_layout_dyn() ); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"_childFocusEnabled") ) { return ::hx::Val( _childFocusEnabled ); }
		if (HX_FIELD_EQ(inName,"_additionalStorage") ) { return ::hx::Val( _additionalStorage ); }
		if (HX_FIELD_EQ(inName,"dataToItemRenderer") ) { return ::hx::Val( dataToItemRenderer ); }
		if (HX_FIELD_EQ(inName,"itemToItemRenderer") ) { return ::hx::Val( itemToItemRenderer_dyn() ); }
		if (HX_FIELD_EQ(inName,"itemRendererToItem") ) { return ::hx::Val( itemRendererToItem_dyn() ); }
		if (HX_FIELD_EQ(inName,"findUnrenderedData") ) { return ::hx::Val( findUnrenderedData_dyn() ); }
		if (HX_FIELD_EQ(inName,"updateItemRenderer") ) { return ::hx::Val( updateItemRenderer_dyn() ); }
		if (HX_FIELD_EQ(inName,"createItemRenderer") ) { return ::hx::Val( createItemRenderer_dyn() ); }
		if (HX_FIELD_EQ(inName,"itemStateToStorage") ) { return ::hx::Val( itemStateToStorage_dyn() ); }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"get_selectedIndices") ) { return ::hx::Val( get_selectedIndices_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_selectedIndices") ) { return ::hx::Val( set_selectedIndices_dyn() ); }
		if (HX_FIELD_EQ(inName,"_tempVisibleIndices") ) { return ::hx::Val( _tempVisibleIndices ); }
		if (HX_FIELD_EQ(inName,"_pendingScrollIndex") ) { return ::hx::Val( _pendingScrollIndex ); }
		if (HX_FIELD_EQ(inName,"indexToItemRenderer") ) { return ::hx::Val( indexToItemRenderer_dyn() ); }
		if (HX_FIELD_EQ(inName,"destroyItemRenderer") ) { return ::hx::Val( destroyItemRenderer_dyn() ); }
		if (HX_FIELD_EQ(inName,"handlePendingScroll") ) { return ::hx::Val( handlePendingScroll_dyn() ); }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"get_maxSelectedIndex") ) { return ::hx::Val( get_maxSelectedIndex_dyn() ); }
		if (HX_FIELD_EQ(inName,"itemRendererRecycler") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_itemRendererRecycler() ); }
		if (HX_FIELD_EQ(inName,"forceItemStateUpdate") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_forceItemStateUpdate() ); }
		if (HX_FIELD_EQ(inName,"_ignoreLayoutChanges") ) { return ::hx::Val( _ignoreLayoutChanges ); }
		if (HX_FIELD_EQ(inName,"refreshItemRenderers") ) { return ::hx::Val( refreshItemRenderers_dyn() ); }
		if (HX_FIELD_EQ(inName,"renderUnrenderedData") ) { return ::hx::Val( renderUnrenderedData_dyn() ); }
		if (HX_FIELD_EQ(inName,"navigateWithKeyboard") ) { return ::hx::Val( navigateWithKeyboard_dyn() ); }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"get_childFocusEnabled") ) { return ::hx::Val( get_childFocusEnabled_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_childFocusEnabled") ) { return ::hx::Val( set_childFocusEnabled_dyn() ); }
		if (HX_FIELD_EQ(inName,"_selectionAnchorIndex") ) { return ::hx::Val( _selectionAnchorIndex ); }
		if (HX_FIELD_EQ(inName,"_forceItemStateUpdate") ) { return ::hx::Val( _forceItemStateUpdate ); }
		if (HX_FIELD_EQ(inName,"refreshScrollerValues") ) { return ::hx::Val( refreshScrollerValues_dyn() ); }
		if (HX_FIELD_EQ(inName,"handleSelectionChange") ) { return ::hx::Val( handleSelectionChange_dyn() ); }
		break;
	case 22:
		if (HX_FIELD_EQ(inName,"allowMultipleSelection") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_allowMultipleSelection() ); }
		if (HX_FIELD_EQ(inName,"_pendingScrollDuration") ) { return ::hx::Val( _pendingScrollDuration ); }
		if (HX_FIELD_EQ(inName,"_ignoreSelectionChange") ) { return ::hx::Val( _ignoreSelectionChange ); }
		if (HX_FIELD_EQ(inName,"needsScrollMeasurement") ) { return ::hx::Val( needsScrollMeasurement_dyn() ); }
		break;
	case 23:
		if (HX_FIELD_EQ(inName,"_allowMultipleSelection") ) { return ::hx::Val( _allowMultipleSelection ); }
		if (HX_FIELD_EQ(inName,"itemRendererToItemState") ) { return ::hx::Val( itemRendererToItemState ); }
		if (HX_FIELD_EQ(inName,"pointerSelectionEnabled") ) { return ::hx::Val( pointerSelectionEnabled ); }
		if (HX_FIELD_EQ(inName,"getItemRendererRecycler") ) { return ::hx::Val( getItemRendererRecycler_dyn() ); }
		if (HX_FIELD_EQ(inName,"setItemRendererRecycler") ) { return ::hx::Val( setItemRendererRecycler_dyn() ); }
		if (HX_FIELD_EQ(inName,"initializeListViewTheme") ) { return ::hx::Val( initializeListViewTheme_dyn() ); }
		if (HX_FIELD_EQ(inName,"listView_keyDownHandler") ) { return ::hx::Val( listView_keyDownHandler_dyn() ); }
		break;
	case 24:
		if (HX_FIELD_EQ(inName,"get_itemRendererRecycler") ) { return ::hx::Val( get_itemRendererRecycler_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_itemRendererRecycler") ) { return ::hx::Val( set_itemRendererRecycler_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_forceItemStateUpdate") ) { return ::hx::Val( get_forceItemStateUpdate_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_forceItemStateUpdate") ) { return ::hx::Val( set_forceItemStateUpdate_dyn() ); }
		if (HX_FIELD_EQ(inName,"populateCurrentItemState") ) { return ::hx::Val( populateCurrentItemState_dyn() ); }
		break;
	case 25:
		if (HX_FIELD_EQ(inName,"customItemRendererVariant") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_customItemRendererVariant() ); }
		if (HX_FIELD_EQ(inName,"freeInactiveItemRenderers") ) { return ::hx::Val( freeInactiveItemRenderers_dyn() ); }
		break;
	case 26:
		if (HX_FIELD_EQ(inName,"get_allowMultipleSelection") ) { return ::hx::Val( get_allowMultipleSelection_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_allowMultipleSelection") ) { return ::hx::Val( set_allowMultipleSelection_dyn() ); }
		if (HX_FIELD_EQ(inName,"updateItemRendererForIndex") ) { return ::hx::Val( updateItemRendererForIndex_dyn() ); }
		break;
	case 27:
		if (HX_FIELD_EQ(inName,"__customItemRendererVariant") ) { return ::hx::Val( _hx___customItemRendererVariant ); }
		break;
	case 28:
		if (HX_FIELD_EQ(inName,"refreshInactiveItemRenderers") ) { return ::hx::Val( refreshInactiveItemRenderers_dyn() ); }
		if (HX_FIELD_EQ(inName,"recoverInactiveItemRenderers") ) { return ::hx::Val( recoverInactiveItemRenderers_dyn() ); }
		break;
	case 29:
		if (HX_FIELD_EQ(inName,"refreshItemRendererProperties") ) { return ::hx::Val( refreshItemRendererProperties_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_customItemRendererVariant") ) { return ::hx::Val( get_customItemRendererVariant_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_customItemRendererVariant") ) { return ::hx::Val( set_customItemRendererVariant_dyn() ); }
		break;
	case 30:
		if (HX_FIELD_EQ(inName,"itemRendererRecyclerIDFunction") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_itemRendererRecyclerIDFunction() ); }
		break;
	case 31:
		if (HX_FIELD_EQ(inName,"_itemRendererRecyclerIDFunction") ) { return ::hx::Val( _itemRendererRecyclerIDFunction ); }
		break;
	case 34:
		if (HX_FIELD_EQ(inName,"_previousCustomItemRendererVariant") ) { return ::hx::Val( _previousCustomItemRendererVariant ); }
		if (HX_FIELD_EQ(inName,"get_itemRendererRecyclerIDFunction") ) { return ::hx::Val( get_itemRendererRecyclerIDFunction_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_itemRendererRecyclerIDFunction") ) { return ::hx::Val( set_itemRendererRecyclerIDFunction_dyn() ); }
		if (HX_FIELD_EQ(inName,"listView_itemRenderer_clickHandler") ) { return ::hx::Val( listView_itemRenderer_clickHandler_dyn() ); }
		if (HX_FIELD_EQ(inName,"listView_dataProvider_resetHandler") ) { return ::hx::Val( listView_dataProvider_resetHandler_dyn() ); }
		if (HX_FIELD_EQ(inName,"baseScrollContainer_keyDownHandler") ) { return ::hx::Val( baseScrollContainer_keyDownHandler_dyn() ); }
		break;
	case 35:
		if (HX_FIELD_EQ(inName,"listView_itemRenderer_resizeHandler") ) { return ::hx::Val( listView_itemRenderer_resizeHandler_dyn() ); }
		if (HX_FIELD_EQ(inName,"listView_itemRenderer_changeHandler") ) { return ::hx::Val( listView_itemRenderer_changeHandler_dyn() ); }
		if (HX_FIELD_EQ(inName,"listView_dataProvider_changeHandler") ) { return ::hx::Val( listView_dataProvider_changeHandler_dyn() ); }
		break;
	case 36:
		if (HX_FIELD_EQ(inName,"listView_itemRenderer_triggerHandler") ) { return ::hx::Val( listView_itemRenderer_triggerHandler_dyn() ); }
		if (HX_FIELD_EQ(inName,"listView_dataProvider_addItemHandler") ) { return ::hx::Val( listView_dataProvider_addItemHandler_dyn() ); }
		if (HX_FIELD_EQ(inName,"clearStyle_customItemRendererVariant") ) { return ::hx::Val( clearStyle_customItemRendererVariant_dyn() ); }
		break;
	case 37:
		if (HX_FIELD_EQ(inName,"listView_itemRenderer_touchTapHandler") ) { return ::hx::Val( listView_itemRenderer_touchTapHandler_dyn() ); }
		break;
	case 38:
		if (HX_FIELD_EQ(inName,"listView_dataProvider_removeAllHandler") ) { return ::hx::Val( listView_dataProvider_removeAllHandler_dyn() ); }
		if (HX_FIELD_EQ(inName,"listView_dataProvider_updateAllHandler") ) { return ::hx::Val( listView_dataProvider_updateAllHandler_dyn() ); }
		break;
	case 39:
		if (HX_FIELD_EQ(inName,"refreshSelectedIndicesAfterFilterOrSort") ) { return ::hx::Val( refreshSelectedIndicesAfterFilterOrSort_dyn() ); }
		if (HX_FIELD_EQ(inName,"listView_dataProvider_removeItemHandler") ) { return ::hx::Val( listView_dataProvider_removeItemHandler_dyn() ); }
		if (HX_FIELD_EQ(inName,"listView_dataProvider_sortChangeHandler") ) { return ::hx::Val( listView_dataProvider_sortChangeHandler_dyn() ); }
		if (HX_FIELD_EQ(inName,"listView_dataProvider_updateItemHandler") ) { return ::hx::Val( listView_dataProvider_updateItemHandler_dyn() ); }
		break;
	case 40:
		if (HX_FIELD_EQ(inName,"listView_dataProvider_replaceItemHandler") ) { return ::hx::Val( listView_dataProvider_replaceItemHandler_dyn() ); }
		break;
	case 41:
		if (HX_FIELD_EQ(inName,"listView_dataProvider_filterChangeHandler") ) { return ::hx::Val( listView_dataProvider_filterChangeHandler_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool ListView_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 14:
		if (HX_FIELD_EQ(inName,"VARIANT_BORDER") ) { outValue = ( VARIANT_BORDER ); return true; }
		if (HX_FIELD_EQ(inName,"VARIANT_POP_UP") ) { outValue = ( VARIANT_POP_UP ); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"RESET_ITEM_STATE") ) { outValue = ( RESET_ITEM_STATE ); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"VARIANT_BORDERLESS") ) { outValue = ( VARIANT_BORDERLESS ); return true; }
		break;
	case 24:
		if (HX_FIELD_EQ(inName,"defaultResetItemRenderer") ) { outValue = defaultResetItemRenderer_dyn(); return true; }
		break;
	case 25:
		if (HX_FIELD_EQ(inName,"defaultUpdateItemRenderer") ) { outValue = defaultUpdateItemRenderer_dyn(); return true; }
		break;
	case 27:
		if (HX_FIELD_EQ(inName,"CHILD_VARIANT_ITEM_RENDERER") ) { outValue = ( CHILD_VARIANT_ITEM_RENDERER ); return true; }
		break;
	case 39:
		if (HX_FIELD_EQ(inName,"INVALIDATION_FLAG_ITEM_RENDERER_FACTORY") ) { outValue = ( INVALIDATION_FLAG_ITEM_RENDERER_FACTORY ); return true; }
	}
	return false;
}

::hx::Val ListView_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"layout") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_layout(inValue.Cast< ::Dynamic >()) ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"__layout") ) { _hx___layout=inValue.Cast< ::Dynamic >(); return inValue; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"selectable") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_selectable(inValue.Cast< bool >()) ); }
		if (HX_FIELD_EQ(inName,"itemToText") ) { itemToText=inValue.Cast<  ::Dynamic >(); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"_selectable") ) { _selectable=inValue.Cast< bool >(); return inValue; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"listViewPort") ) { listViewPort=inValue.Cast<  ::feathers::controls::supportClasses::AdvancedLayoutViewPort >(); return inValue; }
		if (HX_FIELD_EQ(inName,"dataProvider") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_dataProvider(inValue.Cast< ::Dynamic >()) ); }
		if (HX_FIELD_EQ(inName,"selectedItem") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_selectedItem(inValue.Cast<  ::Dynamic >()) ); }
		if (HX_FIELD_EQ(inName,"_recyclerMap") ) { _recyclerMap=inValue.Cast<  ::haxe::ds::StringMap >(); return inValue; }
		if (HX_FIELD_EQ(inName,"_layoutItems") ) { _layoutItems=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"_dataProvider") ) { _dataProvider=inValue.Cast< ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"selectedIndex") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_selectedIndex(inValue.Cast< int >()) ); }
		if (HX_FIELD_EQ(inName,"_selectedItem") ) { _selectedItem=inValue.Cast<  ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"selectedItems") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_selectedItems(inValue.Cast< ::cpp::VirtualArray >()) ); }
		if (HX_FIELD_EQ(inName,"itemStatePool") ) { itemStatePool=inValue.Cast<  ::lime::utils::ObjectPool_feathers_data_ListViewItemState >(); return inValue; }
		if (HX_FIELD_EQ(inName,"_virtualCache") ) { _virtualCache=inValue.Cast< ::cpp::VirtualArray >(); return inValue; }
		if (HX_FIELD_EQ(inName,"virtualLayout") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_virtualLayout(inValue.Cast< bool >()) ); }
		if (HX_FIELD_EQ(inName,"itemToEnabled") ) { itemToEnabled=inValue.Cast<  ::Dynamic >(); return inValue; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"_selectedIndex") ) { _selectedIndex=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"_selectedItems") ) { _selectedItems=inValue.Cast< ::cpp::VirtualArray >(); return inValue; }
		if (HX_FIELD_EQ(inName,"_virtualLayout") ) { _virtualLayout=inValue.Cast< bool >(); return inValue; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"selectedIndices") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_selectedIndices(inValue.Cast< ::Array< int > >()) ); }
		if (HX_FIELD_EQ(inName,"_previousLayout") ) { _previousLayout=inValue.Cast< ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"_defaultStorage") ) { _defaultStorage=inValue.Cast<  ::feathers::controls::_ListView::ItemRendererStorage >(); return inValue; }
		if (HX_FIELD_EQ(inName,"_unrenderedData") ) { _unrenderedData=inValue.Cast< ::cpp::VirtualArray >(); return inValue; }
		if (HX_FIELD_EQ(inName,"_visibleIndices") ) { _visibleIndices=inValue.Cast<  ::feathers::layout::VirtualLayoutRange >(); return inValue; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"_selectedIndices") ) { _selectedIndices=inValue.Cast< ::Array< int > >(); return inValue; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"childFocusEnabled") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_childFocusEnabled(inValue.Cast< bool >()) ); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"_childFocusEnabled") ) { _childFocusEnabled=inValue.Cast< bool >(); return inValue; }
		if (HX_FIELD_EQ(inName,"_additionalStorage") ) { _additionalStorage=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		if (HX_FIELD_EQ(inName,"dataToItemRenderer") ) { dataToItemRenderer=inValue.Cast<  ::haxe::ds::ObjectMap >(); return inValue; }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"_tempVisibleIndices") ) { _tempVisibleIndices=inValue.Cast<  ::feathers::layout::VirtualLayoutRange >(); return inValue; }
		if (HX_FIELD_EQ(inName,"_pendingScrollIndex") ) { _pendingScrollIndex=inValue.Cast< int >(); return inValue; }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"itemRendererRecycler") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_itemRendererRecycler(inValue.Cast<  ::feathers::utils::DisplayObjectRecycler >()) ); }
		if (HX_FIELD_EQ(inName,"forceItemStateUpdate") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_forceItemStateUpdate(inValue.Cast< bool >()) ); }
		if (HX_FIELD_EQ(inName,"_ignoreLayoutChanges") ) { _ignoreLayoutChanges=inValue.Cast< bool >(); return inValue; }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"_selectionAnchorIndex") ) { _selectionAnchorIndex=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"_forceItemStateUpdate") ) { _forceItemStateUpdate=inValue.Cast< bool >(); return inValue; }
		break;
	case 22:
		if (HX_FIELD_EQ(inName,"allowMultipleSelection") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_allowMultipleSelection(inValue.Cast< bool >()) ); }
		if (HX_FIELD_EQ(inName,"_pendingScrollDuration") ) { _pendingScrollDuration=inValue.Cast<  ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"_ignoreSelectionChange") ) { _ignoreSelectionChange=inValue.Cast< bool >(); return inValue; }
		break;
	case 23:
		if (HX_FIELD_EQ(inName,"_allowMultipleSelection") ) { _allowMultipleSelection=inValue.Cast< bool >(); return inValue; }
		if (HX_FIELD_EQ(inName,"itemRendererToItemState") ) { itemRendererToItemState=inValue.Cast<  ::haxe::ds::ObjectMap >(); return inValue; }
		if (HX_FIELD_EQ(inName,"pointerSelectionEnabled") ) { pointerSelectionEnabled=inValue.Cast< bool >(); return inValue; }
		break;
	case 25:
		if (HX_FIELD_EQ(inName,"customItemRendererVariant") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_customItemRendererVariant(inValue.Cast< ::String >()) ); }
		break;
	case 27:
		if (HX_FIELD_EQ(inName,"__customItemRendererVariant") ) { _hx___customItemRendererVariant=inValue.Cast< ::String >(); return inValue; }
		break;
	case 30:
		if (HX_FIELD_EQ(inName,"itemRendererRecyclerIDFunction") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_itemRendererRecyclerIDFunction(inValue.Cast<  ::Dynamic >()) ); }
		break;
	case 31:
		if (HX_FIELD_EQ(inName,"_itemRendererRecyclerIDFunction") ) { _itemRendererRecyclerIDFunction=inValue.Cast<  ::Dynamic >(); return inValue; }
		break;
	case 34:
		if (HX_FIELD_EQ(inName,"_previousCustomItemRendererVariant") ) { _previousCustomItemRendererVariant=inValue.Cast< ::String >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

bool ListView_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 14:
		if (HX_FIELD_EQ(inName,"VARIANT_BORDER") ) { VARIANT_BORDER=ioValue.Cast< ::String >(); return true; }
		if (HX_FIELD_EQ(inName,"VARIANT_POP_UP") ) { VARIANT_POP_UP=ioValue.Cast< ::String >(); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"RESET_ITEM_STATE") ) { RESET_ITEM_STATE=ioValue.Cast<  ::feathers::data::ListViewItemState >(); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"VARIANT_BORDERLESS") ) { VARIANT_BORDERLESS=ioValue.Cast< ::String >(); return true; }
		break;
	case 27:
		if (HX_FIELD_EQ(inName,"CHILD_VARIANT_ITEM_RENDERER") ) { CHILD_VARIANT_ITEM_RENDERER=ioValue.Cast< ::String >(); return true; }
		break;
	case 39:
		if (HX_FIELD_EQ(inName,"INVALIDATION_FLAG_ITEM_RENDERER_FACTORY") ) { INVALIDATION_FLAG_ITEM_RENDERER_FACTORY=ioValue.Cast<  ::feathers::core::InvalidationFlag >(); return true; }
	}
	return false;
}

void ListView_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("listViewPort",04,df,03,f0));
	outFields->push(HX_("_childFocusEnabled",06,8c,8a,7b));
	outFields->push(HX_("childFocusEnabled",45,e7,74,a8));
	outFields->push(HX_("_dataProvider",5a,d0,9e,71));
	outFields->push(HX_("dataProvider",7b,3d,30,8f));
	outFields->push(HX_("_selectedIndex",f8,66,a8,f2));
	outFields->push(HX_("selectedIndex",b7,76,56,b4));
	outFields->push(HX_("maxSelectedIndex",73,e5,5e,80));
	outFields->push(HX_("_selectedItem",ed,77,c8,b8));
	outFields->push(HX_("selectedItem",0e,e5,59,d6));
	outFields->push(HX_("_allowMultipleSelection",f2,24,49,a0));
	outFields->push(HX_("allowMultipleSelection",53,a5,70,0d));
	outFields->push(HX_("_selectionAnchorIndex",50,fd,d9,cf));
	outFields->push(HX_("_selectedIndices",8d,58,5f,3d));
	outFields->push(HX_("selectedIndices",0c,16,80,52));
	outFields->push(HX_("_selectedItems",e6,77,a0,f6));
	outFields->push(HX_("selectedItems",a5,87,4e,b8));
	outFields->push(HX_("_previousLayout",e0,aa,af,90));
	outFields->push(HX_("layout",aa,ae,b8,58));
	outFields->push(HX_("_previousCustomItemRendererVariant",08,72,25,2a));
	outFields->push(HX_("customItemRendererVariant",7e,34,14,25));
	outFields->push(HX_("itemRendererRecycler",95,34,f8,23));
	outFields->push(HX_("_forceItemStateUpdate",db,28,aa,f1));
	outFields->push(HX_("forceItemStateUpdate",fc,1e,0f,83));
	outFields->push(HX_("_recyclerMap",de,d8,0f,f9));
	outFields->push(HX_("_defaultStorage",19,81,49,bd));
	outFields->push(HX_("_additionalStorage",d5,ad,91,7f));
	outFields->push(HX_("dataToItemRenderer",5b,2f,03,01));
	outFields->push(HX_("itemRendererToItemState",2d,fd,ad,c0));
	outFields->push(HX_("itemStatePool",fa,5f,fd,ec));
	outFields->push(HX_("_unrenderedData",77,d6,68,99));
	outFields->push(HX_("_virtualCache",16,37,ef,2a));
	outFields->push(HX_("_visibleIndices",74,11,57,e1));
	outFields->push(HX_("_tempVisibleIndices",28,5f,38,1f));
	outFields->push(HX_("_layoutItems",f7,b2,ff,d8));
	outFields->push(HX_("_selectable",b5,83,b4,96));
	outFields->push(HX_("selectable",96,b6,2a,c4));
	outFields->push(HX_("_virtualLayout",56,4b,27,0e));
	outFields->push(HX_("virtualLayout",15,5b,d5,cf));
	outFields->push(HX_("pointerSelectionEnabled",72,bc,ce,f6));
	outFields->push(HX_("_pendingScrollIndex",cd,a8,b7,90));
	outFields->push(HX_("_pendingScrollDuration",79,08,2c,5d));
	outFields->push(HX_("_ignoreSelectionChange",2b,2b,f7,83));
	outFields->push(HX_("_ignoreLayoutChanges",08,9e,67,16));
	outFields->push(HX_("__layout",ca,19,e8,00));
	outFields->push(HX_("__customItemRendererVariant",5e,3d,a8,93));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo ListView_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::feathers::controls::supportClasses::AdvancedLayoutViewPort */ ,(int)offsetof(ListView_obj,listViewPort),HX_("listViewPort",04,df,03,f0)},
	{::hx::fsBool,(int)offsetof(ListView_obj,_childFocusEnabled),HX_("_childFocusEnabled",06,8c,8a,7b)},
	{::hx::fsObject /* ::Dynamic */ ,(int)offsetof(ListView_obj,_dataProvider),HX_("_dataProvider",5a,d0,9e,71)},
	{::hx::fsInt,(int)offsetof(ListView_obj,_selectedIndex),HX_("_selectedIndex",f8,66,a8,f2)},
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(ListView_obj,_selectedItem),HX_("_selectedItem",ed,77,c8,b8)},
	{::hx::fsBool,(int)offsetof(ListView_obj,_allowMultipleSelection),HX_("_allowMultipleSelection",f2,24,49,a0)},
	{::hx::fsInt,(int)offsetof(ListView_obj,_selectionAnchorIndex),HX_("_selectionAnchorIndex",50,fd,d9,cf)},
	{::hx::fsObject /* ::Array< int > */ ,(int)offsetof(ListView_obj,_selectedIndices),HX_("_selectedIndices",8d,58,5f,3d)},
	{::hx::fsObject /* ::cpp::VirtualArray */ ,(int)offsetof(ListView_obj,_selectedItems),HX_("_selectedItems",e6,77,a0,f6)},
	{::hx::fsObject /* ::Dynamic */ ,(int)offsetof(ListView_obj,_previousLayout),HX_("_previousLayout",e0,aa,af,90)},
	{::hx::fsString,(int)offsetof(ListView_obj,_previousCustomItemRendererVariant),HX_("_previousCustomItemRendererVariant",08,72,25,2a)},
	{::hx::fsBool,(int)offsetof(ListView_obj,_forceItemStateUpdate),HX_("_forceItemStateUpdate",db,28,aa,f1)},
	{::hx::fsObject /*  ::haxe::ds::StringMap */ ,(int)offsetof(ListView_obj,_recyclerMap),HX_("_recyclerMap",de,d8,0f,f9)},
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(ListView_obj,_itemRendererRecyclerIDFunction),HX_("_itemRendererRecyclerIDFunction",87,d1,75,b6)},
	{::hx::fsObject /*  ::feathers::controls::_ListView::ItemRendererStorage */ ,(int)offsetof(ListView_obj,_defaultStorage),HX_("_defaultStorage",19,81,49,bd)},
	{::hx::fsObject /* ::Array< ::Dynamic> */ ,(int)offsetof(ListView_obj,_additionalStorage),HX_("_additionalStorage",d5,ad,91,7f)},
	{::hx::fsObject /*  ::haxe::ds::ObjectMap */ ,(int)offsetof(ListView_obj,dataToItemRenderer),HX_("dataToItemRenderer",5b,2f,03,01)},
	{::hx::fsObject /*  ::haxe::ds::ObjectMap */ ,(int)offsetof(ListView_obj,itemRendererToItemState),HX_("itemRendererToItemState",2d,fd,ad,c0)},
	{::hx::fsObject /*  ::lime::utils::ObjectPool_feathers_data_ListViewItemState */ ,(int)offsetof(ListView_obj,itemStatePool),HX_("itemStatePool",fa,5f,fd,ec)},
	{::hx::fsObject /* ::cpp::VirtualArray */ ,(int)offsetof(ListView_obj,_unrenderedData),HX_("_unrenderedData",77,d6,68,99)},
	{::hx::fsObject /* ::cpp::VirtualArray */ ,(int)offsetof(ListView_obj,_virtualCache),HX_("_virtualCache",16,37,ef,2a)},
	{::hx::fsObject /*  ::feathers::layout::VirtualLayoutRange */ ,(int)offsetof(ListView_obj,_visibleIndices),HX_("_visibleIndices",74,11,57,e1)},
	{::hx::fsObject /*  ::feathers::layout::VirtualLayoutRange */ ,(int)offsetof(ListView_obj,_tempVisibleIndices),HX_("_tempVisibleIndices",28,5f,38,1f)},
	{::hx::fsObject /* ::Array< ::Dynamic> */ ,(int)offsetof(ListView_obj,_layoutItems),HX_("_layoutItems",f7,b2,ff,d8)},
	{::hx::fsBool,(int)offsetof(ListView_obj,_selectable),HX_("_selectable",b5,83,b4,96)},
	{::hx::fsBool,(int)offsetof(ListView_obj,_virtualLayout),HX_("_virtualLayout",56,4b,27,0e)},
	{::hx::fsBool,(int)offsetof(ListView_obj,pointerSelectionEnabled),HX_("pointerSelectionEnabled",72,bc,ce,f6)},
	{::hx::fsInt,(int)offsetof(ListView_obj,_pendingScrollIndex),HX_("_pendingScrollIndex",cd,a8,b7,90)},
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(ListView_obj,_pendingScrollDuration),HX_("_pendingScrollDuration",79,08,2c,5d)},
	{::hx::fsBool,(int)offsetof(ListView_obj,_ignoreSelectionChange),HX_("_ignoreSelectionChange",2b,2b,f7,83)},
	{::hx::fsBool,(int)offsetof(ListView_obj,_ignoreLayoutChanges),HX_("_ignoreLayoutChanges",08,9e,67,16)},
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(ListView_obj,itemToText),HX_("itemToText",3b,01,c1,70)},
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(ListView_obj,itemToEnabled),HX_("itemToEnabled",b3,9c,be,6d)},
	{::hx::fsObject /* ::Dynamic */ ,(int)offsetof(ListView_obj,_hx___layout),HX_("__layout",ca,19,e8,00)},
	{::hx::fsString,(int)offsetof(ListView_obj,_hx___customItemRendererVariant),HX_("__customItemRendererVariant",5e,3d,a8,93)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo ListView_obj_sStaticStorageInfo[] = {
	{::hx::fsString,(void *) &ListView_obj::VARIANT_BORDERLESS,HX_("VARIANT_BORDERLESS",1f,33,25,d4)},
	{::hx::fsString,(void *) &ListView_obj::VARIANT_BORDER,HX_("VARIANT_BORDER",c6,7c,ef,4c)},
	{::hx::fsString,(void *) &ListView_obj::VARIANT_POP_UP,HX_("VARIANT_POP_UP",83,a7,b0,e4)},
	{::hx::fsString,(void *) &ListView_obj::CHILD_VARIANT_ITEM_RENDERER,HX_("CHILD_VARIANT_ITEM_RENDERER",52,88,4c,07)},
	{::hx::fsObject /*  ::feathers::core::InvalidationFlag */ ,(void *) &ListView_obj::INVALIDATION_FLAG_ITEM_RENDERER_FACTORY,HX_("INVALIDATION_FLAG_ITEM_RENDERER_FACTORY",c8,93,28,cb)},
	{::hx::fsObject /*  ::feathers::data::ListViewItemState */ ,(void *) &ListView_obj::RESET_ITEM_STATE,HX_("RESET_ITEM_STATE",55,ee,8d,3c)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static ::String ListView_obj_sMemberFields[] = {
	HX_("listViewPort",04,df,03,f0),
	HX_("get_tabEnabled",f5,7e,fe,b5),
	HX_("_childFocusEnabled",06,8c,8a,7b),
	HX_("get_childFocusEnabled",1c,ea,22,27),
	HX_("set_childFocusEnabled",28,b8,2b,7b),
	HX_("_dataProvider",5a,d0,9e,71),
	HX_("get_dataProvider",04,2a,cf,93),
	HX_("set_dataProvider",78,17,11,ea),
	HX_("_selectedIndex",f8,66,a8,f2),
	HX_("get_selectedIndex",0e,82,c6,ba),
	HX_("set_selectedIndex",1a,5a,34,de),
	HX_("get_maxSelectedIndex",7c,4a,c9,9e),
	HX_("_selectedItem",ed,77,c8,b8),
	HX_("get_selectedItem",97,d1,f8,da),
	HX_("set_selectedItem",0b,bf,3a,31),
	HX_("_allowMultipleSelection",f2,24,49,a0),
	HX_("get_allowMultipleSelection",1c,f7,75,45),
	HX_("set_allowMultipleSelection",90,bd,0a,a5),
	HX_("_selectionAnchorIndex",50,fd,d9,cf),
	HX_("_selectedIndices",8d,58,5f,3d),
	HX_("get_selectedIndices",23,e5,8a,dd),
	HX_("set_selectedIndices",2f,d8,27,1a),
	HX_("_selectedItems",e6,77,a0,f6),
	HX_("get_selectedItems",fc,92,be,be),
	HX_("set_selectedItems",08,6b,2c,e2),
	HX_("_previousLayout",e0,aa,af,90),
	HX_("_previousCustomItemRendererVariant",08,72,25,2a),
	HX_("get_itemRendererRecycler",1e,52,94,66),
	HX_("set_itemRendererRecycler",92,d3,6e,79),
	HX_("_forceItemStateUpdate",db,28,aa,f1),
	HX_("get_forceItemStateUpdate",85,3c,ab,c5),
	HX_("set_forceItemStateUpdate",f9,bd,85,d8),
	HX_("_recyclerMap",de,d8,0f,f9),
	HX_("_itemRendererRecyclerIDFunction",87,d1,75,b6),
	HX_("get_itemRendererRecyclerIDFunction",b1,dd,5f,0b),
	HX_("set_itemRendererRecyclerIDFunction",25,38,8e,6b),
	HX_("_defaultStorage",19,81,49,bd),
	HX_("_additionalStorage",d5,ad,91,7f),
	HX_("dataToItemRenderer",5b,2f,03,01),
	HX_("itemRendererToItemState",2d,fd,ad,c0),
	HX_("itemStatePool",fa,5f,fd,ec),
	HX_("_unrenderedData",77,d6,68,99),
	HX_("_virtualCache",16,37,ef,2a),
	HX_("_visibleIndices",74,11,57,e1),
	HX_("_tempVisibleIndices",28,5f,38,1f),
	HX_("_layoutItems",f7,b2,ff,d8),
	HX_("_selectable",b5,83,b4,96),
	HX_("get_selectable",df,3e,20,3a),
	HX_("set_selectable",53,27,40,5a),
	HX_("_virtualLayout",56,4b,27,0e),
	HX_("get_virtualLayout",6c,66,45,d6),
	HX_("set_virtualLayout",78,3e,b3,f9),
	HX_("pointerSelectionEnabled",72,bc,ce,f6),
	HX_("_pendingScrollIndex",cd,a8,b7,90),
	HX_("_pendingScrollDuration",79,08,2c,5d),
	HX_("_ignoreSelectionChange",2b,2b,f7,83),
	HX_("_ignoreLayoutChanges",08,9e,67,16),
	HX_("itemToText",3b,01,c1,70),
	HX_("itemToEnabled",b3,9c,be,6d),
	HX_("scrollToIndex",0a,03,e0,fc),
	HX_("itemToItemRenderer",04,84,08,65),
	HX_("itemRendererToItem",44,32,9a,f0),
	HX_("indexToItemRenderer",43,3a,ec,0a),
	HX_("getItemRendererRecycler",4b,30,60,60),
	HX_("setItemRendererRecycler",57,99,c1,62),
	HX_("initializeListViewTheme",b6,c1,c3,21),
	HX_("update",09,86,05,87),
	HX_("createScroller",d6,8c,8f,de),
	HX_("refreshScrollerValues",77,64,22,59),
	HX_("needsScrollMeasurement",d2,e8,0a,41),
	HX_("refreshItemRenderers",62,5f,2c,aa),
	HX_("refreshInactiveItemRenderers",f7,3d,91,93),
	HX_("recoverInactiveItemRenderers",8e,2a,e9,f8),
	HX_("freeInactiveItemRenderers",86,f3,96,5b),
	HX_("findUnrenderedData",f1,83,2c,cd),
	HX_("populateCurrentItemState",8f,df,43,33),
	HX_("resetItemRenderer",e5,a1,4e,9c),
	HX_("updateItemRenderer",1f,4d,12,0f),
	HX_("refreshItemRendererProperties",44,cb,9d,e5),
	HX_("renderUnrenderedData",ce,77,94,8d),
	HX_("createItemRenderer",92,4e,23,91),
	HX_("destroyItemRenderer",90,19,2a,68),
	HX_("itemStateToStorage",22,ab,c8,e1),
	HX_("refreshSelectedIndicesAfterFilterOrSort",84,7a,3b,6e),
	HX_("handleSelectionChange",14,20,e0,b6),
	HX_("handlePendingScroll",fc,e2,6e,4a),
	HX_("listView_itemRenderer_touchTapHandler",59,b7,29,b5),
	HX_("listView_itemRenderer_clickHandler",6f,23,de,cd),
	HX_("listView_itemRenderer_triggerHandler",bf,e5,26,a7),
	HX_("listView_itemRenderer_resizeHandler",89,60,58,7a),
	HX_("listView_itemRenderer_changeHandler",8d,50,35,33),
	HX_("listView_dataProvider_changeHandler",52,9b,ff,28),
	HX_("listView_dataProvider_addItemHandler",3e,20,f8,c1),
	HX_("listView_dataProvider_removeItemHandler",2b,78,cb,73),
	HX_("listView_dataProvider_replaceItemHandler",0b,c1,53,e8),
	HX_("listView_dataProvider_removeAllHandler",f5,09,f6,a6),
	HX_("listView_dataProvider_resetHandler",a3,19,3e,ee),
	HX_("listView_dataProvider_sortChangeHandler",14,6d,3d,c4),
	HX_("listView_dataProvider_filterChangeHandler",7a,ba,f9,3f),
	HX_("updateItemRendererForIndex",88,e3,6d,2a),
	HX_("listView_dataProvider_updateItemHandler",86,8a,e4,1d),
	HX_("listView_dataProvider_updateAllHandler",fa,bb,38,37),
	HX_("navigateWithKeyboard",9e,b5,6c,b5),
	HX_("baseScrollContainer_keyDownHandler",c5,d5,d2,43),
	HX_("listView_keyDownHandler",45,32,c2,de),
	HX_("get_styleContext",47,7d,20,4b),
	HX_("__layout",ca,19,e8,00),
	HX_("get_layout",73,1e,40,49),
	HX_("set_layout",e7,bc,bd,4c),
	HX_("clearStyle_layout",65,f0,40,36),
	HX_("__customItemRendererVariant",5e,3d,a8,93),
	HX_("get_customItemRendererVariant",55,66,53,0d),
	HX_("set_customItemRendererVariant",61,20,2b,cf),
	HX_("clearStyle_customItemRendererVariant",a3,d3,dc,35),
	::String(null()) };

static void ListView_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(ListView_obj::VARIANT_BORDERLESS,"VARIANT_BORDERLESS");
	HX_MARK_MEMBER_NAME(ListView_obj::VARIANT_BORDER,"VARIANT_BORDER");
	HX_MARK_MEMBER_NAME(ListView_obj::VARIANT_POP_UP,"VARIANT_POP_UP");
	HX_MARK_MEMBER_NAME(ListView_obj::CHILD_VARIANT_ITEM_RENDERER,"CHILD_VARIANT_ITEM_RENDERER");
	HX_MARK_MEMBER_NAME(ListView_obj::INVALIDATION_FLAG_ITEM_RENDERER_FACTORY,"INVALIDATION_FLAG_ITEM_RENDERER_FACTORY");
	HX_MARK_MEMBER_NAME(ListView_obj::RESET_ITEM_STATE,"RESET_ITEM_STATE");
};

#ifdef HXCPP_VISIT_ALLOCS
static void ListView_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(ListView_obj::VARIANT_BORDERLESS,"VARIANT_BORDERLESS");
	HX_VISIT_MEMBER_NAME(ListView_obj::VARIANT_BORDER,"VARIANT_BORDER");
	HX_VISIT_MEMBER_NAME(ListView_obj::VARIANT_POP_UP,"VARIANT_POP_UP");
	HX_VISIT_MEMBER_NAME(ListView_obj::CHILD_VARIANT_ITEM_RENDERER,"CHILD_VARIANT_ITEM_RENDERER");
	HX_VISIT_MEMBER_NAME(ListView_obj::INVALIDATION_FLAG_ITEM_RENDERER_FACTORY,"INVALIDATION_FLAG_ITEM_RENDERER_FACTORY");
	HX_VISIT_MEMBER_NAME(ListView_obj::RESET_ITEM_STATE,"RESET_ITEM_STATE");
};

#endif

::hx::Class ListView_obj::__mClass;

static ::String ListView_obj_sStaticFields[] = {
	HX_("VARIANT_BORDERLESS",1f,33,25,d4),
	HX_("VARIANT_BORDER",c6,7c,ef,4c),
	HX_("VARIANT_POP_UP",83,a7,b0,e4),
	HX_("CHILD_VARIANT_ITEM_RENDERER",52,88,4c,07),
	HX_("INVALIDATION_FLAG_ITEM_RENDERER_FACTORY",c8,93,28,cb),
	HX_("RESET_ITEM_STATE",55,ee,8d,3c),
	HX_("defaultUpdateItemRenderer",40,8e,0a,63),
	HX_("defaultResetItemRenderer",e4,9f,94,65),
	::String(null())
};

void ListView_obj::__register()
{
	ListView_obj _hx_dummy;
	ListView_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("feathers.controls.ListView",fd,53,9f,17);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &ListView_obj::__GetStatic;
	__mClass->mSetStaticField = &ListView_obj::__SetStatic;
	__mClass->mMarkFunc = ListView_obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(ListView_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(ListView_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< ListView_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = ListView_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ListView_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ListView_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void ListView_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_110_boot)
HXDLIN( 110)		__mClass->__meta__ =  ::Dynamic(::hx::Anon_obj::Create(1)
            			->setFixed(0,HX_("obj",f7,8f,54,00), ::Dynamic(::hx::Anon_obj::Create(1)
            				->setFixed(0,HX_("defaultXmlProperty",0b,06,d9,8a),::cpp::VirtualArray_obj::__new(1)->init(0,HX_("dataProvider",7b,3d,30,8f))))));
            	}
{
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_127_boot)
HXDLIN( 127)		VARIANT_BORDERLESS = HX_("borderless",45,46,71,17);
            	}
{
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_145_boot)
HXDLIN( 145)		VARIANT_BORDER = HX_("border",ec,4c,1a,64);
            	}
{
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_162_boot)
HXDLIN( 162)		VARIANT_POP_UP = HX_("popUp",4c,ee,94,c6);
            	}
{
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_176_boot)
HXDLIN( 176)		CHILD_VARIANT_ITEM_RENDERER = HX_("listView_itemRenderer",92,f0,b3,fd);
            	}
{
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_178_boot)
HXDLIN( 178)		INVALIDATION_FLAG_ITEM_RENDERER_FACTORY = ::feathers::core::InvalidationFlag_obj::CUSTOM(HX_("itemRendererFactory",f4,ed,98,af));
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_c5852abc10682dee_180_boot)
HXDLIN( 180)		RESET_ITEM_STATE =  ::feathers::data::ListViewItemState_obj::__alloc( HX_CTX ,null(),null(),null(),null());
            	}
}

} // end namespace feathers
} // end namespace controls
